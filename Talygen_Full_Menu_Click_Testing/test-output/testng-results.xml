<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="25" total="270" passed="233" failed="5" skipped="7">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-09T09:50:00 IST" name="Suite" finished-at="2022-11-09T13:40:02 IST" duration-ms="13801621">
    <groups>
    </groups>
    <test started-at="2022-11-09T09:50:00 IST" name="Test" finished-at="2022-11-09T13:40:02 IST" duration-ms="13801621">
      <class name="testcases.TimeTrackingTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:33:31 IST" name="setUp" finished-at="2022-11-09T12:33:41 IST" duration-ms="9869" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:33:41 IST" name="beforeMethod" finished-at="2022-11-09T12:33:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfAuditRulePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAuditRulePage()[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:33:41 IST" name="ValidateClickTestingOfAuditRulePage" finished-at="2022-11-09T12:34:25 IST" duration-ms="44308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAuditRulePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:34:25 IST" name="reportWrapUp" finished-at="2022-11-09T12:34:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAuditRulePage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfAuditRulePage()[pri:0, instance:testcases.TimeTrackingTest@76505305] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfAuditRulePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfBulkTimeEntryPage()[pri:1, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:34:25 IST" name="ValidateClickTestingOfBulkTimeEntryPage" finished-at="2022-11-09T12:35:08 IST" duration-ms="42777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfBulkTimeEntryPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:34:25 IST" name="beforeMethod" finished-at="2022-11-09T12:34:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfBulkTimeEntryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:35:08 IST" name="reportWrapUp" finished-at="2022-11-09T12:35:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfBulkTimeEntryPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfBulkTimeEntryPage()[pri:1, instance:testcases.TimeTrackingTest@76505305] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfBulkTimeEntryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:35:08 IST" name="beforeMethod" finished-at="2022-11-09T12:35:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfFlagTrackEntryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfFlagTrackEntryPage()[pri:2, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:35:08 IST" name="ValidateClickTestingOfFlagTrackEntryPage" finished-at="2022-11-09T12:35:48 IST" duration-ms="39940" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfFlagTrackEntryPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:35:48 IST" name="reportWrapUp" finished-at="2022-11-09T12:35:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfFlagTrackEntryPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfFlagTrackEntryPage()[pri:2, instance:testcases.TimeTrackingTest@76505305] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfFlagTrackEntryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:35:48 IST" name="beforeMethod" finished-at="2022-11-09T12:35:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfProjectReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProjectReportPage()[pri:3, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:35:48 IST" name="ValidateClickTestingOfProjectReportPage" finished-at="2022-11-09T12:36:34 IST" duration-ms="46064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProjectReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:36:34 IST" name="reportWrapUp" finished-at="2022-11-09T12:36:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProjectReportPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfProjectReportPage()[pri:3, instance:testcases.TimeTrackingTest@76505305] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfProjectReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:36:34 IST" name="beforeMethod" finished-at="2022-11-09T12:36:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTimeReportPage()[pri:4, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:36:34 IST" name="ValidateClickTestingOfTimeReportPage" finished-at="2022-11-09T12:37:18 IST" duration-ms="44472" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTimeReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:37:18 IST" name="reportWrapUp" finished-at="2022-11-09T12:37:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTimeReportPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfTimeReportPage()[pri:4, instance:testcases.TimeTrackingTest@76505305] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:37:18 IST" name="beforeMethod" finished-at="2022-11-09T12:37:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTimeApprovalPage()[pri:5, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:37:18 IST" name="ValidateClickTestingOfTimeApprovalPage" finished-at="2022-11-09T12:38:10 IST" duration-ms="52413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTimeApprovalPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:38:10 IST" name="reportWrapUp" finished-at="2022-11-09T12:38:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTimeApprovalPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfTimeApprovalPage()[pri:5, instance:testcases.TimeTrackingTest@76505305] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:38:10 IST" name="beforeMethod" finished-at="2022-11-09T12:38:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeSheetPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTimeSheetPage()[pri:6, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:38:10 IST" name="ValidateClickTestingOfTimeSheetPage" finished-at="2022-11-09T12:38:46 IST" duration-ms="35163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTimeSheetPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:38:46 IST" name="reportWrapUp" finished-at="2022-11-09T12:38:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTimeSheetPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfTimeSheetPage()[pri:6, instance:testcases.TimeTrackingTest@76505305] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeSheetPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:38:46 IST" name="beforeMethod" finished-at="2022-11-09T12:38:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeTrackPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTimeTrackPage()[pri:7, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:38:46 IST" name="ValidateClickTestingOfTimeTrackPage" finished-at="2022-11-09T12:39:50 IST" duration-ms="64460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTimeTrackPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:39:50 IST" name="reportWrapUp" finished-at="2022-11-09T12:39:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTimeTrackPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfTimeTrackPage()[pri:7, instance:testcases.TimeTrackingTest@76505305] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeTrackPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:39:50 IST" name="beforeMethod" finished-at="2022-11-09T12:39:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfWorkDiaryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfWorkDiaryPage()[pri:8, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:39:50 IST" name="ValidateClickTestingOfWorkDiaryPage" finished-at="2022-11-09T12:40:40 IST" duration-ms="49873" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfWorkDiaryPage -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:40:40 IST" name="closeBrowser" finished-at="2022-11-09T12:40:41 IST" duration-ms="677" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@76505305]" started-at="2022-11-09T12:40:40 IST" name="reportWrapUp" finished-at="2022-11-09T12:40:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfWorkDiaryPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfWorkDiaryPage()[pri:8, instance:testcases.TimeTrackingTest@76505305] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfWorkDiaryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.TimeTrackingTest -->
      <class name="testcases.FsmTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T12:55:18 IST" name="setUp" finished-at="2022-11-09T12:55:28 IST" duration-ms="9519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T12:55:28 IST" name="beforeMethod" finished-at="2022-11-09T12:55:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfAddTicketPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAddTicketPage()[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T12:55:28 IST" name="ValidateClickTestingOfAddTicketPage" finished-at="2022-11-09T12:56:25 IST" duration-ms="57290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAddTicketPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T12:56:25 IST" name="reportWrapUp" finished-at="2022-11-09T12:56:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAddTicketPage status=SUCCESS method=FsmTest.ValidateClickTestingOfAddTicketPage()[pri:0, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfAddTicketPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfCallCenterSyncStatusPage()[pri:1, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T12:56:25 IST" name="ValidateClickTestingOfCallCenterSyncStatusPage" finished-at="2022-11-09T12:57:00 IST" duration-ms="35163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCallCenterSyncStatusPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T12:56:25 IST" name="beforeMethod" finished-at="2022-11-09T12:56:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfCallCenterSyncStatusPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T12:57:00 IST" name="reportWrapUp" finished-at="2022-11-09T12:57:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCallCenterSyncStatusPage status=SUCCESS method=FsmTest.ValidateClickTestingOfCallCenterSyncStatusPage()[pri:1, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfCallCenterSyncStatusPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T12:57:00 IST" name="beforeMethod" finished-at="2022-11-09T12:57:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfFieldServiceTicketPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfFieldServiceTicketPage()[pri:3, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T12:57:00 IST" name="ValidateClickTestingOfFieldServiceTicketPage" finished-at="2022-11-09T12:58:36 IST" duration-ms="96002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfFieldServiceTicketPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T12:58:36 IST" name="reportWrapUp" finished-at="2022-11-09T12:58:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfFieldServiceTicketPage status=SUCCESS method=FsmTest.ValidateClickTestingOfFieldServiceTicketPage()[pri:3, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfFieldServiceTicketPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfFormBuilderPage()[pri:4, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T12:58:36 IST" name="ValidateClickTestingOfFormBuilderPage" finished-at="2022-11-09T12:59:28 IST" duration-ms="52210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfFormBuilderPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T12:58:36 IST" name="beforeMethod" finished-at="2022-11-09T12:58:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfFormBuilderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T12:59:28 IST" name="reportWrapUp" finished-at="2022-11-09T12:59:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfFormBuilderPage status=SUCCESS method=FsmTest.ValidateClickTestingOfFormBuilderPage()[pri:4, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfFormBuilderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T12:59:28 IST" name="beforeMethod" finished-at="2022-11-09T12:59:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfFSMReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfFSMReportPage()[pri:5, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T12:59:28 IST" name="ValidateClickTestingOfFSMReportPage" finished-at="2022-11-09T13:00:08 IST" duration-ms="39710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfFSMReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:00:08 IST" name="reportWrapUp" finished-at="2022-11-09T13:00:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfFSMReportPage status=SUCCESS method=FsmTest.ValidateClickTestingOfFSMReportPage()[pri:5, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfFSMReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:00:08 IST" name="beforeMethod" finished-at="2022-11-09T13:00:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfManageMapConfigurationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageMapConfigurationPage()[pri:6, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:00:08 IST" name="ValidateClickTestingOfManageMapConfigurationPage" finished-at="2022-11-09T13:00:58 IST" duration-ms="50431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageMapConfigurationPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:00:58 IST" name="reportWrapUp" finished-at="2022-11-09T13:00:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageMapConfigurationPage status=SUCCESS method=FsmTest.ValidateClickTestingOfManageMapConfigurationPage()[pri:6, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfManageMapConfigurationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfMapExtentPage()[pri:7, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:00:58 IST" name="ValidateClickTestingOfMapExtentPage" finished-at="2022-11-09T13:01:40 IST" duration-ms="41383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfMapExtentPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:00:58 IST" name="beforeMethod" finished-at="2022-11-09T13:00:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfMapExtentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:01:40 IST" name="reportWrapUp" finished-at="2022-11-09T13:01:40 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfMapExtentPage status=SUCCESS method=FsmTest.ValidateClickTestingOfMapExtentPage()[pri:7, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfMapExtentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:01:40 IST" name="beforeMethod" finished-at="2022-11-09T13:01:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfRuleEnginePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfRuleEnginePage()[pri:8, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:01:40 IST" name="ValidateClickTestingOfRuleEnginePage" finished-at="2022-11-09T13:02:49 IST" duration-ms="69303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfRuleEnginePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:02:49 IST" name="reportWrapUp" finished-at="2022-11-09T13:02:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfRuleEnginePage status=SUCCESS method=FsmTest.ValidateClickTestingOfRuleEnginePage()[pri:8, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfRuleEnginePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:02:49 IST" name="beforeMethod" finished-at="2022-11-09T13:02:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfServiceAppointmentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfServiceAppointmentPage()[pri:9, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:02:49 IST" name="ValidateClickTestingOfServiceAppointmentPage" finished-at="2022-11-09T13:04:08 IST" duration-ms="79230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfServiceAppointmentPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:04:08 IST" name="reportWrapUp" finished-at="2022-11-09T13:04:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfServiceAppointmentPage status=SUCCESS method=FsmTest.ValidateClickTestingOfServiceAppointmentPage()[pri:9, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfServiceAppointmentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:04:08 IST" name="beforeMethod" finished-at="2022-11-09T13:04:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfServiceCrewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfServiceCrewPage()[pri:10, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:04:08 IST" name="ValidateClickTestingOfServiceCrewPage" finished-at="2022-11-09T13:04:58 IST" duration-ms="49269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfServiceCrewPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:04:58 IST" name="beforeMethod" finished-at="2022-11-09T13:04:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfServiceResourcePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:04:58 IST" name="reportWrapUp" finished-at="2022-11-09T13:04:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfServiceCrewPage status=SUCCESS method=FsmTest.ValidateClickTestingOfServiceCrewPage()[pri:10, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfServiceCrewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfServiceResourcePage()[pri:11, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:04:58 IST" name="ValidateClickTestingOfServiceResourcePage" finished-at="2022-11-09T13:05:46 IST" duration-ms="48798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfServiceResourcePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:05:46 IST" name="beforeMethod" finished-at="2022-11-09T13:05:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfServiceTerritoryePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:05:46 IST" name="reportWrapUp" finished-at="2022-11-09T13:05:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfServiceResourcePage status=SUCCESS method=FsmTest.ValidateClickTestingOfServiceResourcePage()[pri:11, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfServiceResourcePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfServiceTerritoryePage()[pri:12, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:05:46 IST" name="ValidateClickTestingOfServiceTerritoryePage" finished-at="2022-11-09T13:06:35 IST" duration-ms="48506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfServiceTerritoryePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:06:35 IST" name="reportWrapUp" finished-at="2022-11-09T13:06:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfServiceTerritoryePage status=SUCCESS method=FsmTest.ValidateClickTestingOfServiceTerritoryePage()[pri:12, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfServiceTerritoryePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfTechTrackingPage()[pri:13, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:06:35 IST" name="ValidateClickTestingOfTechTrackingPage" finished-at="2022-11-09T13:07:14 IST" duration-ms="38934" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTechTrackingPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:06:35 IST" name="beforeMethod" finished-at="2022-11-09T13:06:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfTechTrackingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:07:14 IST" name="reportWrapUp" finished-at="2022-11-09T13:07:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTechTrackingPage status=SUCCESS method=FsmTest.ValidateClickTestingOfTechTrackingPage()[pri:13, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfTechTrackingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfTicketingPage()[pri:14, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:07:14 IST" name="ValidateClickTestingOfTicketingPage" finished-at="2022-11-09T13:09:14 IST" duration-ms="120129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTicketingPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:07:14 IST" name="beforeMethod" finished-at="2022-11-09T13:07:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfTicketingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:09:14 IST" name="reportWrapUp" finished-at="2022-11-09T13:09:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTicketingPage status=SUCCESS method=FsmTest.ValidateClickTestingOfTicketingPage()[pri:14, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfTicketingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:09:14 IST" name="beforeMethod" finished-at="2022-11-09T13:09:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfTransformPendingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTransformPendingPage()[pri:15, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:09:14 IST" name="ValidateClickTestingOfTransformPendingPage" finished-at="2022-11-09T13:09:50 IST" duration-ms="35850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTransformPendingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:09:50 IST" name="reportWrapUp" finished-at="2022-11-09T13:09:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTransformPendingPage status=SUCCESS method=FsmTest.ValidateClickTestingOfTransformPendingPage()[pri:15, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfTransformPendingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:09:50 IST" name="beforeMethod" finished-at="2022-11-09T13:09:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfunassignedTicketPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfunassignedTicketPage()[pri:16, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:09:50 IST" name="ValidateClickTestingOfunassignedTicketPage" finished-at="2022-11-09T13:11:31 IST" duration-ms="101114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfunassignedTicketPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:11:31 IST" name="reportWrapUp" finished-at="2022-11-09T13:11:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfunassignedTicketPage status=SUCCESS method=FsmTest.ValidateClickTestingOfunassignedTicketPage()[pri:16, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfunassignedTicketPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:11:31 IST" name="beforeMethod" finished-at="2022-11-09T13:11:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfWorkTypeListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfWorkTypeListingPage()[pri:17, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:11:31 IST" name="ValidateClickTestingOfWorkTypeListingPage" finished-at="2022-11-09T13:12:21 IST" duration-ms="50416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfWorkTypeListingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:12:21 IST" name="reportWrapUp" finished-at="2022-11-09T13:12:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfWorkTypeListingPage status=SUCCESS method=FsmTest.ValidateClickTestingOfWorkTypeListingPage()[pri:17, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfWorkTypeListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:12:21 IST" name="beforeMethod" finished-at="2022-11-09T13:12:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfZoneManagementPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfZoneManagementPage()[pri:18, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:12:21 IST" name="ValidateClickTestingOfZoneManagementPage" finished-at="2022-11-09T13:13:27 IST" duration-ms="65828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfZoneManagementPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:13:27 IST" name="reportWrapUp" finished-at="2022-11-09T13:13:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfZoneManagementPage status=SUCCESS method=FsmTest.ValidateClickTestingOfZoneManagementPage()[pri:18, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfZoneManagementPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfDashBoardPage()[pri:19, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:13:27 IST" name="ValidateClickTestingOfDashBoardPage" finished-at="2022-11-09T13:14:22 IST" duration-ms="54487" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfDashBoardPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:13:27 IST" name="beforeMethod" finished-at="2022-11-09T13:13:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfDashBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:14:22 IST" name="reportWrapUp" finished-at="2022-11-09T13:14:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfDashBoardPage status=SUCCESS method=FsmTest.ValidateClickTestingOfDashBoardPage()[pri:19, instance:testcases.FsmTest@73a1e9a9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.FsmTest.ValidateClickTestingOfDashBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.FsmTest@73a1e9a9]" started-at="2022-11-09T13:14:22 IST" name="closeBrowser" finished-at="2022-11-09T13:14:42 IST" duration-ms="20286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.FsmTest -->
      <class name="testcases.ProjectManagementTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:17:49 IST" name="setUp" finished-at="2022-11-09T13:18:53 IST" duration-ms="63699" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:18:53 IST" name="beforeMethod" finished-at="2022-11-09T13:18:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfGlobalTaskPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfGlobalTaskPage()[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:18:53 IST" name="ValidateClickTestingOfGlobalTaskPage" finished-at="2022-11-09T13:19:30 IST" duration-ms="36721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGlobalTaskPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:19:30 IST" name="reportWrapUp" finished-at="2022-11-09T13:19:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGlobalTaskPage status=SUCCESS method=ProjectManagementTest.ValidateClickTestingOfGlobalTaskPage()[pri:0, instance:testcases.ProjectManagementTest@7b98f307] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfGlobalTaskPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:19:30 IST" name="beforeMethod" finished-at="2022-11-09T13:19:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfProjectPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProjectPage()[pri:1, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:19:30 IST" name="ValidateClickTestingOfProjectPage" finished-at="2022-11-09T13:21:26 IST" duration-ms="116565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProjectPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:21:26 IST" name="reportWrapUp" finished-at="2022-11-09T13:21:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProjectPage status=SUCCESS method=ProjectManagementTest.ValidateClickTestingOfProjectPage()[pri:1, instance:testcases.ProjectManagementTest@7b98f307] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfProjectPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:21:26 IST" name="beforeMethod" finished-at="2022-11-09T13:21:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfProjectReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProjectReportPage()[pri:2, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:21:26 IST" name="ValidateClickTestingOfProjectReportPage" finished-at="2022-11-09T13:23:01 IST" duration-ms="94211" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebBasePage.takeScreenshot(WebBasePage.java:389)
at utils.WebBasePage.enter(WebBasePage.java:79)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.ProjectManagementTest.ValidateClickTestingOfProjectReportPage(ProjectManagementTest.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProjectReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:23:01 IST" name="reportWrapUp" finished-at="2022-11-09T13:24:01 IST" duration-ms="60049" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProjectReportPage status=FAILURE method=ProjectManagementTest.ValidateClickTestingOfProjectReportPage()[pri:2, instance:testcases.ProjectManagementTest@7b98f307] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfProjectReportPage()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:24:01 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1667980441208" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProjectRequestPage()[pri:3, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:24:01 IST" name="ValidateClickTestingOfProjectRequestPage" finished-at="2022-11-09T13:24:01 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProjectRequestPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:24:01 IST" name="reportWrapUp" finished-at="2022-11-09T13:25:01 IST" duration-ms="60047" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=ProjectManagementTest.ValidateClickTestingOfProjectRequestPage()[pri:3, instance:testcases.ProjectManagementTest@7b98f307] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfProjectRequestPage()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:25:01 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1667980501268" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfQuotesPage()[pri:4, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:25:01 IST" name="ValidateClickTestingOfQuotesPage" finished-at="2022-11-09T13:25:01 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfQuotesPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:25:01 IST" name="reportWrapUp" finished-at="2022-11-09T13:26:01 IST" duration-ms="60065" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=ProjectManagementTest.ValidateClickTestingOfQuotesPage()[pri:4, instance:testcases.ProjectManagementTest@7b98f307] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfQuotesPage()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:26:01 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1667980561348" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfRequestedTimeListPage()[pri:5, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:26:01 IST" name="ValidateClickTestingOfRequestedTimeListPage" finished-at="2022-11-09T13:26:01 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfRequestedTimeListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:26:01 IST" name="reportWrapUp" finished-at="2022-11-09T13:27:01 IST" duration-ms="60070" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=ProjectManagementTest.ValidateClickTestingOfRequestedTimeListPage()[pri:5, instance:testcases.ProjectManagementTest@7b98f307] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfRequestedTimeListPage()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:27:01 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1667980621429" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfResourceImpactPage()[pri:6, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:27:01 IST" name="ValidateClickTestingOfResourceImpactPage" finished-at="2022-11-09T13:27:01 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfResourceImpactPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:27:01 IST" name="reportWrapUp" finished-at="2022-11-09T13:28:01 IST" duration-ms="60057" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=ProjectManagementTest.ValidateClickTestingOfResourceImpactPage()[pri:6, instance:testcases.ProjectManagementTest@7b98f307] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfResourceImpactPage()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:28:01 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1667980681493" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfResourceSchedulingPage()[pri:7, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:28:01 IST" name="ValidateClickTestingOfResourceSchedulingPage" finished-at="2022-11-09T13:28:01 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfResourceSchedulingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:28:01 IST" name="reportWrapUp" finished-at="2022-11-09T13:29:01 IST" duration-ms="60059" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=ProjectManagementTest.ValidateClickTestingOfResourceSchedulingPage()[pri:7, instance:testcases.ProjectManagementTest@7b98f307] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfResourceSchedulingPage()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:29:01 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1667980741561" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTaskPage()[pri:8, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:29:01 IST" name="ValidateClickTestingOfTaskPage" finished-at="2022-11-09T13:29:01 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTaskPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:29:01 IST" name="reportWrapUp" finished-at="2022-11-09T13:30:01 IST" duration-ms="60068" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=ProjectManagementTest.ValidateClickTestingOfTaskPage()[pri:8, instance:testcases.ProjectManagementTest@7b98f307] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfTaskPage()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:30:01 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1667980801633" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfToDoListPage()[pri:9, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:30:01 IST" name="ValidateClickTestingOfToDoListPage" finished-at="2022-11-09T13:30:01 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfToDoListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:30:01 IST" name="reportWrapUp" finished-at="2022-11-09T13:31:01 IST" duration-ms="60064" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=ProjectManagementTest.ValidateClickTestingOfToDoListPage()[pri:9, instance:testcases.ProjectManagementTest@7b98f307] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfToDoListPage()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=107.0.5304.89)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.89, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56122}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: be678a261de2b3ee21b97738259f2bfd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.ProjectManagementTest@7b98f307]" started-at="2022-11-09T13:31:01 IST" name="closeBrowser" finished-at="2022-11-09T13:31:02 IST" duration-ms="898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.ProjectManagementTest -->
      <class name="testcases.MSPModuleTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.MSPModuleTest@a1153bc]" started-at="2022-11-09T11:28:18 IST" name="setUp" finished-at="2022-11-09T11:28:28 IST" duration-ms="10080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfAddPackagesPage()[pri:0, instance:testcases.MSPModuleTest@a1153bc]" started-at="2022-11-09T11:28:28 IST" name="ValidateClickTestingOfAddPackagesPage" finished-at="2022-11-09T11:29:00 IST" duration-ms="31868" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAddPackagesPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@a1153bc]" started-at="2022-11-09T11:28:28 IST" name="beforeMethod" finished-at="2022-11-09T11:28:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfAddPackagesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@a1153bc]" started-at="2022-11-09T11:29:00 IST" name="reportWrapUp" finished-at="2022-11-09T11:29:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAddPackagesPage status=SUCCESS method=MSPModuleTest.ValidateClickTestingOfAddPackagesPage()[pri:0, instance:testcases.MSPModuleTest@a1153bc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfAddPackagesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfAddSubscriptionPage()[pri:1, instance:testcases.MSPModuleTest@a1153bc]" started-at="2022-11-09T11:29:00 IST" name="ValidateClickTestingOfAddSubscriptionPage" finished-at="2022-11-09T11:30:11 IST" duration-ms="71068" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAddSubscriptionPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@a1153bc]" started-at="2022-11-09T11:29:00 IST" name="beforeMethod" finished-at="2022-11-09T11:29:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfAddSubscriptionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@a1153bc]" started-at="2022-11-09T11:30:11 IST" name="reportWrapUp" finished-at="2022-11-09T11:30:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAddSubscriptionPage status=SUCCESS method=MSPModuleTest.ValidateClickTestingOfAddSubscriptionPage()[pri:1, instance:testcases.MSPModuleTest@a1153bc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfAddSubscriptionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@a1153bc]" started-at="2022-11-09T11:30:11 IST" name="beforeMethod" finished-at="2022-11-09T11:30:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfManagePackagesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManagePackagesPage()[pri:2, instance:testcases.MSPModuleTest@a1153bc]" started-at="2022-11-09T11:30:11 IST" name="ValidateClickTestingOfManagePackagesPage" finished-at="2022-11-09T11:31:03 IST" duration-ms="52602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManagePackagesPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@a1153bc]" started-at="2022-11-09T11:31:03 IST" name="reportWrapUp" finished-at="2022-11-09T11:31:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManagePackagesPage status=SUCCESS method=MSPModuleTest.ValidateClickTestingOfManagePackagesPage()[pri:2, instance:testcases.MSPModuleTest@a1153bc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfManagePackagesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfManageSubscriptionPage()[pri:3, instance:testcases.MSPModuleTest@a1153bc]" started-at="2022-11-09T11:31:03 IST" name="ValidateClickTestingOfManageSubscriptionPage" finished-at="2022-11-09T11:32:02 IST" duration-ms="58090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageSubscriptionPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@a1153bc]" started-at="2022-11-09T11:31:03 IST" name="beforeMethod" finished-at="2022-11-09T11:31:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfManageSubscriptionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@a1153bc]" started-at="2022-11-09T11:32:02 IST" name="reportWrapUp" finished-at="2022-11-09T11:32:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageSubscriptionPage status=SUCCESS method=MSPModuleTest.ValidateClickTestingOfManageSubscriptionPage()[pri:3, instance:testcases.MSPModuleTest@a1153bc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfManageSubscriptionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.MSPModuleTest@a1153bc]" started-at="2022-11-09T11:32:02 IST" name="closeBrowser" finished-at="2022-11-09T11:32:02 IST" duration-ms="329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.MSPModuleTest -->
      <class name="testcases.DisplayScreenTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.DisplayScreenTest@1aafa419]" started-at="2022-11-09T11:32:02 IST" name="setUp" finished-at="2022-11-09T11:32:12 IST" duration-ms="10400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.DisplayScreenTest@1aafa419]" started-at="2022-11-09T11:32:12 IST" name="beforeMethod" finished-at="2022-11-09T11:32:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.DisplayScreenTest.ValidateClickTestingOfCounterPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCounterPage()[pri:0, instance:testcases.DisplayScreenTest@1aafa419]" started-at="2022-11-09T11:32:12 IST" name="ValidateClickTestingOfCounterPage" finished-at="2022-11-09T11:32:46 IST" duration-ms="33941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCounterPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.DisplayScreenTest@1aafa419]" started-at="2022-11-09T11:32:46 IST" name="reportWrapUp" finished-at="2022-11-09T11:32:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCounterPage status=SUCCESS method=DisplayScreenTest.ValidateClickTestingOfCounterPage()[pri:0, instance:testcases.DisplayScreenTest@1aafa419] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.DisplayScreenTest.ValidateClickTestingOfCounterPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.DisplayScreenTest@1aafa419]" started-at="2022-11-09T11:32:46 IST" name="beforeMethod" finished-at="2022-11-09T11:32:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.DisplayScreenTest.ValidateClickTestingOfTokenPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTokenPage()[pri:1, instance:testcases.DisplayScreenTest@1aafa419]" started-at="2022-11-09T11:32:46 IST" name="ValidateClickTestingOfTokenPage" finished-at="2022-11-09T11:33:48 IST" duration-ms="61812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTokenPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.DisplayScreenTest@1aafa419]" started-at="2022-11-09T11:33:48 IST" name="reportWrapUp" finished-at="2022-11-09T11:33:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTokenPage status=SUCCESS method=DisplayScreenTest.ValidateClickTestingOfTokenPage()[pri:1, instance:testcases.DisplayScreenTest@1aafa419] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.DisplayScreenTest.ValidateClickTestingOfTokenPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.DisplayScreenTest@1aafa419]" started-at="2022-11-09T11:33:48 IST" name="closeBrowser" finished-at="2022-11-09T11:33:48 IST" duration-ms="295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.DisplayScreenTest -->
      <class name="testcases.BillingTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:01:58 IST" name="setUp" finished-at="2022-11-09T10:02:10 IST" duration-ms="11906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfAutomateFlagProcessingPage()[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:02:10 IST" name="ValidateClickTestingOfAutomateFlagProcessingPage" finished-at="2022-11-09T10:02:49 IST" duration-ms="38543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAutomateFlagProcessingPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:02:10 IST" name="beforeMethod" finished-at="2022-11-09T10:02:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfAutomateFlagProcessingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:02:49 IST" name="reportWrapUp" finished-at="2022-11-09T10:02:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAutomateFlagProcessingPage status=SUCCESS method=BillingTest.ValidateClickTestingOfAutomateFlagProcessingPage()[pri:0, instance:testcases.BillingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfAutomateFlagProcessingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfBillingRulePage()[pri:1, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:02:49 IST" name="ValidateClickTestingOfBillingRulePage" finished-at="2022-11-09T10:04:36 IST" duration-ms="107146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfBillingRulePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:02:49 IST" name="beforeMethod" finished-at="2022-11-09T10:02:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfBillingRulePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:04:36 IST" name="reportWrapUp" finished-at="2022-11-09T10:04:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfBillingRulePage status=SUCCESS method=BillingTest.ValidateClickTestingOfBillingRulePage()[pri:1, instance:testcases.BillingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfBillingRulePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:04:36 IST" name="beforeMethod" finished-at="2022-11-09T10:04:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfBillingServicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfBillingServicePage()[pri:2, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:04:36 IST" name="ValidateClickTestingOfBillingServicePage" finished-at="2022-11-09T10:05:28 IST" duration-ms="52087" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfBillingServicePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:05:28 IST" name="reportWrapUp" finished-at="2022-11-09T10:05:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfBillingServicePage status=SUCCESS method=BillingTest.ValidateClickTestingOfBillingServicePage()[pri:2, instance:testcases.BillingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfBillingServicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:05:28 IST" name="beforeMethod" finished-at="2022-11-09T10:05:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfBillingSetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfBillingSetupPage()[pri:3, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:05:28 IST" name="ValidateClickTestingOfBillingSetupPage" finished-at="2022-11-09T10:06:19 IST" duration-ms="50769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfBillingSetupPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:06:19 IST" name="reportWrapUp" finished-at="2022-11-09T10:06:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfBillingSetupPage status=SUCCESS method=BillingTest.ValidateClickTestingOfBillingSetupPage()[pri:3, instance:testcases.BillingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfBillingSetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:06:19 IST" name="beforeMethod" finished-at="2022-11-09T10:06:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfFlagRecordsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfFlagRecordsPage()[pri:4, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:06:19 IST" name="ValidateClickTestingOfFlagRecordsPage" finished-at="2022-11-09T10:07:24 IST" duration-ms="64905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfFlagRecordsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:07:24 IST" name="reportWrapUp" finished-at="2022-11-09T10:07:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfFlagRecordsPage status=SUCCESS method=BillingTest.ValidateClickTestingOfFlagRecordsPage()[pri:4, instance:testcases.BillingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfFlagRecordsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfClientReportPage()[pri:5, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:07:24 IST" name="ValidateClickTestingOfClientReportPage" finished-at="2022-11-09T10:08:11 IST" duration-ms="47476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfClientReportPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:07:24 IST" name="beforeMethod" finished-at="2022-11-09T10:07:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfClientReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:08:11 IST" name="reportWrapUp" finished-at="2022-11-09T10:08:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfClientReportPage status=SUCCESS method=BillingTest.ValidateClickTestingOfClientReportPage()[pri:5, instance:testcases.BillingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfClientReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:08:11 IST" name="beforeMethod" finished-at="2022-11-09T10:08:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfAddInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAddInvoicePage()[pri:6, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:08:11 IST" name="ValidateClickTestingOfAddInvoicePage" finished-at="2022-11-09T10:08:54 IST" duration-ms="43070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAddInvoicePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:08:54 IST" name="reportWrapUp" finished-at="2022-11-09T10:08:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAddInvoicePage status=SUCCESS method=BillingTest.ValidateClickTestingOfAddInvoicePage()[pri:6, instance:testcases.BillingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfAddInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:08:54 IST" name="beforeMethod" finished-at="2022-11-09T10:08:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfImportInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfImportInvoicePage()[pri:7, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:08:54 IST" name="ValidateClickTestingOfImportInvoicePage" finished-at="2022-11-09T10:09:38 IST" duration-ms="43303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfImportInvoicePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:09:38 IST" name="reportWrapUp" finished-at="2022-11-09T10:09:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfImportInvoicePage status=SUCCESS method=BillingTest.ValidateClickTestingOfImportInvoicePage()[pri:7, instance:testcases.BillingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfImportInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:09:38 IST" name="beforeMethod" finished-at="2022-11-09T10:09:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfInvoicePage()[pri:8, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:09:38 IST" name="ValidateClickTestingOfInvoicePage" finished-at="2022-11-09T10:10:45 IST" duration-ms="67525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfInvoicePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:10:45 IST" name="reportWrapUp" finished-at="2022-11-09T10:10:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfInvoicePage status=SUCCESS method=BillingTest.ValidateClickTestingOfInvoicePage()[pri:8, instance:testcases.BillingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:10:45 IST" name="beforeMethod" finished-at="2022-11-09T10:10:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfInvoiceReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfInvoiceReportPage()[pri:9, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:10:45 IST" name="ValidateClickTestingOfInvoiceReportPage" finished-at="2022-11-09T10:11:32 IST" duration-ms="46479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfInvoiceReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:11:32 IST" name="reportWrapUp" finished-at="2022-11-09T10:11:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfInvoiceReportPage status=SUCCESS method=BillingTest.ValidateClickTestingOfInvoiceReportPage()[pri:9, instance:testcases.BillingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfInvoiceReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:11:32 IST" name="beforeMethod" finished-at="2022-11-09T10:11:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfProcessAndReprocessChargesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProcessAndReprocessChargesPage()[pri:10, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:11:32 IST" name="ValidateClickTestingOfProcessAndReprocessChargesPage" finished-at="2022-11-09T10:12:10 IST" duration-ms="38210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProcessAndReprocessChargesPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:12:10 IST" name="reportWrapUp" finished-at="2022-11-09T10:12:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProcessAndReprocessChargesPage status=SUCCESS method=BillingTest.ValidateClickTestingOfProcessAndReprocessChargesPage()[pri:10, instance:testcases.BillingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfProcessAndReprocessChargesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:12:10 IST" name="beforeMethod" finished-at="2022-11-09T10:12:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfViewHistoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfViewHistoryPage()[pri:11, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:12:10 IST" name="ValidateClickTestingOfViewHistoryPage" finished-at="2022-11-09T10:13:07 IST" duration-ms="56766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfViewHistoryPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:13:07 IST" name="reportWrapUp" finished-at="2022-11-09T10:13:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfViewHistoryPage status=SUCCESS method=BillingTest.ValidateClickTestingOfViewHistoryPage()[pri:11, instance:testcases.BillingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfViewHistoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:13:07 IST" name="beforeMethod" finished-at="2022-11-09T10:13:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfReceivedInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfReceivedInvoicePage()[pri:12, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:13:07 IST" name="ValidateClickTestingOfReceivedInvoicePage" finished-at="2022-11-09T10:13:40 IST" duration-ms="33436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfReceivedInvoicePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:13:40 IST" name="reportWrapUp" finished-at="2022-11-09T10:13:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfReceivedInvoicePage status=SUCCESS method=BillingTest.ValidateClickTestingOfReceivedInvoicePage()[pri:12, instance:testcases.BillingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfReceivedInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.BillingTest@128d2484]" started-at="2022-11-09T10:13:40 IST" name="closeBrowser" finished-at="2022-11-09T10:13:41 IST" duration-ms="841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.BillingTest -->
      <class name="testcases.CrmTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T10:59:25 IST" name="setUp" finished-at="2022-11-09T10:59:32 IST" duration-ms="7826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfAccountsPage()[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T10:59:32 IST" name="ValidateClickTestingOfAccountsPage" finished-at="2022-11-09T11:00:22 IST" duration-ms="50001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAccountsPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T10:59:32 IST" name="beforeMethod" finished-at="2022-11-09T10:59:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfAccountsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:00:22 IST" name="reportWrapUp" finished-at="2022-11-09T11:00:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAccountsPage status=SUCCESS method=CrmTest.ValidateClickTestingOfAccountsPage()[pri:0, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfAccountsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:00:22 IST" name="beforeMethod" finished-at="2022-11-09T11:00:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfBrandPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfBrandPage()[pri:1, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:00:22 IST" name="ValidateClickTestingOfBrandPage" finished-at="2022-11-09T11:01:15 IST" duration-ms="52079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfBrandPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:01:15 IST" name="reportWrapUp" finished-at="2022-11-09T11:01:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfBrandPage status=SUCCESS method=CrmTest.ValidateClickTestingOfBrandPage()[pri:1, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfBrandPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfCampaignPage()[pri:2, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:01:15 IST" name="ValidateClickTestingOfCampaignPage" finished-at="2022-11-09T11:02:13 IST" duration-ms="58210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCampaignPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:01:15 IST" name="beforeMethod" finished-at="2022-11-09T11:01:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfCampaignPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:02:13 IST" name="reportWrapUp" finished-at="2022-11-09T11:02:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCampaignPage status=SUCCESS method=CrmTest.ValidateClickTestingOfCampaignPage()[pri:2, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfCampaignPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:02:13 IST" name="beforeMethod" finished-at="2022-11-09T11:02:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfCommunicationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCommunicationPage()[pri:3, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:02:13 IST" name="ValidateClickTestingOfCommunicationPage" finished-at="2022-11-09T11:03:09 IST" duration-ms="56169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCommunicationPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:03:09 IST" name="reportWrapUp" finished-at="2022-11-09T11:03:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCommunicationPage status=SUCCESS method=CrmTest.ValidateClickTestingOfCommunicationPage()[pri:3, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfCommunicationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:03:09 IST" name="beforeMethod" finished-at="2022-11-09T11:03:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfContactsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfContactsPage()[pri:4, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:03:09 IST" name="ValidateClickTestingOfContactsPage" finished-at="2022-11-09T11:04:18 IST" duration-ms="69368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfContactsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:04:18 IST" name="reportWrapUp" finished-at="2022-11-09T11:04:18 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfContactsPage status=SUCCESS method=CrmTest.ValidateClickTestingOfContactsPage()[pri:4, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfContactsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:04:18 IST" name="beforeMethod" finished-at="2022-11-09T11:04:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfContractsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfContractsPage()[pri:5, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:04:18 IST" name="ValidateClickTestingOfContractsPage" finished-at="2022-11-09T11:05:17 IST" duration-ms="58811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfContractsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:05:17 IST" name="reportWrapUp" finished-at="2022-11-09T11:05:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfContractsPage status=SUCCESS method=CrmTest.ValidateClickTestingOfContractsPage()[pri:5, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfContractsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfCRMReportPage()[pri:6, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:05:17 IST" name="ValidateClickTestingOfCRMReportPage" finished-at="2022-11-09T11:05:53 IST" duration-ms="35525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCRMReportPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:05:17 IST" name="beforeMethod" finished-at="2022-11-09T11:05:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfCRMReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:05:53 IST" name="reportWrapUp" finished-at="2022-11-09T11:05:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCRMReportPage status=SUCCESS method=CrmTest.ValidateClickTestingOfCRMReportPage()[pri:6, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfCRMReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:05:53 IST" name="beforeMethod" finished-at="2022-11-09T11:05:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfDEalsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfDEalsPage()[pri:7, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:05:53 IST" name="ValidateClickTestingOfDEalsPage" finished-at="2022-11-09T11:07:01 IST" duration-ms="68479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfDEalsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:07:01 IST" name="reportWrapUp" finished-at="2022-11-09T11:07:01 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfDEalsPage status=SUCCESS method=CrmTest.ValidateClickTestingOfDEalsPage()[pri:7, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfDEalsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfgoodsInwardPage()[pri:8, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:07:01 IST" name="ValidateClickTestingOfgoodsInwardPage" finished-at="2022-11-09T11:08:03 IST" duration-ms="61941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfgoodsInwardPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:07:01 IST" name="beforeMethod" finished-at="2022-11-09T11:07:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfgoodsInwardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:08:03 IST" name="reportWrapUp" finished-at="2022-11-09T11:08:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfgoodsInwardPage status=SUCCESS method=CrmTest.ValidateClickTestingOfgoodsInwardPage()[pri:8, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfgoodsInwardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:08:03 IST" name="beforeMethod" finished-at="2022-11-09T11:08:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfInvoicePage()[pri:9, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:08:03 IST" name="ValidateClickTestingOfInvoicePage" finished-at="2022-11-09T11:09:47 IST" duration-ms="104137" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Manage view -  element not present]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Manage view -  element not present
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.click(WebBasePage.java:126)
at pageobjects.CrmPage.clickOnManageView(CrmPage.java:223)
at action.CrmAction.GoToInvoicePage(CrmAction.java:131)
at testcases.CrmTest.ValidateClickTestingOfInvoicePage(CrmTest.java:141)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfInvoicePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:09:47 IST" name="reportWrapUp" finished-at="2022-11-09T11:09:47 IST" duration-ms="252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfInvoicePage status=FAILURE method=CrmTest.ValidateClickTestingOfInvoicePage()[pri:9, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfProductTypePage()[pri:10, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:09:47 IST" name="ValidateClickTestingOfProductTypePage" finished-at="2022-11-09T11:10:48 IST" duration-ms="60108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductTypePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:09:47 IST" name="beforeMethod" finished-at="2022-11-09T11:09:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfProductTypePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:10:48 IST" name="reportWrapUp" finished-at="2022-11-09T11:10:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductTypePage status=SUCCESS method=CrmTest.ValidateClickTestingOfProductTypePage()[pri:10, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfProductTypePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfLeadPage()[pri:11, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:10:48 IST" name="ValidateClickTestingOfLeadPage" finished-at="2022-11-09T11:12:05 IST" duration-ms="77753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfLeadPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:10:48 IST" name="beforeMethod" finished-at="2022-11-09T11:10:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfLeadPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:12:05 IST" name="reportWrapUp" finished-at="2022-11-09T11:12:05 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfLeadPage status=SUCCESS method=CrmTest.ValidateClickTestingOfLeadPage()[pri:11, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfLeadPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:12:05 IST" name="beforeMethod" finished-at="2022-11-09T11:12:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfManageProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageProductPage()[pri:12, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:12:05 IST" name="ValidateClickTestingOfManageProductPage" finished-at="2022-11-09T11:13:51 IST" duration-ms="105823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageProductPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:13:51 IST" name="reportWrapUp" finished-at="2022-11-09T11:13:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageProductPage status=SUCCESS method=CrmTest.ValidateClickTestingOfManageProductPage()[pri:12, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfManageProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfPriceBookPage()[pri:13, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:13:51 IST" name="ValidateClickTestingOfPriceBookPage" finished-at="2022-11-09T11:14:57 IST" duration-ms="66117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfPriceBookPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:13:51 IST" name="beforeMethod" finished-at="2022-11-09T11:13:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfPriceBookPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:14:57 IST" name="reportWrapUp" finished-at="2022-11-09T11:14:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfPriceBookPage status=SUCCESS method=CrmTest.ValidateClickTestingOfPriceBookPage()[pri:13, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfPriceBookPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:14:57 IST" name="beforeMethod" finished-at="2022-11-09T11:14:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProductPage()[pri:14, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:14:57 IST" name="ValidateClickTestingOfProductPage" finished-at="2022-11-09T11:15:53 IST" duration-ms="55866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:15:53 IST" name="reportWrapUp" finished-at="2022-11-09T11:15:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductPage status=SUCCESS method=CrmTest.ValidateClickTestingOfProductPage()[pri:14, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:15:53 IST" name="beforeMethod" finished-at="2022-11-09T11:15:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfPurchaseOrderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfPurchaseOrderPage()[pri:15, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:15:53 IST" name="ValidateClickTestingOfPurchaseOrderPage" finished-at="2022-11-09T11:17:03 IST" duration-ms="69737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfPurchaseOrderPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:17:03 IST" name="reportWrapUp" finished-at="2022-11-09T11:17:03 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfPurchaseOrderPage status=SUCCESS method=CrmTest.ValidateClickTestingOfPurchaseOrderPage()[pri:15, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfPurchaseOrderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:17:03 IST" name="beforeMethod" finished-at="2022-11-09T11:17:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfQuotePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfQuotePage()[pri:16, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:17:03 IST" name="ValidateClickTestingOfQuotePage" finished-at="2022-11-09T11:18:10 IST" duration-ms="67488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfQuotePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:18:10 IST" name="reportWrapUp" finished-at="2022-11-09T11:18:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfQuotePage status=SUCCESS method=CrmTest.ValidateClickTestingOfQuotePage()[pri:16, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfQuotePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:18:10 IST" name="beforeMethod" finished-at="2022-11-09T11:18:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfSalesOrderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfSalesOrderPage()[pri:17, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:18:10 IST" name="ValidateClickTestingOfSalesOrderPage" finished-at="2022-11-09T11:19:52 IST" duration-ms="101965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfSalesOrderPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:19:52 IST" name="reportWrapUp" finished-at="2022-11-09T11:19:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfSalesOrderPage status=SUCCESS method=CrmTest.ValidateClickTestingOfSalesOrderPage()[pri:17, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfSalesOrderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:19:52 IST" name="beforeMethod" finished-at="2022-11-09T11:19:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfStagesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfStagesPage()[pri:18, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:19:52 IST" name="ValidateClickTestingOfStagesPage" finished-at="2022-11-09T11:21:36 IST" duration-ms="103481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfStagesPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:21:36 IST" name="reportWrapUp" finished-at="2022-11-09T11:21:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfStagesPage status=SUCCESS method=CrmTest.ValidateClickTestingOfStagesPage()[pri:18, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfStagesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:21:36 IST" name="beforeMethod" finished-at="2022-11-09T11:21:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfVendorPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfVendorPage()[pri:19, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:21:36 IST" name="ValidateClickTestingOfVendorPage" finished-at="2022-11-09T11:23:05 IST" duration-ms="88715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfVendorPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:23:05 IST" name="reportWrapUp" finished-at="2022-11-09T11:23:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfVendorPage status=SUCCESS method=CrmTest.ValidateClickTestingOfVendorPage()[pri:19, instance:testcases.CrmTest@692f203f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfVendorPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.CrmTest@692f203f]" started-at="2022-11-09T11:23:05 IST" name="closeBrowser" finished-at="2022-11-09T11:23:20 IST" duration-ms="15517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.CrmTest -->
      <class name="testcases.EventManagementTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:54:37 IST" name="setUp" finished-at="2022-11-09T10:54:44 IST" duration-ms="7659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:54:44 IST" name="beforeMethod" finished-at="2022-11-09T10:54:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfCalendarPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCalendarPage()[pri:0, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:54:44 IST" name="ValidateClickTestingOfCalendarPage" finished-at="2022-11-09T10:55:08 IST" duration-ms="23403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCalendarPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:55:08 IST" name="reportWrapUp" finished-at="2022-11-09T10:55:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCalendarPage status=SUCCESS method=EventManagementTest.ValidateClickTestingOfCalendarPage()[pri:0, instance:testcases.EventManagementTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfCalendarPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfGoogleCalendarPage()[pri:1, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:55:08 IST" name="ValidateClickTestingOfGoogleCalendarPage" finished-at="2022-11-09T10:55:56 IST" duration-ms="48368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGoogleCalendarPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:55:08 IST" name="beforeMethod" finished-at="2022-11-09T10:55:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfGoogleCalendarPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:55:56 IST" name="reportWrapUp" finished-at="2022-11-09T10:55:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGoogleCalendarPage status=SUCCESS method=EventManagementTest.ValidateClickTestingOfGoogleCalendarPage()[pri:1, instance:testcases.EventManagementTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfGoogleCalendarPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:55:56 IST" name="beforeMethod" finished-at="2022-11-09T10:55:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfEventManagementPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfEventManagementPage()[pri:2, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:55:56 IST" name="ValidateClickTestingOfEventManagementPage" finished-at="2022-11-09T10:57:02 IST" duration-ms="65403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfEventManagementPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:57:02 IST" name="reportWrapUp" finished-at="2022-11-09T10:57:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfEventManagementPage status=SUCCESS method=EventManagementTest.ValidateClickTestingOfEventManagementPage()[pri:2, instance:testcases.EventManagementTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfEventManagementPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:57:02 IST" name="beforeMethod" finished-at="2022-11-09T10:57:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfManageVenuePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageVenuePage()[pri:3, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:57:02 IST" name="ValidateClickTestingOfManageVenuePage" finished-at="2022-11-09T10:57:47 IST" duration-ms="45455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageVenuePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:57:47 IST" name="reportWrapUp" finished-at="2022-11-09T10:57:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageVenuePage status=SUCCESS method=EventManagementTest.ValidateClickTestingOfManageVenuePage()[pri:3, instance:testcases.EventManagementTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfManageVenuePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:57:47 IST" name="beforeMethod" finished-at="2022-11-09T10:57:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfDashBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfDashBoardPage()[pri:4, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:57:47 IST" name="ValidateClickTestingOfDashBoardPage" finished-at="2022-11-09T10:58:33 IST" duration-ms="46432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfDashBoardPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:58:33 IST" name="reportWrapUp" finished-at="2022-11-09T10:58:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfDashBoardPage status=SUCCESS method=EventManagementTest.ValidateClickTestingOfDashBoardPage()[pri:4, instance:testcases.EventManagementTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfDashBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:58:33 IST" name="beforeMethod" finished-at="2022-11-09T10:58:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfUserAvailabilityPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfUserAvailabilityPage()[pri:4, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:58:33 IST" name="ValidateClickTestingOfUserAvailabilityPage" finished-at="2022-11-09T10:59:24 IST" duration-ms="50659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfUserAvailabilityPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:59:24 IST" name="reportWrapUp" finished-at="2022-11-09T10:59:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfUserAvailabilityPage status=SUCCESS method=EventManagementTest.ValidateClickTestingOfUserAvailabilityPage()[pri:4, instance:testcases.EventManagementTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfUserAvailabilityPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.EventManagementTest@4c583ecf]" started-at="2022-11-09T10:59:24 IST" name="closeBrowser" finished-at="2022-11-09T10:59:25 IST" duration-ms="537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.EventManagementTest -->
      <class name="testcases.GeneralTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:37:06 IST" name="setUp" finished-at="2022-11-09T10:37:17 IST" duration-ms="11333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfAddReportPage()[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:37:17 IST" name="ValidateClickTestingOfAddReportPage" finished-at="2022-11-09T10:37:49 IST" duration-ms="31492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAddReportPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:37:17 IST" name="beforeMethod" finished-at="2022-11-09T10:37:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfAddReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:37:49 IST" name="reportWrapUp" finished-at="2022-11-09T10:37:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAddReportPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfAddReportPage()[pri:0, instance:testcases.GeneralTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfAddReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:37:49 IST" name="beforeMethod" finished-at="2022-11-09T10:37:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfAutoResponderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAutoResponderPage()[pri:1, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:37:49 IST" name="ValidateClickTestingOfAutoResponderPage" finished-at="2022-11-09T10:38:39 IST" duration-ms="49822" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAutoResponderPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:38:39 IST" name="reportWrapUp" finished-at="2022-11-09T10:38:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAutoResponderPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfAutoResponderPage()[pri:1, instance:testcases.GeneralTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfAutoResponderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:38:39 IST" name="beforeMethod" finished-at="2022-11-09T10:38:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfCustomFieldsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCustomFieldsPage()[pri:2, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:38:39 IST" name="ValidateClickTestingOfCustomFieldsPage" finished-at="2022-11-09T10:39:28 IST" duration-ms="49351" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:81)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.GeneralTest.ValidateClickTestingOfCustomFieldsPage(GeneralTest.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCustomFieldsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:39:28 IST" name="reportWrapUp" finished-at="2022-11-09T10:39:29 IST" duration-ms="1036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCustomFieldsPage status=FAILURE method=GeneralTest.ValidateClickTestingOfCustomFieldsPage()[pri:2, instance:testcases.GeneralTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfCustomFieldsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:39:29 IST" name="beforeMethod" finished-at="2022-11-09T10:39:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfCustomReportsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCustomReportsPage()[pri:3, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:39:29 IST" name="ValidateClickTestingOfCustomReportsPage" finished-at="2022-11-09T10:40:01 IST" duration-ms="31559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCustomReportsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:40:01 IST" name="reportWrapUp" finished-at="2022-11-09T10:40:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCustomReportsPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfCustomReportsPage()[pri:3, instance:testcases.GeneralTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfCustomReportsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:40:01 IST" name="beforeMethod" finished-at="2022-11-09T10:40:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfExternalLinkPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfExternalLinkPage()[pri:4, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:40:01 IST" name="ValidateClickTestingOfExternalLinkPage" finished-at="2022-11-09T10:40:35 IST" duration-ms="34348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfExternalLinkPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:40:35 IST" name="reportWrapUp" finished-at="2022-11-09T10:40:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfExternalLinkPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfExternalLinkPage()[pri:4, instance:testcases.GeneralTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfExternalLinkPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfPassportInformationPage()[pri:5, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:40:35 IST" name="ValidateClickTestingOfPassportInformationPage" finished-at="2022-11-09T10:41:21 IST" duration-ms="45751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfPassportInformationPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:40:35 IST" name="beforeMethod" finished-at="2022-11-09T10:40:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfPassportInformationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:41:21 IST" name="reportWrapUp" finished-at="2022-11-09T10:41:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfPassportInformationPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfPassportInformationPage()[pri:5, instance:testcases.GeneralTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfPassportInformationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:41:21 IST" name="beforeMethod" finished-at="2022-11-09T10:41:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfManageLayoutPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageLayoutPage()[pri:6, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:41:21 IST" name="ValidateClickTestingOfManageLayoutPage" finished-at="2022-11-09T10:41:56 IST" duration-ms="34776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageLayoutPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:41:56 IST" name="reportWrapUp" finished-at="2022-11-09T10:41:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageLayoutPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfManageLayoutPage()[pri:6, instance:testcases.GeneralTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfManageLayoutPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfOrganizationChartPage()[pri:7, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:41:56 IST" name="ValidateClickTestingOfOrganizationChartPage" finished-at="2022-11-09T10:42:34 IST" duration-ms="38849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfOrganizationChartPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:41:56 IST" name="beforeMethod" finished-at="2022-11-09T10:41:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfOrganizationChartPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:42:34 IST" name="reportWrapUp" finished-at="2022-11-09T10:42:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfOrganizationChartPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfOrganizationChartPage()[pri:7, instance:testcases.GeneralTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfOrganizationChartPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:42:34 IST" name="beforeMethod" finished-at="2022-11-09T10:42:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfProvisionalRightsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProvisionalRightsPage()[pri:8, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:42:34 IST" name="ValidateClickTestingOfProvisionalRightsPage" finished-at="2022-11-09T10:44:30 IST" duration-ms="115171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProvisionalRightsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:44:30 IST" name="reportWrapUp" finished-at="2022-11-09T10:44:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProvisionalRightsPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfProvisionalRightsPage()[pri:8, instance:testcases.GeneralTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfProvisionalRightsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:44:30 IST" name="beforeMethod" finished-at="2022-11-09T10:44:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfRuleEnginePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfRuleEnginePage()[pri:9, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:44:30 IST" name="ValidateClickTestingOfRuleEnginePage" finished-at="2022-11-09T10:45:23 IST" duration-ms="53706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfRuleEnginePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:45:23 IST" name="reportWrapUp" finished-at="2022-11-09T10:45:23 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfRuleEnginePage status=SUCCESS method=GeneralTest.ValidateClickTestingOfRuleEnginePage()[pri:9, instance:testcases.GeneralTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfRuleEnginePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:45:23 IST" name="beforeMethod" finished-at="2022-11-09T10:45:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfStoragePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfStoragePage()[pri:10, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:45:23 IST" name="ValidateClickTestingOfStoragePage" finished-at="2022-11-09T10:45:58 IST" duration-ms="34957" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfStoragePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:45:58 IST" name="reportWrapUp" finished-at="2022-11-09T10:45:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfStoragePage status=SUCCESS method=GeneralTest.ValidateClickTestingOfStoragePage()[pri:10, instance:testcases.GeneralTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfStoragePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfTagsPage()[pri:11, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:45:58 IST" name="ValidateClickTestingOfTagsPage" finished-at="2022-11-09T10:46:34 IST" duration-ms="35939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTagsPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:45:58 IST" name="beforeMethod" finished-at="2022-11-09T10:45:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfTagsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:46:34 IST" name="reportWrapUp" finished-at="2022-11-09T10:46:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTagsPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfTagsPage()[pri:11, instance:testcases.GeneralTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfTagsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:46:34 IST" name="beforeMethod" finished-at="2022-11-09T10:46:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfWorkingDayPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfWorkingDayPage()[pri:12, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:46:34 IST" name="ValidateClickTestingOfWorkingDayPage" finished-at="2022-11-09T10:47:27 IST" duration-ms="52454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfWorkingDayPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:47:27 IST" name="reportWrapUp" finished-at="2022-11-09T10:47:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfWorkingDayPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfWorkingDayPage()[pri:12, instance:testcases.GeneralTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfWorkingDayPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:47:27 IST" name="beforeMethod" finished-at="2022-11-09T10:47:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfWorkingWeekPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfWorkingWeekPage()[pri:13, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:47:27 IST" name="ValidateClickTestingOfWorkingWeekPage" finished-at="2022-11-09T10:48:13 IST" duration-ms="46597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfWorkingWeekPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:48:13 IST" name="reportWrapUp" finished-at="2022-11-09T10:48:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfWorkingWeekPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfWorkingWeekPage()[pri:13, instance:testcases.GeneralTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfWorkingWeekPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.GeneralTest@4d5d943d]" started-at="2022-11-09T10:48:13 IST" name="closeBrowser" finished-at="2022-11-09T10:48:23 IST" duration-ms="10048" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.GeneralTest -->
      <class name="testcases.AppotmentCalendarTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:13:41 IST" name="setUp" finished-at="2022-11-09T10:13:52 IST" duration-ms="10982" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:13:52 IST" name="beforeMethod" finished-at="2022-11-09T10:13:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfManageExternalLinkPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageExternalLinkPage()[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:13:52 IST" name="ValidateClickTestingOfManageExternalLinkPage" finished-at="2022-11-09T10:14:23 IST" duration-ms="31349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageExternalLinkPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:14:23 IST" name="reportWrapUp" finished-at="2022-11-09T10:14:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageExternalLinkPage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfManageExternalLinkPage()[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfManageExternalLinkPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:14:23 IST" name="beforeMethod" finished-at="2022-11-09T10:14:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfAppoitmentReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAppoitmentReportPage()[pri:1, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:14:23 IST" name="ValidateClickTestingOfAppoitmentReportPage" finished-at="2022-11-09T10:15:11 IST" duration-ms="47761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAppoitmentReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:15:11 IST" name="reportWrapUp" finished-at="2022-11-09T10:15:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAppoitmentReportPage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfAppoitmentReportPage()[pri:1, instance:testcases.AppotmentCalendarTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfAppoitmentReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:15:11 IST" name="beforeMethod" finished-at="2022-11-09T10:15:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfConsumerListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfConsumerListPage()[pri:2, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:15:11 IST" name="ValidateClickTestingOfConsumerListPage" finished-at="2022-11-09T10:15:53 IST" duration-ms="42009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfConsumerListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:15:53 IST" name="reportWrapUp" finished-at="2022-11-09T10:15:53 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfConsumerListPage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfConsumerListPage()[pri:2, instance:testcases.AppotmentCalendarTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfConsumerListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:15:53 IST" name="beforeMethod" finished-at="2022-11-09T10:15:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfCounterPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCounterPage()[pri:3, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:15:53 IST" name="ValidateClickTestingOfCounterPage" finished-at="2022-11-09T10:17:04 IST" duration-ms="70602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCounterPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:17:04 IST" name="reportWrapUp" finished-at="2022-11-09T10:17:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCounterPage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfCounterPage()[pri:3, instance:testcases.AppotmentCalendarTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfCounterPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfCoursePage()[pri:4, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:17:04 IST" name="ValidateClickTestingOfCoursePage" finished-at="2022-11-09T10:17:55 IST" duration-ms="51687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCoursePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:17:04 IST" name="beforeMethod" finished-at="2022-11-09T10:17:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfCoursePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:17:55 IST" name="reportWrapUp" finished-at="2022-11-09T10:17:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCoursePage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfCoursePage()[pri:4, instance:testcases.AppotmentCalendarTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfCoursePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:17:55 IST" name="beforeMethod" finished-at="2022-11-09T10:17:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfScheduleAppointmentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfScheduleAppointmentPage()[pri:5, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:17:55 IST" name="ValidateClickTestingOfScheduleAppointmentPage" finished-at="2022-11-09T10:18:30 IST" duration-ms="34621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfScheduleAppointmentPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:18:30 IST" name="reportWrapUp" finished-at="2022-11-09T10:18:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfScheduleAppointmentPage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfScheduleAppointmentPage()[pri:5, instance:testcases.AppotmentCalendarTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfScheduleAppointmentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:18:30 IST" name="beforeMethod" finished-at="2022-11-09T10:18:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfAppoitmentServicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAppoitmentServicePage()[pri:6, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:18:30 IST" name="ValidateClickTestingOfAppoitmentServicePage" finished-at="2022-11-09T10:19:42 IST" duration-ms="71742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAppoitmentServicePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:19:42 IST" name="reportWrapUp" finished-at="2022-11-09T10:19:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAppoitmentServicePage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfAppoitmentServicePage()[pri:6, instance:testcases.AppotmentCalendarTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfAppoitmentServicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:19:42 IST" name="beforeMethod" finished-at="2022-11-09T10:19:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfTokenPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTokenPage()[pri:7, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:19:42 IST" name="ValidateClickTestingOfTokenPage" finished-at="2022-11-09T10:20:47 IST" duration-ms="65267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTokenPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:20:47 IST" name="reportWrapUp" finished-at="2022-11-09T10:20:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTokenPage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfTokenPage()[pri:7, instance:testcases.AppotmentCalendarTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfTokenPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.AppotmentCalendarTest@7cc0cdad]" started-at="2022-11-09T10:20:47 IST" name="closeBrowser" finished-at="2022-11-09T10:20:47 IST" duration-ms="476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.AppotmentCalendarTest -->
      <class name="testcases.VDeskTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:33:48 IST" name="setUp" finished-at="2022-11-09T11:34:02 IST" duration-ms="14008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:34:02 IST" name="beforeMethod" finished-at="2022-11-09T11:34:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfApplicationSettingsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfApplicationSettingsPage()[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:34:02 IST" name="ValidateClickTestingOfApplicationSettingsPage" finished-at="2022-11-09T11:34:39 IST" duration-ms="36938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfApplicationSettingsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:34:39 IST" name="reportWrapUp" finished-at="2022-11-09T11:34:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfApplicationSettingsPage status=SUCCESS method=VDeskTest.ValidateClickTestingOfApplicationSettingsPage()[pri:0, instance:testcases.VDeskTest@47eaca72] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfApplicationSettingsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:34:39 IST" name="beforeMethod" finished-at="2022-11-09T11:34:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfApplicationSummaryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfApplicationSummaryPage()[pri:1, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:34:39 IST" name="ValidateClickTestingOfApplicationSummaryPage" finished-at="2022-11-09T11:35:19 IST" duration-ms="40176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfApplicationSummaryPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:35:19 IST" name="reportWrapUp" finished-at="2022-11-09T11:35:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfApplicationSummaryPage status=SUCCESS method=VDeskTest.ValidateClickTestingOfApplicationSummaryPage()[pri:1, instance:testcases.VDeskTest@47eaca72] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfApplicationSummaryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:35:19 IST" name="beforeMethod" finished-at="2022-11-09T11:35:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfApplicationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfApplicationPage()[pri:2, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:35:19 IST" name="ValidateClickTestingOfApplicationPage" finished-at="2022-11-09T11:35:59 IST" duration-ms="39701" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfApplicationPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:35:59 IST" name="reportWrapUp" finished-at="2022-11-09T11:35:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfApplicationPage status=SUCCESS method=VDeskTest.ValidateClickTestingOfApplicationPage()[pri:2, instance:testcases.VDeskTest@47eaca72] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfApplicationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:35:59 IST" name="beforeMethod" finished-at="2022-11-09T11:35:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfClientLogInPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfClientLogInPage()[pri:3, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:35:59 IST" name="ValidateClickTestingOfClientLogInPage" finished-at="2022-11-09T11:36:38 IST" duration-ms="38361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfClientLogInPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:36:38 IST" name="reportWrapUp" finished-at="2022-11-09T11:36:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfClientLogInPage status=SUCCESS method=VDeskTest.ValidateClickTestingOfClientLogInPage()[pri:3, instance:testcases.VDeskTest@47eaca72] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfClientLogInPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:36:38 IST" name="beforeMethod" finished-at="2022-11-09T11:36:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfDatabasePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfDatabasePage()[pri:4, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:36:38 IST" name="ValidateClickTestingOfDatabasePage" finished-at="2022-11-09T11:37:16 IST" duration-ms="38850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfDatabasePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:37:16 IST" name="reportWrapUp" finished-at="2022-11-09T11:37:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfDatabasePage status=SUCCESS method=VDeskTest.ValidateClickTestingOfDatabasePage()[pri:4, instance:testcases.VDeskTest@47eaca72] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfDatabasePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:37:16 IST" name="beforeMethod" finished-at="2022-11-09T11:37:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfDesktopClientsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfDesktopClientsPage()[pri:5, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:37:16 IST" name="ValidateClickTestingOfDesktopClientsPage" finished-at="2022-11-09T11:37:57 IST" duration-ms="40432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfDesktopClientsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:37:57 IST" name="reportWrapUp" finished-at="2022-11-09T11:37:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfDesktopClientsPage status=SUCCESS method=VDeskTest.ValidateClickTestingOfDesktopClientsPage()[pri:5, instance:testcases.VDeskTest@47eaca72] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfDesktopClientsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:37:57 IST" name="beforeMethod" finished-at="2022-11-09T11:37:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfGeneralSettingsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfGeneralSettingsPage()[pri:6, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:37:57 IST" name="ValidateClickTestingOfGeneralSettingsPage" finished-at="2022-11-09T11:38:33 IST" duration-ms="36413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGeneralSettingsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:38:33 IST" name="reportWrapUp" finished-at="2022-11-09T11:38:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGeneralSettingsPage status=SUCCESS method=VDeskTest.ValidateClickTestingOfGeneralSettingsPage()[pri:6, instance:testcases.VDeskTest@47eaca72] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfGeneralSettingsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:38:33 IST" name="beforeMethod" finished-at="2022-11-09T11:38:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfJobPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfJobPage()[pri:7, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:38:33 IST" name="ValidateClickTestingOfJobPage" finished-at="2022-11-09T11:39:11 IST" duration-ms="37783" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfJobPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:39:11 IST" name="reportWrapUp" finished-at="2022-11-09T11:39:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfJobPage status=SUCCESS method=VDeskTest.ValidateClickTestingOfJobPage()[pri:7, instance:testcases.VDeskTest@47eaca72] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfJobPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:39:11 IST" name="beforeMethod" finished-at="2022-11-09T11:39:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfJobsReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfJobsReportPage()[pri:8, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:39:11 IST" name="ValidateClickTestingOfJobsReportPage" finished-at="2022-11-09T11:39:47 IST" duration-ms="36370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfJobsReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:39:47 IST" name="reportWrapUp" finished-at="2022-11-09T11:39:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfJobsReportPage status=SUCCESS method=VDeskTest.ValidateClickTestingOfJobsReportPage()[pri:8, instance:testcases.VDeskTest@47eaca72] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfJobsReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:39:47 IST" name="beforeMethod" finished-at="2022-11-09T11:39:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfLogsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfLogsPage()[pri:9, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:39:47 IST" name="ValidateClickTestingOfLogsPage" finished-at="2022-11-09T11:40:25 IST" duration-ms="37278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfLogsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:40:25 IST" name="reportWrapUp" finished-at="2022-11-09T11:40:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfLogsPage status=SUCCESS method=VDeskTest.ValidateClickTestingOfLogsPage()[pri:9, instance:testcases.VDeskTest@47eaca72] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfLogsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:40:25 IST" name="beforeMethod" finished-at="2022-11-09T11:40:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfPoliciesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfPoliciesPage()[pri:10, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:40:25 IST" name="ValidateClickTestingOfPoliciesPage" finished-at="2022-11-09T11:41:11 IST" duration-ms="45920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfPoliciesPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:41:11 IST" name="reportWrapUp" finished-at="2022-11-09T11:41:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfPoliciesPage status=SUCCESS method=VDeskTest.ValidateClickTestingOfPoliciesPage()[pri:10, instance:testcases.VDeskTest@47eaca72] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfPoliciesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:41:11 IST" name="beforeMethod" finished-at="2022-11-09T11:41:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfRemoteDesktopPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfRemoteDesktopPage()[pri:11, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:41:11 IST" name="ValidateClickTestingOfRemoteDesktopPage" finished-at="2022-11-09T11:41:52 IST" duration-ms="40986" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfRemoteDesktopPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:41:52 IST" name="reportWrapUp" finished-at="2022-11-09T11:41:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfRemoteDesktopPage status=SUCCESS method=VDeskTest.ValidateClickTestingOfRemoteDesktopPage()[pri:11, instance:testcases.VDeskTest@47eaca72] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfRemoteDesktopPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:41:52 IST" name="beforeMethod" finished-at="2022-11-09T11:41:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfServerDetailsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfServerDetailsPage()[pri:12, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:41:52 IST" name="ValidateClickTestingOfServerDetailsPage" finished-at="2022-11-09T11:42:28 IST" duration-ms="36086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfServerDetailsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:42:28 IST" name="reportWrapUp" finished-at="2022-11-09T11:42:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfServerDetailsPage status=SUCCESS method=VDeskTest.ValidateClickTestingOfServerDetailsPage()[pri:12, instance:testcases.VDeskTest@47eaca72] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfServerDetailsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:42:28 IST" name="beforeMethod" finished-at="2022-11-09T11:42:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfServerRolesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfServerRolesPage()[pri:13, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:42:28 IST" name="ValidateClickTestingOfServerRolesPage" finished-at="2022-11-09T11:43:12 IST" duration-ms="44279" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:81)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.VDeskTest.ValidateClickTestingOfServerRolesPage(VDeskTest.java:190)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfServerRolesPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:43:12 IST" name="reportWrapUp" finished-at="2022-11-09T11:43:15 IST" duration-ms="3186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfServerRolesPage status=FAILURE method=VDeskTest.ValidateClickTestingOfServerRolesPage()[pri:13, instance:testcases.VDeskTest@47eaca72] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfServerRolesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:43:15 IST" name="beforeMethod" finished-at="2022-11-09T11:43:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfServerGroupsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfServerGroupsPage()[pri:14, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:43:15 IST" name="ValidateClickTestingOfServerGroupsPage" finished-at="2022-11-09T11:43:41 IST" duration-ms="26203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfServerGroupsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:43:41 IST" name="reportWrapUp" finished-at="2022-11-09T11:43:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfServerGroupsPage status=SUCCESS method=VDeskTest.ValidateClickTestingOfServerGroupsPage()[pri:14, instance:testcases.VDeskTest@47eaca72] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VDeskTest.ValidateClickTestingOfServerGroupsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.VDeskTest@47eaca72]" started-at="2022-11-09T11:43:41 IST" name="closeBrowser" finished-at="2022-11-09T11:43:42 IST" duration-ms="589" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.VDeskTest -->
      <class name="testcases.TicketingTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:15:44 IST" name="setUp" finished-at="2022-11-09T12:15:55 IST" duration-ms="11754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:15:55 IST" name="beforeMethod" finished-at="2022-11-09T12:15:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTicketingPage()[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:15:55 IST" name="ValidateClickTestingOfTicketingPage" finished-at="2022-11-09T12:17:37 IST" duration-ms="102047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTicketingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:17:37 IST" name="reportWrapUp" finished-at="2022-11-09T12:17:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTicketingPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfTicketingPage()[pri:0, instance:testcases.TicketingTest@4218d6a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfAddTicketPage()[pri:1, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:17:37 IST" name="ValidateClickTestingOfAddTicketPage" finished-at="2022-11-09T12:18:51 IST" duration-ms="73949" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAddTicketPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:17:37 IST" name="beforeMethod" finished-at="2022-11-09T12:17:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfAddTicketPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:18:51 IST" name="reportWrapUp" finished-at="2022-11-09T12:18:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAddTicketPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfAddTicketPage()[pri:1, instance:testcases.TicketingTest@4218d6a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfAddTicketPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:18:51 IST" name="beforeMethod" finished-at="2022-11-09T12:18:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfUnassignedTicketPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfUnassignedTicketPage()[pri:2, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:18:51 IST" name="ValidateClickTestingOfUnassignedTicketPage" finished-at="2022-11-09T12:20:42 IST" duration-ms="110257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfUnassignedTicketPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:20:42 IST" name="reportWrapUp" finished-at="2022-11-09T12:20:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfUnassignedTicketPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfUnassignedTicketPage()[pri:2, instance:testcases.TicketingTest@4218d6a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfUnassignedTicketPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfTicketFeedbackPage()[pri:3, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:20:42 IST" name="ValidateClickTestingOfTicketFeedbackPage" finished-at="2022-11-09T12:21:55 IST" duration-ms="73713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTicketFeedbackPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:20:42 IST" name="beforeMethod" finished-at="2022-11-09T12:20:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketFeedbackPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:21:55 IST" name="reportWrapUp" finished-at="2022-11-09T12:21:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTicketFeedbackPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfTicketFeedbackPage()[pri:3, instance:testcases.TicketingTest@4218d6a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketFeedbackPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:21:55 IST" name="beforeMethod" finished-at="2022-11-09T12:21:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfCannedReplyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCannedReplyPage()[pri:4, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:21:55 IST" name="ValidateClickTestingOfCannedReplyPage" finished-at="2022-11-09T12:23:18 IST" duration-ms="82887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCannedReplyPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:23:18 IST" name="reportWrapUp" finished-at="2022-11-09T12:23:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCannedReplyPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfCannedReplyPage()[pri:4, instance:testcases.TicketingTest@4218d6a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfCannedReplyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:23:18 IST" name="beforeMethod" finished-at="2022-11-09T12:23:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTicketReportPage()[pri:5, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:23:18 IST" name="ValidateClickTestingOfTicketReportPage" finished-at="2022-11-09T12:24:01 IST" duration-ms="42404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTicketReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:24:01 IST" name="reportWrapUp" finished-at="2022-11-09T12:24:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTicketReportPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfTicketReportPage()[pri:5, instance:testcases.TicketingTest@4218d6a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:24:01 IST" name="beforeMethod" finished-at="2022-11-09T12:24:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfManageServiceBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageServiceBoardPage()[pri:6, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:24:01 IST" name="ValidateClickTestingOfManageServiceBoardPage" finished-at="2022-11-09T12:25:20 IST" duration-ms="79638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageServiceBoardPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:25:20 IST" name="reportWrapUp" finished-at="2022-11-09T12:25:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageServiceBoardPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfManageServiceBoardPage()[pri:6, instance:testcases.TicketingTest@4218d6a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfManageServiceBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:25:20 IST" name="beforeMethod" finished-at="2022-11-09T12:25:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfAddticketGroupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAddticketGroupPage()[pri:7, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:25:20 IST" name="ValidateClickTestingOfAddticketGroupPage" finished-at="2022-11-09T12:26:13 IST" duration-ms="52962" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAddticketGroupPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:26:13 IST" name="reportWrapUp" finished-at="2022-11-09T12:26:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAddticketGroupPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfAddticketGroupPage()[pri:7, instance:testcases.TicketingTest@4218d6a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfAddticketGroupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfTicketGroupPage()[pri:8, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:26:13 IST" name="ValidateClickTestingOfTicketGroupPage" finished-at="2022-11-09T12:27:39 IST" duration-ms="85503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTicketGroupPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:26:13 IST" name="beforeMethod" finished-at="2022-11-09T12:26:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketGroupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:27:39 IST" name="reportWrapUp" finished-at="2022-11-09T12:27:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTicketGroupPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfTicketGroupPage()[pri:8, instance:testcases.TicketingTest@4218d6a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketGroupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:27:39 IST" name="beforeMethod" finished-at="2022-11-09T12:27:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfSLAPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfSLAPage()[pri:9, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:27:39 IST" name="ValidateClickTestingOfSLAPage" finished-at="2022-11-09T12:28:57 IST" duration-ms="78421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfSLAPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:28:57 IST" name="reportWrapUp" finished-at="2022-11-09T12:28:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfSLAPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfSLAPage()[pri:9, instance:testcases.TicketingTest@4218d6a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfSLAPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:28:57 IST" name="beforeMethod" finished-at="2022-11-09T12:28:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfKnowledgeBasePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfKnowledgeBasePage()[pri:10, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:28:57 IST" name="ValidateClickTestingOfKnowledgeBasePage" finished-at="2022-11-09T12:29:58 IST" duration-ms="61297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfKnowledgeBasePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:29:58 IST" name="reportWrapUp" finished-at="2022-11-09T12:29:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfKnowledgeBasePage status=SUCCESS method=TicketingTest.ValidateClickTestingOfKnowledgeBasePage()[pri:10, instance:testcases.TicketingTest@4218d6a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfKnowledgeBasePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:29:58 IST" name="beforeMethod" finished-at="2022-11-09T12:29:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfManageCategoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageCategoryPage()[pri:11, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:29:58 IST" name="ValidateClickTestingOfManageCategoryPage" finished-at="2022-11-09T12:30:50 IST" duration-ms="51491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageCategoryPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:30:50 IST" name="reportWrapUp" finished-at="2022-11-09T12:30:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageCategoryPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfManageCategoryPage()[pri:11, instance:testcases.TicketingTest@4218d6a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfManageCategoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:30:50 IST" name="beforeMethod" finished-at="2022-11-09T12:30:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfMyArticlesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfMyArticlesPage()[pri:12, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:30:50 IST" name="ValidateClickTestingOfMyArticlesPage" finished-at="2022-11-09T12:32:14 IST" duration-ms="84006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfMyArticlesPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:32:14 IST" name="reportWrapUp" finished-at="2022-11-09T12:32:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfMyArticlesPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfMyArticlesPage()[pri:12, instance:testcases.TicketingTest@4218d6a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfMyArticlesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:32:14 IST" name="beforeMethod" finished-at="2022-11-09T12:32:14 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProductPage()[pri:13, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:32:14 IST" name="ValidateClickTestingOfProductPage" finished-at="2022-11-09T12:33:30 IST" duration-ms="76084" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:33:30 IST" name="reportWrapUp" finished-at="2022-11-09T12:33:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfProductPage()[pri:13, instance:testcases.TicketingTest@4218d6a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.TicketingTest@4218d6a3]" started-at="2022-11-09T12:33:30 IST" name="closeBrowser" finished-at="2022-11-09T12:33:31 IST" duration-ms="643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.TicketingTest -->
      <class name="testcases.CompanySetUpTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:48:55 IST" name="setUp" finished-at="2022-11-09T11:49:03 IST" duration-ms="7897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:49:03 IST" name="beforeMethod" finished-at="2022-11-09T11:49:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfClientPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfClientPage()[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:49:03 IST" name="ValidateClickTestingOfClientPage" finished-at="2022-11-09T11:49:56 IST" duration-ms="52533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfClientPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:49:56 IST" name="reportWrapUp" finished-at="2022-11-09T11:49:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfClientPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfClientPage()[pri:0, instance:testcases.CompanySetUpTest@3270d194] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfClientPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:49:56 IST" name="beforeMethod" finished-at="2022-11-09T11:49:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfCompanyDirectoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCompanyDirectoryPage()[pri:1, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:49:56 IST" name="ValidateClickTestingOfCompanyDirectoryPage" finished-at="2022-11-09T11:50:30 IST" duration-ms="34070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCompanyDirectoryPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:50:30 IST" name="reportWrapUp" finished-at="2022-11-09T11:50:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCompanyDirectoryPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfCompanyDirectoryPage()[pri:1, instance:testcases.CompanySetUpTest@3270d194] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfCompanyDirectoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:50:30 IST" name="beforeMethod" finished-at="2022-11-09T11:50:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfCompanySetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCompanySetupPage()[pri:2, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:50:30 IST" name="ValidateClickTestingOfCompanySetupPage" finished-at="2022-11-09T11:51:05 IST" duration-ms="34936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCompanySetupPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:51:05 IST" name="reportWrapUp" finished-at="2022-11-09T11:51:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCompanySetupPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfCompanySetupPage()[pri:2, instance:testcases.CompanySetUpTest@3270d194] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfCompanySetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:51:05 IST" name="beforeMethod" finished-at="2022-11-09T11:51:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfConfigurationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfConfigurationPage()[pri:3, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:51:05 IST" name="ValidateClickTestingOfConfigurationPage" finished-at="2022-11-09T11:51:49 IST" duration-ms="43968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfConfigurationPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:51:49 IST" name="reportWrapUp" finished-at="2022-11-09T11:51:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfConfigurationPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfConfigurationPage()[pri:3, instance:testcases.CompanySetUpTest@3270d194] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfConfigurationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:51:49 IST" name="beforeMethod" finished-at="2022-11-09T11:51:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfContextMenuPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfContextMenuPage()[pri:4, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:51:49 IST" name="ValidateClickTestingOfContextMenuPage" finished-at="2022-11-09T11:52:23 IST" duration-ms="34581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfContextMenuPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:52:23 IST" name="reportWrapUp" finished-at="2022-11-09T11:52:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfContextMenuPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfContextMenuPage()[pri:4, instance:testcases.CompanySetUpTest@3270d194] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfContextMenuPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:52:23 IST" name="beforeMethod" finished-at="2022-11-09T11:52:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfHoliDayBankPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfHoliDayBankPage()[pri:5, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:52:23 IST" name="ValidateClickTestingOfHoliDayBankPage" finished-at="2022-11-09T11:53:26 IST" duration-ms="62967" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfHoliDayBankPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:53:26 IST" name="reportWrapUp" finished-at="2022-11-09T11:53:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfHoliDayBankPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfHoliDayBankPage()[pri:5, instance:testcases.CompanySetUpTest@3270d194] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfHoliDayBankPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:53:26 IST" name="beforeMethod" finished-at="2022-11-09T11:53:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfManageSubscriptionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageSubscriptionPage()[pri:6, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:53:26 IST" name="ValidateClickTestingOfManageSubscriptionPage" finished-at="2022-11-09T11:54:06 IST" duration-ms="39823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageSubscriptionPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:54:06 IST" name="reportWrapUp" finished-at="2022-11-09T11:54:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageSubscriptionPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfManageSubscriptionPage()[pri:6, instance:testcases.CompanySetUpTest@3270d194] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfManageSubscriptionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:54:06 IST" name="beforeMethod" finished-at="2022-11-09T11:54:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfManageTaxPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageTaxPage()[pri:7, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:54:06 IST" name="ValidateClickTestingOfManageTaxPage" finished-at="2022-11-09T11:55:07 IST" duration-ms="60740" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageTaxPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:55:07 IST" name="reportWrapUp" finished-at="2022-11-09T11:55:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageTaxPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfManageTaxPage()[pri:7, instance:testcases.CompanySetUpTest@3270d194] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfManageTaxPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfResourceApprovalPage()[pri:8, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:55:07 IST" name="ValidateClickTestingOfResourceApprovalPage" finished-at="2022-11-09T11:55:42 IST" duration-ms="34640" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfResourceApprovalPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:55:07 IST" name="beforeMethod" finished-at="2022-11-09T11:55:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfResourceApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:55:42 IST" name="reportWrapUp" finished-at="2022-11-09T11:55:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfResourceApprovalPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfResourceApprovalPage()[pri:8, instance:testcases.CompanySetUpTest@3270d194] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfResourceApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfRolesPage()[pri:9, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:55:42 IST" name="ValidateClickTestingOfRolesPage" finished-at="2022-11-09T11:56:33 IST" duration-ms="51262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfRolesPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:55:42 IST" name="beforeMethod" finished-at="2022-11-09T11:55:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfRolesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:56:33 IST" name="reportWrapUp" finished-at="2022-11-09T11:56:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfRolesPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfRolesPage()[pri:9, instance:testcases.CompanySetUpTest@3270d194] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfRolesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:56:33 IST" name="beforeMethod" finished-at="2022-11-09T11:56:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfUserPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfUserPage()[pri:10, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:56:33 IST" name="ValidateClickTestingOfUserPage" finished-at="2022-11-09T11:57:29 IST" duration-ms="55894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfUserPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:57:29 IST" name="reportWrapUp" finished-at="2022-11-09T11:57:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfUserPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfUserPage()[pri:10, instance:testcases.CompanySetUpTest@3270d194] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfUserPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:57:29 IST" name="beforeMethod" finished-at="2022-11-09T11:57:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfSearchVendorsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfSearchVendorsPage()[pri:11, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:57:29 IST" name="ValidateClickTestingOfSearchVendorsPage" finished-at="2022-11-09T11:58:31 IST" duration-ms="62434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfSearchVendorsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:58:31 IST" name="reportWrapUp" finished-at="2022-11-09T11:58:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfSearchVendorsPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfSearchVendorsPage()[pri:11, instance:testcases.CompanySetUpTest@3270d194] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfSearchVendorsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.CompanySetUpTest@3270d194]" started-at="2022-11-09T11:58:31 IST" name="closeBrowser" finished-at="2022-11-09T11:58:32 IST" duration-ms="599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.CompanySetUpTest -->
      <class name="testcases.CommunicationTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:51:53 IST" name="setUp" finished-at="2022-11-09T12:52:03 IST" duration-ms="10255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfIVRPage()[pri:0, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:52:03 IST" name="ValidateClickTestingOfIVRPage" finished-at="2022-11-09T12:52:41 IST" duration-ms="38498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfIVRPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:52:03 IST" name="beforeMethod" finished-at="2022-11-09T12:52:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfIVRPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:52:41 IST" name="reportWrapUp" finished-at="2022-11-09T12:52:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfIVRPage status=SUCCESS method=CommunicationTest.ValidateClickTestingOfIVRPage()[pri:0, instance:testcases.CommunicationTest@77888435] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfIVRPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfMeetingRecordingListPage()[pri:1, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:52:41 IST" name="ValidateClickTestingOfMeetingRecordingListPage" finished-at="2022-11-09T12:53:16 IST" duration-ms="35116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfMeetingRecordingListPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:52:41 IST" name="beforeMethod" finished-at="2022-11-09T12:52:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfMeetingRecordingListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:53:16 IST" name="reportWrapUp" finished-at="2022-11-09T12:53:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfMeetingRecordingListPage status=SUCCESS method=CommunicationTest.ValidateClickTestingOfMeetingRecordingListPage()[pri:1, instance:testcases.CommunicationTest@77888435] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfMeetingRecordingListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:53:16 IST" name="beforeMethod" finished-at="2022-11-09T12:53:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfMeetingsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfMeetingsPage()[pri:2, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:53:16 IST" name="ValidateClickTestingOfMeetingsPage" finished-at="2022-11-09T12:53:57 IST" duration-ms="40893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfMeetingsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:53:57 IST" name="reportWrapUp" finished-at="2022-11-09T12:53:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfMeetingsPage status=SUCCESS method=CommunicationTest.ValidateClickTestingOfMeetingsPage()[pri:2, instance:testcases.CommunicationTest@77888435] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfMeetingsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:53:57 IST" name="beforeMethod" finished-at="2022-11-09T12:53:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfUnifiedSetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfUnifiedSetupPage()[pri:3, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:53:57 IST" name="ValidateClickTestingOfUnifiedSetupPage" finished-at="2022-11-09T12:54:40 IST" duration-ms="42979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfUnifiedSetupPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:54:40 IST" name="reportWrapUp" finished-at="2022-11-09T12:54:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfUnifiedSetupPage status=SUCCESS method=CommunicationTest.ValidateClickTestingOfUnifiedSetupPage()[pri:3, instance:testcases.CommunicationTest@77888435] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfUnifiedSetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:54:40 IST" name="beforeMethod" finished-at="2022-11-09T12:54:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfVideoRecordingListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfVideoRecordingListPage()[pri:4, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:54:40 IST" name="ValidateClickTestingOfVideoRecordingListPage" finished-at="2022-11-09T12:55:18 IST" duration-ms="37458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfVideoRecordingListPage -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:55:18 IST" name="closeBrowser" finished-at="2022-11-09T12:55:18 IST" duration-ms="349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@77888435]" started-at="2022-11-09T12:55:18 IST" name="reportWrapUp" finished-at="2022-11-09T12:55:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfVideoRecordingListPage status=SUCCESS method=CommunicationTest.ValidateClickTestingOfVideoRecordingListPage()[pri:4, instance:testcases.CommunicationTest@77888435] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfVideoRecordingListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.CommunicationTest -->
      <class name="testcases.DocumentStorageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.DocumentStorageTest@48f2bd5b]" started-at="2022-11-09T11:23:20 IST" name="setUp" finished-at="2022-11-09T11:23:34 IST" duration-ms="13631" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfManageClientStoragePage()[pri:0, instance:testcases.DocumentStorageTest@48f2bd5b]" started-at="2022-11-09T11:23:34 IST" name="ValidateClickTestingOfManageClientStoragePage" finished-at="2022-11-09T11:24:05 IST" duration-ms="31319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageClientStoragePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.DocumentStorageTest@48f2bd5b]" started-at="2022-11-09T11:23:34 IST" name="beforeMethod" finished-at="2022-11-09T11:23:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.DocumentStorageTest.ValidateClickTestingOfManageClientStoragePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.DocumentStorageTest@48f2bd5b]" started-at="2022-11-09T11:24:05 IST" name="reportWrapUp" finished-at="2022-11-09T11:24:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageClientStoragePage status=SUCCESS method=DocumentStorageTest.ValidateClickTestingOfManageClientStoragePage()[pri:0, instance:testcases.DocumentStorageTest@48f2bd5b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.DocumentStorageTest.ValidateClickTestingOfManageClientStoragePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.DocumentStorageTest@48f2bd5b]" started-at="2022-11-09T11:24:05 IST" name="beforeMethod" finished-at="2022-11-09T11:24:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.DocumentStorageTest.ValidateClickTestingOfManageUserStoragePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageUserStoragePage()[pri:1, instance:testcases.DocumentStorageTest@48f2bd5b]" started-at="2022-11-09T11:24:05 IST" name="ValidateClickTestingOfManageUserStoragePage" finished-at="2022-11-09T11:24:59 IST" duration-ms="54037" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:81)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.DocumentStorageTest.ValidateClickTestingOfManageUserStoragePage(DocumentStorageTest.java:34)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageUserStoragePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.DocumentStorageTest@48f2bd5b]" started-at="2022-11-09T11:24:59 IST" name="reportWrapUp" finished-at="2022-11-09T11:24:59 IST" duration-ms="321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageUserStoragePage status=FAILURE method=DocumentStorageTest.ValidateClickTestingOfManageUserStoragePage()[pri:1, instance:testcases.DocumentStorageTest@48f2bd5b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.DocumentStorageTest.ValidateClickTestingOfManageUserStoragePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfUserStorageReportPage()[pri:2, instance:testcases.DocumentStorageTest@48f2bd5b]" started-at="2022-11-09T11:24:59 IST" name="ValidateClickTestingOfUserStorageReportPage" finished-at="2022-11-09T11:25:30 IST" duration-ms="30401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfUserStorageReportPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.DocumentStorageTest@48f2bd5b]" started-at="2022-11-09T11:24:59 IST" name="beforeMethod" finished-at="2022-11-09T11:24:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.DocumentStorageTest.ValidateClickTestingOfUserStorageReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.DocumentStorageTest@48f2bd5b]" started-at="2022-11-09T11:25:30 IST" name="closeBrowser" finished-at="2022-11-09T11:25:30 IST" duration-ms="404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.DocumentStorageTest@48f2bd5b]" started-at="2022-11-09T11:25:30 IST" name="reportWrapUp" finished-at="2022-11-09T11:25:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfUserStorageReportPage status=SUCCESS method=DocumentStorageTest.ValidateClickTestingOfUserStorageReportPage()[pri:2, instance:testcases.DocumentStorageTest@48f2bd5b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.DocumentStorageTest.ValidateClickTestingOfUserStorageReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.DocumentStorageTest -->
      <class name="testcases.HiringTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:40:41 IST" name="setUp" finished-at="2022-11-09T12:40:49 IST" duration-ms="8208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:40:49 IST" name="beforeMethod" finished-at="2022-11-09T12:40:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfCandidateListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCandidateListPage()[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:40:49 IST" name="ValidateClickTestingOfCandidateListPage" finished-at="2022-11-09T12:41:54 IST" duration-ms="64668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCandidateListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:41:54 IST" name="reportWrapUp" finished-at="2022-11-09T12:41:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCandidateListPage status=SUCCESS method=HiringTest.ValidateClickTestingOfCandidateListPage()[pri:0, instance:testcases.HiringTest@14cd1699] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfCandidateListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfConsultantListListPage()[pri:1, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:41:54 IST" name="ValidateClickTestingOfConsultantListListPage" finished-at="2022-11-09T12:42:53 IST" duration-ms="59200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfConsultantListListPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:41:54 IST" name="beforeMethod" finished-at="2022-11-09T12:41:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfConsultantListListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:42:53 IST" name="reportWrapUp" finished-at="2022-11-09T12:42:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfConsultantListListPage status=SUCCESS method=HiringTest.ValidateClickTestingOfConsultantListListPage()[pri:1, instance:testcases.HiringTest@14cd1699] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfConsultantListListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:42:53 IST" name="beforeMethod" finished-at="2022-11-09T12:42:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfGroupListListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfGroupListListPage()[pri:2, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:42:53 IST" name="ValidateClickTestingOfGroupListListPage" finished-at="2022-11-09T12:43:49 IST" duration-ms="55797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGroupListListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:43:49 IST" name="reportWrapUp" finished-at="2022-11-09T12:43:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGroupListListPage status=SUCCESS method=HiringTest.ValidateClickTestingOfGroupListListPage()[pri:2, instance:testcases.HiringTest@14cd1699] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfGroupListListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:43:49 IST" name="beforeMethod" finished-at="2022-11-09T12:43:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfjobListListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfjobListListPage()[pri:3, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:43:49 IST" name="ValidateClickTestingOfjobListListPage" finished-at="2022-11-09T12:45:04 IST" duration-ms="75250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfjobListListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:45:04 IST" name="reportWrapUp" finished-at="2022-11-09T12:45:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfjobListListPage status=SUCCESS method=HiringTest.ValidateClickTestingOfjobListListPage()[pri:3, instance:testcases.HiringTest@14cd1699] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfjobListListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:45:04 IST" name="beforeMethod" finished-at="2022-11-09T12:45:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfjobPostReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfjobPostReportPage()[pri:4, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:45:04 IST" name="ValidateClickTestingOfjobPostReportPage" finished-at="2022-11-09T12:45:40 IST" duration-ms="35955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfjobPostReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:45:40 IST" name="reportWrapUp" finished-at="2022-11-09T12:45:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfjobPostReportPage status=SUCCESS method=HiringTest.ValidateClickTestingOfjobPostReportPage()[pri:4, instance:testcases.HiringTest@14cd1699] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfjobPostReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:45:40 IST" name="beforeMethod" finished-at="2022-11-09T12:45:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfJobRequisitionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfJobRequisitionPage()[pri:5, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:45:40 IST" name="ValidateClickTestingOfJobRequisitionPage" finished-at="2022-11-09T12:46:29 IST" duration-ms="49021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfJobRequisitionPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:46:29 IST" name="reportWrapUp" finished-at="2022-11-09T12:46:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfJobRequisitionPage status=SUCCESS method=HiringTest.ValidateClickTestingOfJobRequisitionPage()[pri:5, instance:testcases.HiringTest@14cd1699] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfJobRequisitionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:46:29 IST" name="beforeMethod" finished-at="2022-11-09T12:46:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfOffboardEmployeeListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfOffboardEmployeeListPage()[pri:6, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:46:29 IST" name="ValidateClickTestingOfOffboardEmployeeListPage" finished-at="2022-11-09T12:47:22 IST" duration-ms="53563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfOffboardEmployeeListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:47:22 IST" name="reportWrapUp" finished-at="2022-11-09T12:47:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfOffboardEmployeeListPage status=SUCCESS method=HiringTest.ValidateClickTestingOfOffboardEmployeeListPage()[pri:6, instance:testcases.HiringTest@14cd1699] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfOffboardEmployeeListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:47:22 IST" name="beforeMethod" finished-at="2022-11-09T12:47:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfPolicyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfPolicyPage()[pri:7, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:47:22 IST" name="ValidateClickTestingOfPolicyPage" finished-at="2022-11-09T12:48:18 IST" duration-ms="55787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfPolicyPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:48:18 IST" name="reportWrapUp" finished-at="2022-11-09T12:48:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfPolicyPage status=SUCCESS method=HiringTest.ValidateClickTestingOfPolicyPage()[pri:7, instance:testcases.HiringTest@14cd1699] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfPolicyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:48:18 IST" name="beforeMethod" finished-at="2022-11-09T12:48:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfResignationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfResignationPage()[pri:8, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:48:18 IST" name="ValidateClickTestingOfResignationPage" finished-at="2022-11-09T12:49:22 IST" duration-ms="63440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfResignationPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:49:22 IST" name="reportWrapUp" finished-at="2022-11-09T12:49:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfResignationPage status=SUCCESS method=HiringTest.ValidateClickTestingOfResignationPage()[pri:8, instance:testcases.HiringTest@14cd1699] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfResignationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:49:22 IST" name="beforeMethod" finished-at="2022-11-09T12:49:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfSertvicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfSertvicePage()[pri:9, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:49:22 IST" name="ValidateClickTestingOfSertvicePage" finished-at="2022-11-09T12:49:56 IST" duration-ms="34387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfSertvicePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:49:56 IST" name="reportWrapUp" finished-at="2022-11-09T12:49:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfSertvicePage status=SUCCESS method=HiringTest.ValidateClickTestingOfSertvicePage()[pri:9, instance:testcases.HiringTest@14cd1699] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfSertvicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfTalentPoolListPage()[pri:10, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:49:56 IST" name="ValidateClickTestingOfTalentPoolListPage" finished-at="2022-11-09T12:50:58 IST" duration-ms="61907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTalentPoolListPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:49:56 IST" name="beforeMethod" finished-at="2022-11-09T12:49:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfTalentPoolListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:50:58 IST" name="reportWrapUp" finished-at="2022-11-09T12:50:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTalentPoolListPage status=SUCCESS method=HiringTest.ValidateClickTestingOfTalentPoolListPage()[pri:10, instance:testcases.HiringTest@14cd1699] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfTalentPoolListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:50:58 IST" name="beforeMethod" finished-at="2022-11-09T12:50:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfVendorListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfVendorListingPage()[pri:11, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:50:58 IST" name="ValidateClickTestingOfVendorListingPage" finished-at="2022-11-09T12:51:51 IST" duration-ms="53016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfVendorListingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:51:51 IST" name="reportWrapUp" finished-at="2022-11-09T12:51:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfVendorListingPage status=SUCCESS method=HiringTest.ValidateClickTestingOfVendorListingPage()[pri:11, instance:testcases.HiringTest@14cd1699] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfVendorListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.HiringTest@14cd1699]" started-at="2022-11-09T12:51:51 IST" name="closeBrowser" finished-at="2022-11-09T12:51:53 IST" duration-ms="1607" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.HiringTest -->
      <class name="testcases.TrainingTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TrainingTest@71d44a3]" started-at="2022-11-09T13:14:42 IST" name="setUp" finished-at="2022-11-09T13:15:41 IST" duration-ms="58641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TrainingTest@71d44a3]" started-at="2022-11-09T13:15:41 IST" name="beforeMethod" finished-at="2022-11-09T13:15:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TrainingTest.ValidateClickTestingOfTrainingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTrainingPage()[pri:0, instance:testcases.TrainingTest@71d44a3]" started-at="2022-11-09T13:15:41 IST" name="ValidateClickTestingOfTrainingPage" finished-at="2022-11-09T13:16:38 IST" duration-ms="57833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTrainingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TrainingTest@71d44a3]" started-at="2022-11-09T13:16:38 IST" name="reportWrapUp" finished-at="2022-11-09T13:16:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTrainingPage status=SUCCESS method=TrainingTest.ValidateClickTestingOfTrainingPage()[pri:0, instance:testcases.TrainingTest@71d44a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TrainingTest.ValidateClickTestingOfTrainingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TrainingTest@71d44a3]" started-at="2022-11-09T13:16:38 IST" name="beforeMethod" finished-at="2022-11-09T13:16:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TrainingTest.ValidateClickTestingOfTrainingReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTrainingReportPage()[pri:1, instance:testcases.TrainingTest@71d44a3]" started-at="2022-11-09T13:16:38 IST" name="ValidateClickTestingOfTrainingReportPage" finished-at="2022-11-09T13:17:34 IST" duration-ms="55765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTrainingReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TrainingTest@71d44a3]" started-at="2022-11-09T13:17:34 IST" name="reportWrapUp" finished-at="2022-11-09T13:17:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTrainingReportPage status=SUCCESS method=TrainingTest.ValidateClickTestingOfTrainingReportPage()[pri:1, instance:testcases.TrainingTest@71d44a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TrainingTest.ValidateClickTestingOfTrainingReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.TrainingTest@71d44a3]" started-at="2022-11-09T13:17:34 IST" name="closeBrowser" finished-at="2022-11-09T13:17:49 IST" duration-ms="15218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.TrainingTest -->
      <class name="testcases.IntegrationTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:31:02 IST" name="setUp" finished-at="2022-11-09T13:31:18 IST" duration-ms="15688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfBasecampPage()[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:31:18 IST" name="ValidateClickTestingOfBasecampPage" finished-at="2022-11-09T13:32:00 IST" duration-ms="42178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfBasecampPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:31:18 IST" name="beforeMethod" finished-at="2022-11-09T13:31:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfBasecampPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:32:00 IST" name="reportWrapUp" finished-at="2022-11-09T13:32:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfBasecampPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfBasecampPage()[pri:0, instance:testcases.IntegrationTest@4802796d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfBasecampPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:32:00 IST" name="beforeMethod" finished-at="2022-11-09T13:32:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfEmailPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfEmailPage()[pri:2, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:32:00 IST" name="ValidateClickTestingOfEmailPage" finished-at="2022-11-09T13:32:44 IST" duration-ms="43637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfEmailPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:32:44 IST" name="beforeMethod" finished-at="2022-11-09T13:32:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfFreshBookPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:32:44 IST" name="reportWrapUp" finished-at="2022-11-09T13:32:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfEmailPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfEmailPage()[pri:2, instance:testcases.IntegrationTest@4802796d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfEmailPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfFreshBookPage()[pri:3, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:32:44 IST" name="ValidateClickTestingOfFreshBookPage" finished-at="2022-11-09T13:33:31 IST" duration-ms="47313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfFreshBookPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:33:31 IST" name="reportWrapUp" finished-at="2022-11-09T13:33:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfFreshBookPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfFreshBookPage()[pri:3, instance:testcases.IntegrationTest@4802796d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfFreshBookPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:33:31 IST" name="beforeMethod" finished-at="2022-11-09T13:33:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfGPSTrackingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfGPSTrackingPage()[pri:4, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:33:31 IST" name="ValidateClickTestingOfGPSTrackingPage" finished-at="2022-11-09T13:34:30 IST" duration-ms="58872" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGPSTrackingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:34:30 IST" name="reportWrapUp" finished-at="2022-11-09T13:34:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGPSTrackingPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfGPSTrackingPage()[pri:4, instance:testcases.IntegrationTest@4802796d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfGPSTrackingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:34:30 IST" name="beforeMethod" finished-at="2022-11-09T13:34:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfIVrPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfIVrPage()[pri:5, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:34:30 IST" name="ValidateClickTestingOfIVrPage" finished-at="2022-11-09T13:35:45 IST" duration-ms="74912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfIVrPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:35:45 IST" name="reportWrapUp" finished-at="2022-11-09T13:35:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfIVrPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfIVrPage()[pri:5, instance:testcases.IntegrationTest@4802796d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfIVrPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfMicrosoftProjectPlanPage()[pri:6, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:35:45 IST" name="ValidateClickTestingOfMicrosoftProjectPlanPage" finished-at="2022-11-09T13:36:35 IST" duration-ms="50335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfMicrosoftProjectPlanPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:35:45 IST" name="beforeMethod" finished-at="2022-11-09T13:35:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfMicrosoftProjectPlanPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:36:35 IST" name="reportWrapUp" finished-at="2022-11-09T13:36:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfMicrosoftProjectPlanPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfMicrosoftProjectPlanPage()[pri:6, instance:testcases.IntegrationTest@4802796d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfMicrosoftProjectPlanPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:36:35 IST" name="beforeMethod" finished-at="2022-11-09T13:36:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfQuickBooksPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfQuickBooksPage()[pri:7, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:36:35 IST" name="ValidateClickTestingOfQuickBooksPage" finished-at="2022-11-09T13:37:18 IST" duration-ms="42617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfQuickBooksPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:37:18 IST" name="reportWrapUp" finished-at="2022-11-09T13:37:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfQuickBooksPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfQuickBooksPage()[pri:7, instance:testcases.IntegrationTest@4802796d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfQuickBooksPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfSalesForcePage()[pri:8, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:37:18 IST" name="ValidateClickTestingOfSalesForcePage" finished-at="2022-11-09T13:37:52 IST" duration-ms="34348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfSalesForcePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:37:18 IST" name="beforeMethod" finished-at="2022-11-09T13:37:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfSalesForcePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:37:52 IST" name="reportWrapUp" finished-at="2022-11-09T13:37:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfSalesForcePage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfSalesForcePage()[pri:8, instance:testcases.IntegrationTest@4802796d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfSalesForcePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfTrelloPage()[pri:9, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:37:52 IST" name="ValidateClickTestingOfTrelloPage" finished-at="2022-11-09T13:38:32 IST" duration-ms="40000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTrelloPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:37:52 IST" name="beforeMethod" finished-at="2022-11-09T13:37:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfTrelloPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:38:32 IST" name="reportWrapUp" finished-at="2022-11-09T13:38:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTrelloPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfTrelloPage()[pri:9, instance:testcases.IntegrationTest@4802796d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfTrelloPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfTwilioPage()[pri:10, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:38:32 IST" name="ValidateClickTestingOfTwilioPage" finished-at="2022-11-09T13:39:22 IST" duration-ms="50081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTwilioPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:38:32 IST" name="beforeMethod" finished-at="2022-11-09T13:38:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfTwilioPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:39:22 IST" name="reportWrapUp" finished-at="2022-11-09T13:39:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTwilioPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfTwilioPage()[pri:10, instance:testcases.IntegrationTest@4802796d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfTwilioPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:39:22 IST" name="beforeMethod" finished-at="2022-11-09T13:39:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfUnifiedSetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfUnifiedSetupPage()[pri:11, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:39:22 IST" name="ValidateClickTestingOfUnifiedSetupPage" finished-at="2022-11-09T13:39:59 IST" duration-ms="37347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfUnifiedSetupPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:39:59 IST" name="reportWrapUp" finished-at="2022-11-09T13:39:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfUnifiedSetupPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfUnifiedSetupPage()[pri:11, instance:testcases.IntegrationTest@4802796d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfUnifiedSetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.IntegrationTest@4802796d]" started-at="2022-11-09T13:39:59 IST" name="closeBrowser" finished-at="2022-11-09T13:40:02 IST" duration-ms="2663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.IntegrationTest -->
      <class name="testcases.VendorTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.VendorTest@55182842]" started-at="2022-11-09T11:47:31 IST" name="setUp" finished-at="2022-11-09T11:47:41 IST" duration-ms="10549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfTrainingPage()[pri:0, instance:testcases.VendorTest@55182842]" started-at="2022-11-09T11:47:42 IST" name="ValidateClickTestingOfTrainingPage" finished-at="2022-11-09T11:48:01 IST" duration-ms="19416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTrainingPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VendorTest@55182842]" started-at="2022-11-09T11:47:42 IST" name="beforeMethod" finished-at="2022-11-09T11:47:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VendorTest.ValidateClickTestingOfTrainingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VendorTest@55182842]" started-at="2022-11-09T11:48:01 IST" name="reportWrapUp" finished-at="2022-11-09T11:48:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTrainingPage status=SUCCESS method=VendorTest.ValidateClickTestingOfTrainingPage()[pri:0, instance:testcases.VendorTest@55182842] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VendorTest.ValidateClickTestingOfTrainingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfVendorListingPage()[pri:1, instance:testcases.VendorTest@55182842]" started-at="2022-11-09T11:48:01 IST" name="ValidateClickTestingOfVendorListingPage" finished-at="2022-11-09T11:48:55 IST" duration-ms="54038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfVendorListingPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VendorTest@55182842]" started-at="2022-11-09T11:48:01 IST" name="beforeMethod" finished-at="2022-11-09T11:48:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VendorTest.ValidateClickTestingOfVendorListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VendorTest@55182842]" started-at="2022-11-09T11:48:55 IST" name="reportWrapUp" finished-at="2022-11-09T11:48:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfVendorListingPage status=SUCCESS method=VendorTest.ValidateClickTestingOfVendorListingPage()[pri:1, instance:testcases.VendorTest@55182842] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VendorTest.ValidateClickTestingOfVendorListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.VendorTest@55182842]" started-at="2022-11-09T11:48:55 IST" name="closeBrowser" finished-at="2022-11-09T11:48:55 IST" duration-ms="369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.VendorTest -->
      <class name="testcases.INTEGRATIONSTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.INTEGRATIONSTest@7b2bbc3]" started-at="2022-11-09T11:25:30 IST" name="setUp" finished-at="2022-11-09T11:25:41 IST" duration-ms="10429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfGPSTrackingPage()[pri:1, instance:testcases.INTEGRATIONSTest@7b2bbc3]" started-at="2022-11-09T11:25:41 IST" name="ValidateClickTestingOfGPSTrackingPage" finished-at="2022-11-09T11:26:11 IST" duration-ms="30329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGPSTrackingPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.INTEGRATIONSTest@7b2bbc3]" started-at="2022-11-09T11:25:41 IST" name="beforeMethod" finished-at="2022-11-09T11:25:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.INTEGRATIONSTest.ValidateClickTestingOfGPSTrackingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.INTEGRATIONSTest@7b2bbc3]" started-at="2022-11-09T11:26:11 IST" name="reportWrapUp" finished-at="2022-11-09T11:26:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGPSTrackingPage status=SUCCESS method=INTEGRATIONSTest.ValidateClickTestingOfGPSTrackingPage()[pri:1, instance:testcases.INTEGRATIONSTest@7b2bbc3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.INTEGRATIONSTest.ValidateClickTestingOfGPSTrackingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfTwilioPage()[pri:2, instance:testcases.INTEGRATIONSTest@7b2bbc3]" started-at="2022-11-09T11:26:11 IST" name="ValidateClickTestingOfTwilioPage" finished-at="2022-11-09T11:27:02 IST" duration-ms="51502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTwilioPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.INTEGRATIONSTest@7b2bbc3]" started-at="2022-11-09T11:26:11 IST" name="beforeMethod" finished-at="2022-11-09T11:26:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.INTEGRATIONSTest.ValidateClickTestingOfTwilioPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.INTEGRATIONSTest@7b2bbc3]" started-at="2022-11-09T11:27:02 IST" name="reportWrapUp" finished-at="2022-11-09T11:27:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTwilioPage status=SUCCESS method=INTEGRATIONSTest.ValidateClickTestingOfTwilioPage()[pri:2, instance:testcases.INTEGRATIONSTest@7b2bbc3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.INTEGRATIONSTest.ValidateClickTestingOfTwilioPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.INTEGRATIONSTest@7b2bbc3]" started-at="2022-11-09T11:27:02 IST" name="beforeMethod" finished-at="2022-11-09T11:27:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.INTEGRATIONSTest.ValidateClickTestingOfConnectorPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfConnectorPage()[pri:3, instance:testcases.INTEGRATIONSTest@7b2bbc3]" started-at="2022-11-09T11:27:02 IST" name="ValidateClickTestingOfConnectorPage" finished-at="2022-11-09T11:28:17 IST" duration-ms="74890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfConnectorPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.INTEGRATIONSTest@7b2bbc3]" started-at="2022-11-09T11:28:17 IST" name="reportWrapUp" finished-at="2022-11-09T11:28:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfConnectorPage status=SUCCESS method=INTEGRATIONSTest.ValidateClickTestingOfConnectorPage()[pri:3, instance:testcases.INTEGRATIONSTest@7b2bbc3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.INTEGRATIONSTest.ValidateClickTestingOfConnectorPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.INTEGRATIONSTest@7b2bbc3]" started-at="2022-11-09T11:28:17 IST" name="closeBrowser" finished-at="2022-11-09T11:28:18 IST" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.INTEGRATIONSTest -->
      <class name="testcases.PerformanceReviewTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T11:58:32 IST" name="setUp" finished-at="2022-11-09T11:58:41 IST" duration-ms="9314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T11:58:41 IST" name="beforeMethod" finished-at="2022-11-09T11:58:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfPerformanceReviewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfPerformanceReviewPage()[pri:0, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T11:58:41 IST" name="ValidateClickTestingOfPerformanceReviewPage" finished-at="2022-11-09T11:59:03 IST" duration-ms="21725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfPerformanceReviewPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T11:59:03 IST" name="reportWrapUp" finished-at="2022-11-09T11:59:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfPerformanceReviewPage status=SUCCESS method=PerformanceReviewTest.ValidateClickTestingOfPerformanceReviewPage()[pri:0, instance:testcases.PerformanceReviewTest@235834f2] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfPerformanceReviewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfPerformanceReviewReportPage()[pri:1, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T11:59:03 IST" name="ValidateClickTestingOfPerformanceReviewReportPage" finished-at="2022-11-09T11:59:47 IST" duration-ms="44342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfPerformanceReviewReportPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T11:59:03 IST" name="beforeMethod" finished-at="2022-11-09T11:59:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfPerformanceReviewReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T11:59:47 IST" name="reportWrapUp" finished-at="2022-11-09T11:59:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfPerformanceReviewReportPage status=SUCCESS method=PerformanceReviewTest.ValidateClickTestingOfPerformanceReviewReportPage()[pri:1, instance:testcases.PerformanceReviewTest@235834f2] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfPerformanceReviewReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T11:59:47 IST" name="beforeMethod" finished-at="2022-11-09T11:59:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfProvideFeedbackPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProvideFeedbackPage()[pri:2, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T11:59:47 IST" name="ValidateClickTestingOfProvideFeedbackPage" finished-at="2022-11-09T12:00:22 IST" duration-ms="35083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProvideFeedbackPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T12:00:22 IST" name="reportWrapUp" finished-at="2022-11-09T12:00:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProvideFeedbackPage status=SUCCESS method=PerformanceReviewTest.ValidateClickTestingOfProvideFeedbackPage()[pri:2, instance:testcases.PerformanceReviewTest@235834f2] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfProvideFeedbackPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T12:00:22 IST" name="beforeMethod" finished-at="2022-11-09T12:00:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfProvideReviewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProvideReviewPage()[pri:3, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T12:00:22 IST" name="ValidateClickTestingOfProvideReviewPage" finished-at="2022-11-09T12:00:59 IST" duration-ms="36529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProvideReviewPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T12:00:59 IST" name="reportWrapUp" finished-at="2022-11-09T12:00:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProvideReviewPage status=SUCCESS method=PerformanceReviewTest.ValidateClickTestingOfProvideReviewPage()[pri:3, instance:testcases.PerformanceReviewTest@235834f2] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfProvideReviewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T12:00:59 IST" name="beforeMethod" finished-at="2022-11-09T12:00:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfReviewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfReviewPage()[pri:4, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T12:00:59 IST" name="ValidateClickTestingOfReviewPage" finished-at="2022-11-09T12:01:48 IST" duration-ms="49405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfReviewPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T12:01:48 IST" name="reportWrapUp" finished-at="2022-11-09T12:01:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfReviewPage status=SUCCESS method=PerformanceReviewTest.ValidateClickTestingOfReviewPage()[pri:4, instance:testcases.PerformanceReviewTest@235834f2] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfReviewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.PerformanceReviewTest@235834f2]" started-at="2022-11-09T12:01:48 IST" name="closeBrowser" finished-at="2022-11-09T12:01:48 IST" duration-ms="315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.PerformanceReviewTest -->
      <class name="testcases.ApprovalTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.ApprovalTest@55141def]" started-at="2022-11-09T11:43:42 IST" name="setUp" finished-at="2022-11-09T11:43:54 IST" duration-ms="12236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfApprovalChainPage()[pri:0, instance:testcases.ApprovalTest@55141def]" started-at="2022-11-09T11:43:54 IST" name="ValidateClickTestingOfApprovalChainPage" finished-at="2022-11-09T11:44:38 IST" duration-ms="43835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfApprovalChainPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@55141def]" started-at="2022-11-09T11:43:54 IST" name="beforeMethod" finished-at="2022-11-09T11:43:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalChainPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@55141def]" started-at="2022-11-09T11:44:38 IST" name="reportWrapUp" finished-at="2022-11-09T11:44:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfApprovalChainPage status=SUCCESS method=ApprovalTest.ValidateClickTestingOfApprovalChainPage()[pri:0, instance:testcases.ApprovalTest@55141def] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalChainPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfApprovalGroupPage()[pri:1, instance:testcases.ApprovalTest@55141def]" started-at="2022-11-09T11:44:38 IST" name="ValidateClickTestingOfApprovalGroupPage" finished-at="2022-11-09T11:45:41 IST" duration-ms="63300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfApprovalGroupPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@55141def]" started-at="2022-11-09T11:44:38 IST" name="beforeMethod" finished-at="2022-11-09T11:44:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalGroupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@55141def]" started-at="2022-11-09T11:45:41 IST" name="reportWrapUp" finished-at="2022-11-09T11:45:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfApprovalGroupPage status=SUCCESS method=ApprovalTest.ValidateClickTestingOfApprovalGroupPage()[pri:1, instance:testcases.ApprovalTest@55141def] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalGroupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@55141def]" started-at="2022-11-09T11:45:41 IST" name="beforeMethod" finished-at="2022-11-09T11:45:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfApprovalReportPage()[pri:2, instance:testcases.ApprovalTest@55141def]" started-at="2022-11-09T11:45:41 IST" name="ValidateClickTestingOfApprovalReportPage" finished-at="2022-11-09T11:46:29 IST" duration-ms="47726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfApprovalReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@55141def]" started-at="2022-11-09T11:46:29 IST" name="reportWrapUp" finished-at="2022-11-09T11:46:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfApprovalReportPage status=SUCCESS method=ApprovalTest.ValidateClickTestingOfApprovalReportPage()[pri:2, instance:testcases.ApprovalTest@55141def] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@55141def]" started-at="2022-11-09T11:46:29 IST" name="beforeMethod" finished-at="2022-11-09T11:46:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalRulePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfApprovalRulePage()[pri:3, instance:testcases.ApprovalTest@55141def]" started-at="2022-11-09T11:46:29 IST" name="ValidateClickTestingOfApprovalRulePage" finished-at="2022-11-09T11:47:30 IST" duration-ms="61410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfApprovalRulePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@55141def]" started-at="2022-11-09T11:47:30 IST" name="reportWrapUp" finished-at="2022-11-09T11:47:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfApprovalRulePage status=SUCCESS method=ApprovalTest.ValidateClickTestingOfApprovalRulePage()[pri:3, instance:testcases.ApprovalTest@55141def] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalRulePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.ApprovalTest@55141def]" started-at="2022-11-09T11:47:30 IST" name="closeBrowser" finished-at="2022-11-09T11:47:31 IST" duration-ms="460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.ApprovalTest -->
      <class name="testcases.ExpenseTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:48:23 IST" name="setUp" finished-at="2022-11-09T10:48:33 IST" duration-ms="10178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:48:33 IST" name="beforeMethod" finished-at="2022-11-09T10:48:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfAddExpensePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAddExpensePage()[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:48:33 IST" name="ValidateClickTestingOfAddExpensePage" finished-at="2022-11-09T10:49:06 IST" duration-ms="32926" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAddExpensePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:49:06 IST" name="reportWrapUp" finished-at="2022-11-09T10:49:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAddExpensePage status=SUCCESS method=ExpenseTest.ValidateClickTestingOfAddExpensePage()[pri:0, instance:testcases.ExpenseTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfAddExpensePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:49:06 IST" name="beforeMethod" finished-at="2022-11-09T10:49:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfBulkUploadExpensePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfBulkUploadExpensePage()[pri:1, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:49:06 IST" name="ValidateClickTestingOfBulkUploadExpensePage" finished-at="2022-11-09T10:49:44 IST" duration-ms="37457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfBulkUploadExpensePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:49:44 IST" name="reportWrapUp" finished-at="2022-11-09T10:49:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfBulkUploadExpensePage status=SUCCESS method=ExpenseTest.ValidateClickTestingOfBulkUploadExpensePage()[pri:1, instance:testcases.ExpenseTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfBulkUploadExpensePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:49:44 IST" name="beforeMethod" finished-at="2022-11-09T10:49:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpenseApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfExpenseApprovalPage()[pri:2, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:49:44 IST" name="ValidateClickTestingOfExpenseApprovalPage" finished-at="2022-11-09T10:50:39 IST" duration-ms="55311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfExpenseApprovalPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:50:39 IST" name="reportWrapUp" finished-at="2022-11-09T10:50:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfExpenseApprovalPage status=SUCCESS method=ExpenseTest.ValidateClickTestingOfExpenseApprovalPage()[pri:2, instance:testcases.ExpenseTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpenseApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfExpenseReportsPage()[pri:3, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:50:39 IST" name="ValidateClickTestingOfExpenseReportsPage" finished-at="2022-11-09T10:51:19 IST" duration-ms="40144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfExpenseReportsPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:50:39 IST" name="beforeMethod" finished-at="2022-11-09T10:50:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpenseReportsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:51:19 IST" name="reportWrapUp" finished-at="2022-11-09T10:51:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfExpenseReportsPage status=SUCCESS method=ExpenseTest.ValidateClickTestingOfExpenseReportsPage()[pri:3, instance:testcases.ExpenseTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpenseReportsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:51:19 IST" name="beforeMethod" finished-at="2022-11-09T10:51:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpensesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfExpensesPage()[pri:4, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:51:19 IST" name="ValidateClickTestingOfExpensesPage" finished-at="2022-11-09T10:52:21 IST" duration-ms="61626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfExpensesPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:52:21 IST" name="reportWrapUp" finished-at="2022-11-09T10:52:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfExpensesPage status=SUCCESS method=ExpenseTest.ValidateClickTestingOfExpensesPage()[pri:4, instance:testcases.ExpenseTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpensesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:52:21 IST" name="beforeMethod" finished-at="2022-11-09T10:52:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfProjectPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProjectPage()[pri:5, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:52:21 IST" name="ValidateClickTestingOfProjectPage" finished-at="2022-11-09T10:53:36 IST" duration-ms="74548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProjectPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:53:36 IST" name="reportWrapUp" finished-at="2022-11-09T10:53:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProjectPage status=SUCCESS method=ExpenseTest.ValidateClickTestingOfProjectPage()[pri:5, instance:testcases.ExpenseTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfProjectPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfExpenseDashBoardPage()[pri:6, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:53:36 IST" name="ValidateClickTestingOfExpenseDashBoardPage" finished-at="2022-11-09T10:54:36 IST" duration-ms="60443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfExpenseDashBoardPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:53:36 IST" name="beforeMethod" finished-at="2022-11-09T10:53:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpenseDashBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:54:36 IST" name="closeBrowser" finished-at="2022-11-09T10:54:37 IST" duration-ms="702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@368f2016]" started-at="2022-11-09T10:54:36 IST" name="reportWrapUp" finished-at="2022-11-09T10:54:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfExpenseDashBoardPage status=SUCCESS method=ExpenseTest.ValidateClickTestingOfExpenseDashBoardPage()[pri:6, instance:testcases.ExpenseTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpenseDashBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.ExpenseTest -->
      <class name="testcases.HumanResourcesTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:50:01 IST" name="setUp" finished-at="2022-11-09T09:50:12 IST" duration-ms="11106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:50:12 IST" name="beforeMethod" finished-at="2022-11-09T09:50:12 IST" duration-ms="401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfAttendancePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAttendancePage()[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:50:12 IST" name="ValidateClickTestingOfAttendancePage" finished-at="2022-11-09T09:50:32 IST" duration-ms="19711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAttendancePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:50:32 IST" name="reportWrapUp" finished-at="2022-11-09T09:50:32 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAttendancePage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfAttendancePage()[pri:0, instance:testcases.HumanResourcesTest@35d019a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfAttendancePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfAttendanceApprovalPage()[pri:1, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:50:32 IST" name="ValidateClickTestingOfAttendanceApprovalPage" finished-at="2022-11-09T09:51:10 IST" duration-ms="37508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAttendanceApprovalPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:50:32 IST" name="beforeMethod" finished-at="2022-11-09T09:50:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfAttendanceApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:51:10 IST" name="reportWrapUp" finished-at="2022-11-09T09:51:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAttendanceApprovalPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfAttendanceApprovalPage()[pri:1, instance:testcases.HumanResourcesTest@35d019a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfAttendanceApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:51:10 IST" name="beforeMethod" finished-at="2022-11-09T09:51:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfCandidateListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCandidateListPage()[pri:2, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:51:10 IST" name="ValidateClickTestingOfCandidateListPage" finished-at="2022-11-09T09:52:30 IST" duration-ms="80125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCandidateListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:52:30 IST" name="reportWrapUp" finished-at="2022-11-09T09:52:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCandidateListPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfCandidateListPage()[pri:2, instance:testcases.HumanResourcesTest@35d019a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfCandidateListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:52:30 IST" name="beforeMethod" finished-at="2022-11-09T09:52:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfCheckInFlagListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCheckInFlagListPage()[pri:3, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:52:30 IST" name="ValidateClickTestingOfCheckInFlagListPage" finished-at="2022-11-09T09:53:03 IST" duration-ms="33286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCheckInFlagListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:53:03 IST" name="reportWrapUp" finished-at="2022-11-09T09:53:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCheckInFlagListPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfCheckInFlagListPage()[pri:3, instance:testcases.HumanResourcesTest@35d019a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfCheckInFlagListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:53:03 IST" name="beforeMethod" finished-at="2022-11-09T09:53:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfConsultantListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfConsultantListPage()[pri:4, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:53:03 IST" name="ValidateClickTestingOfConsultantListPage" finished-at="2022-11-09T09:54:04 IST" duration-ms="60795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfConsultantListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:54:04 IST" name="reportWrapUp" finished-at="2022-11-09T09:54:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfConsultantListPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfConsultantListPage()[pri:4, instance:testcases.HumanResourcesTest@35d019a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfConsultantListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:54:04 IST" name="beforeMethod" finished-at="2022-11-09T09:54:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfGroupListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfGroupListPage()[pri:5, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:54:04 IST" name="ValidateClickTestingOfGroupListPage" finished-at="2022-11-09T09:54:54 IST" duration-ms="49862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGroupListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:54:54 IST" name="reportWrapUp" finished-at="2022-11-09T09:54:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGroupListPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfGroupListPage()[pri:5, instance:testcases.HumanResourcesTest@35d019a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfGroupListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfHRReportPage()[pri:6, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:54:54 IST" name="ValidateClickTestingOfHRReportPage" finished-at="2022-11-09T09:55:34 IST" duration-ms="40614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfHRReportPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:54:54 IST" name="beforeMethod" finished-at="2022-11-09T09:54:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfHRReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:55:34 IST" name="reportWrapUp" finished-at="2022-11-09T09:55:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfHRReportPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfHRReportPage()[pri:6, instance:testcases.HumanResourcesTest@35d019a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfHRReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:55:34 IST" name="beforeMethod" finished-at="2022-11-09T09:55:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfInductionDocumentListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfInductionDocumentListPage()[pri:7, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:55:34 IST" name="ValidateClickTestingOfInductionDocumentListPage" finished-at="2022-11-09T09:56:25 IST" duration-ms="51207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfInductionDocumentListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:56:25 IST" name="reportWrapUp" finished-at="2022-11-09T09:56:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfInductionDocumentListPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfInductionDocumentListPage()[pri:7, instance:testcases.HumanResourcesTest@35d019a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfInductionDocumentListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:56:25 IST" name="beforeMethod" finished-at="2022-11-09T09:56:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfLeavePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfLeavePage()[pri:8, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:56:25 IST" name="ValidateClickTestingOfLeavePage" finished-at="2022-11-09T09:57:59 IST" duration-ms="93655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfLeavePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:57:59 IST" name="reportWrapUp" finished-at="2022-11-09T09:57:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfLeavePage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfLeavePage()[pri:8, instance:testcases.HumanResourcesTest@35d019a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfLeavePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:57:59 IST" name="beforeMethod" finished-at="2022-11-09T09:57:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfLeaveApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfLeaveApprovalPage()[pri:9, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:57:59 IST" name="ValidateClickTestingOfLeaveApprovalPage" finished-at="2022-11-09T09:59:13 IST" duration-ms="74260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfLeaveApprovalPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:59:13 IST" name="reportWrapUp" finished-at="2022-11-09T09:59:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfLeaveApprovalPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfLeaveApprovalPage()[pri:9, instance:testcases.HumanResourcesTest@35d019a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfLeaveApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfLeaveTypeListingPage()[pri:10, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:59:13 IST" name="ValidateClickTestingOfLeaveTypeListingPage" finished-at="2022-11-09T10:00:09 IST" duration-ms="55521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfLeaveTypeListingPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T09:59:13 IST" name="beforeMethod" finished-at="2022-11-09T09:59:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfLeaveTypeListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T10:00:09 IST" name="reportWrapUp" finished-at="2022-11-09T10:00:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfLeaveTypeListingPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfLeaveTypeListingPage()[pri:10, instance:testcases.HumanResourcesTest@35d019a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfLeaveTypeListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T10:00:09 IST" name="beforeMethod" finished-at="2022-11-09T10:00:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfManageCheckInPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageCheckInPage()[pri:11, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T10:00:09 IST" name="ValidateClickTestingOfManageCheckInPage" finished-at="2022-11-09T10:00:57 IST" duration-ms="48060" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageCheckInPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T10:00:57 IST" name="reportWrapUp" finished-at="2022-11-09T10:00:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageCheckInPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfManageCheckInPage()[pri:11, instance:testcases.HumanResourcesTest@35d019a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfManageCheckInPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T10:00:57 IST" name="beforeMethod" finished-at="2022-11-09T10:00:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfTalentPoolListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTalentPoolListPage()[pri:12, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T10:00:57 IST" name="ValidateClickTestingOfTalentPoolListPage" finished-at="2022-11-09T10:01:57 IST" duration-ms="60086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTalentPoolListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T10:01:57 IST" name="reportWrapUp" finished-at="2022-11-09T10:01:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTalentPoolListPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfTalentPoolListPage()[pri:12, instance:testcases.HumanResourcesTest@35d019a3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfTalentPoolListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T10:01:57 IST" name="closeBrowser" finished-at="2022-11-09T10:01:58 IST" duration-ms="1293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="close()[pri:0, instance:testcases.HumanResourcesTest@35d019a3]" started-at="2022-11-09T13:40:03 IST" name="close" finished-at="2022-11-09T13:40:05 IST" duration-ms="2228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- testcases.HumanResourcesTest -->
      <class name="testcases.AssetManagementTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:20:47 IST" name="setUp" finished-at="2022-11-09T10:20:55 IST" duration-ms="8003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:20:55 IST" name="beforeMethod" finished-at="2022-11-09T10:20:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfGroupListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfGroupListPage()[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:20:55 IST" name="ValidateClickTestingOfGroupListPage" finished-at="2022-11-09T10:21:31 IST" duration-ms="35874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGroupListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:21:31 IST" name="reportWrapUp" finished-at="2022-11-09T10:21:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGroupListPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfGroupListPage()[pri:0, instance:testcases.AssetManagementTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfGroupListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:21:31 IST" name="beforeMethod" finished-at="2022-11-09T10:21:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfReturnListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfReturnListPage()[pri:1, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:21:31 IST" name="ValidateClickTestingOfReturnListPage" finished-at="2022-11-09T10:22:06 IST" duration-ms="34534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfReturnListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:22:06 IST" name="reportWrapUp" finished-at="2022-11-09T10:22:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfReturnListPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfReturnListPage()[pri:1, instance:testcases.AssetManagementTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfReturnListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfMissingProductPage()[pri:2, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:22:06 IST" name="ValidateClickTestingOfMissingProductPage" finished-at="2022-11-09T10:22:42 IST" duration-ms="36577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfMissingProductPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:22:06 IST" name="beforeMethod" finished-at="2022-11-09T10:22:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfMissingProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:22:42 IST" name="reportWrapUp" finished-at="2022-11-09T10:22:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfMissingProductPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfMissingProductPage()[pri:2, instance:testcases.AssetManagementTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfMissingProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:22:42 IST" name="beforeMethod" finished-at="2022-11-09T10:22:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductsScanSummaryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProductsScanSummaryPage()[pri:3, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:22:42 IST" name="ValidateClickTestingOfProductsScanSummaryPage" finished-at="2022-11-09T10:23:19 IST" duration-ms="36681" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductsScanSummaryPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:23:19 IST" name="reportWrapUp" finished-at="2022-11-09T10:23:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductsScanSummaryPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfProductsScanSummaryPage()[pri:3, instance:testcases.AssetManagementTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductsScanSummaryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfRFIDAssetListingPage()[pri:4, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:23:19 IST" name="ValidateClickTestingOfRFIDAssetListingPage" finished-at="2022-11-09T10:23:55 IST" duration-ms="35745" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfRFIDAssetListingPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:23:19 IST" name="beforeMethod" finished-at="2022-11-09T10:23:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfRFIDAssetListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:23:55 IST" name="reportWrapUp" finished-at="2022-11-09T10:23:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfRFIDAssetListingPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfRFIDAssetListingPage()[pri:4, instance:testcases.AssetManagementTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfRFIDAssetListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:23:55 IST" name="beforeMethod" finished-at="2022-11-09T10:23:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfScannedItemsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfScannedItemsPage()[pri:5, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:23:55 IST" name="ValidateClickTestingOfScannedItemsPage" finished-at="2022-11-09T10:24:39 IST" duration-ms="43675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfScannedItemsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:24:39 IST" name="reportWrapUp" finished-at="2022-11-09T10:24:39 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfScannedItemsPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfScannedItemsPage()[pri:5, instance:testcases.AssetManagementTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfScannedItemsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:24:39 IST" name="beforeMethod" finished-at="2022-11-09T10:24:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfScannedItemsStatusPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfScannedItemsStatusPage()[pri:6, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:24:39 IST" name="ValidateClickTestingOfScannedItemsStatusPage" finished-at="2022-11-09T10:25:15 IST" duration-ms="36415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfScannedItemsStatusPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:25:15 IST" name="reportWrapUp" finished-at="2022-11-09T10:25:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfScannedItemsStatusPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfScannedItemsStatusPage()[pri:6, instance:testcases.AssetManagementTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfScannedItemsStatusPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:25:15 IST" name="beforeMethod" finished-at="2022-11-09T10:25:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfManageProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageProductPage()[pri:7, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:25:15 IST" name="ValidateClickTestingOfManageProductPage" finished-at="2022-11-09T10:27:22 IST" duration-ms="127049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageProductPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:27:22 IST" name="reportWrapUp" finished-at="2022-11-09T10:27:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageProductPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfManageProductPage()[pri:7, instance:testcases.AssetManagementTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfManageProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfProductWriteOffPage()[pri:8, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:27:22 IST" name="ValidateClickTestingOfProductWriteOffPage" finished-at="2022-11-09T10:28:21 IST" duration-ms="59354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductWriteOffPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:27:22 IST" name="beforeMethod" finished-at="2022-11-09T10:27:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductWriteOffPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:28:21 IST" name="reportWrapUp" finished-at="2022-11-09T10:28:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductWriteOffPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfProductWriteOffPage()[pri:8, instance:testcases.AssetManagementTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductWriteOffPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfMyProductPage()[pri:9, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:28:21 IST" name="ValidateClickTestingOfMyProductPage" finished-at="2022-11-09T10:30:31 IST" duration-ms="130064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfMyProductPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:28:21 IST" name="beforeMethod" finished-at="2022-11-09T10:28:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfMyProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:30:31 IST" name="reportWrapUp" finished-at="2022-11-09T10:30:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfMyProductPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfMyProductPage()[pri:9, instance:testcases.AssetManagementTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfMyProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:30:31 IST" name="beforeMethod" finished-at="2022-11-09T10:30:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProductReportPage()[pri:10, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:30:31 IST" name="ValidateClickTestingOfProductReportPage" finished-at="2022-11-09T10:31:35 IST" duration-ms="63915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:31:35 IST" name="reportWrapUp" finished-at="2022-11-09T10:31:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductReportPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfProductReportPage()[pri:10, instance:testcases.AssetManagementTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:31:35 IST" name="beforeMethod" finished-at="2022-11-09T10:31:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductAssignmentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProductAssignmentPage()[pri:11, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:31:35 IST" name="ValidateClickTestingOfProductAssignmentPage" finished-at="2022-11-09T10:32:37 IST" duration-ms="61527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductAssignmentPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:32:37 IST" name="reportWrapUp" finished-at="2022-11-09T10:32:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductAssignmentPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfProductAssignmentPage()[pri:11, instance:testcases.AssetManagementTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductAssignmentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:32:37 IST" name="beforeMethod" finished-at="2022-11-09T10:32:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductContainerPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProductContainerPage()[pri:12, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:32:37 IST" name="ValidateClickTestingOfProductContainerPage" finished-at="2022-11-09T10:34:42 IST" duration-ms="125265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductContainerPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:34:42 IST" name="reportWrapUp" finished-at="2022-11-09T10:34:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductContainerPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfProductContainerPage()[pri:12, instance:testcases.AssetManagementTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductContainerPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:34:42 IST" name="beforeMethod" finished-at="2022-11-09T10:34:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductTyperPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProductTyperPage()[pri:13, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:34:42 IST" name="ValidateClickTestingOfProductTyperPage" finished-at="2022-11-09T10:35:57 IST" duration-ms="75121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductTyperPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:35:57 IST" name="reportWrapUp" finished-at="2022-11-09T10:35:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductTyperPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfProductTyperPage()[pri:13, instance:testcases.AssetManagementTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductTyperPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:35:57 IST" name="beforeMethod" finished-at="2022-11-09T10:35:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfDashboardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfDashboardPage()[pri:14, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:35:57 IST" name="ValidateClickTestingOfDashboardPage" finished-at="2022-11-09T10:36:43 IST" duration-ms="45713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfDashboardPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:36:43 IST" name="reportWrapUp" finished-at="2022-11-09T10:36:43 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfDashboardPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfDashboardPage()[pri:14, instance:testcases.AssetManagementTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfDashboardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.AssetManagementTest@7c7b252e]" started-at="2022-11-09T10:36:43 IST" name="closeBrowser" finished-at="2022-11-09T10:37:06 IST" duration-ms="23037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.AssetManagementTest -->
      <class name="testcases.HRManagementTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:01:48 IST" name="setUp" finished-at="2022-11-09T12:01:58 IST" duration-ms="9340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:01:58 IST" name="beforeMethod" finished-at="2022-11-09T12:01:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendancePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAttendancePage()[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:01:58 IST" name="ValidateClickTestingOfAttendancePage" finished-at="2022-11-09T12:02:16 IST" duration-ms="18267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAttendancePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:02:16 IST" name="reportWrapUp" finished-at="2022-11-09T12:02:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAttendancePage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfAttendancePage()[pri:0, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendancePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:02:16 IST" name="beforeMethod" finished-at="2022-11-09T12:02:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendanceCardReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAttendanceCardReportPage()[pri:1, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:02:16 IST" name="ValidateClickTestingOfAttendanceCardReportPage" finished-at="2022-11-09T12:02:53 IST" duration-ms="36963" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAttendanceCardReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:02:53 IST" name="reportWrapUp" finished-at="2022-11-09T12:02:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAttendanceCardReportPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfAttendanceCardReportPage()[pri:1, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendanceCardReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfAttendanceInOutReportPage()[pri:2, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:02:53 IST" name="ValidateClickTestingOfAttendanceInOutReportPage" finished-at="2022-11-09T12:03:27 IST" duration-ms="34093" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAttendanceInOutReportPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:02:53 IST" name="beforeMethod" finished-at="2022-11-09T12:02:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendanceInOutReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:03:27 IST" name="reportWrapUp" finished-at="2022-11-09T12:03:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAttendanceInOutReportPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfAttendanceInOutReportPage()[pri:2, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendanceInOutReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfAttendanceApprovalPage()[pri:3, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:03:27 IST" name="ValidateClickTestingOfAttendanceApprovalPage" finished-at="2022-11-09T12:04:02 IST" duration-ms="35087" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAttendanceApprovalPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:03:27 IST" name="beforeMethod" finished-at="2022-11-09T12:03:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendanceApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:04:02 IST" name="reportWrapUp" finished-at="2022-11-09T12:04:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAttendanceApprovalPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfAttendanceApprovalPage()[pri:3, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendanceApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfCheckInFlagListPage()[pri:4, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:04:02 IST" name="ValidateClickTestingOfCheckInFlagListPage" finished-at="2022-11-09T12:04:37 IST" duration-ms="35304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCheckInFlagListPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:04:02 IST" name="beforeMethod" finished-at="2022-11-09T12:04:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfCheckInFlagListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:04:38 IST" name="reportWrapUp" finished-at="2022-11-09T12:04:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCheckInFlagListPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfCheckInFlagListPage()[pri:4, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfCheckInFlagListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:04:38 IST" name="beforeMethod" finished-at="2022-11-09T12:04:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfDisputeApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfDisputeApprovalPage()[pri:5, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:04:38 IST" name="ValidateClickTestingOfDisputeApprovalPage" finished-at="2022-11-09T12:05:14 IST" duration-ms="36413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfDisputeApprovalPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:05:14 IST" name="reportWrapUp" finished-at="2022-11-09T12:05:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfDisputeApprovalPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfDisputeApprovalPage()[pri:5, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfDisputeApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:05:14 IST" name="beforeMethod" finished-at="2022-11-09T12:05:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfCheckInOutDisputePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCheckInOutDisputePage()[pri:6, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:05:14 IST" name="ValidateClickTestingOfCheckInOutDisputePage" finished-at="2022-11-09T12:05:49 IST" duration-ms="35008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCheckInOutDisputePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:05:49 IST" name="reportWrapUp" finished-at="2022-11-09T12:05:49 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCheckInOutDisputePage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfCheckInOutDisputePage()[pri:6, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfCheckInOutDisputePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:05:49 IST" name="beforeMethod" finished-at="2022-11-09T12:05:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfGroupListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfGroupListPage()[pri:7, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:05:49 IST" name="ValidateClickTestingOfGroupListPage" finished-at="2022-11-09T12:06:37 IST" duration-ms="48487" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGroupListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:06:37 IST" name="reportWrapUp" finished-at="2022-11-09T12:06:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGroupListPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfGroupListPage()[pri:7, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfGroupListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfHrReportPage()[pri:8, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:06:37 IST" name="ValidateClickTestingOfHrReportPage" finished-at="2022-11-09T12:07:23 IST" duration-ms="45643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfHrReportPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:06:37 IST" name="beforeMethod" finished-at="2022-11-09T12:06:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfHrReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:07:23 IST" name="reportWrapUp" finished-at="2022-11-09T12:07:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfHrReportPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfHrReportPage()[pri:8, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfHrReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:07:23 IST" name="beforeMethod" finished-at="2022-11-09T12:07:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfInductionDocumentListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfInductionDocumentListPage()[pri:9, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:07:23 IST" name="ValidateClickTestingOfInductionDocumentListPage" finished-at="2022-11-09T12:08:27 IST" duration-ms="63792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfInductionDocumentListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:08:27 IST" name="reportWrapUp" finished-at="2022-11-09T12:08:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfInductionDocumentListPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfInductionDocumentListPage()[pri:9, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfInductionDocumentListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:08:27 IST" name="beforeMethod" finished-at="2022-11-09T12:08:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfLeavePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfLeavePage()[pri:10, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:08:27 IST" name="ValidateClickTestingOfLeavePage" finished-at="2022-11-09T12:09:51 IST" duration-ms="83852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfLeavePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:09:51 IST" name="reportWrapUp" finished-at="2022-11-09T12:09:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfLeavePage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfLeavePage()[pri:10, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfLeavePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:09:51 IST" name="beforeMethod" finished-at="2022-11-09T12:09:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfLeaveApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfLeaveApprovalPage()[pri:11, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:09:51 IST" name="ValidateClickTestingOfLeaveApprovalPage" finished-at="2022-11-09T12:10:58 IST" duration-ms="67382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfLeaveApprovalPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:10:58 IST" name="reportWrapUp" finished-at="2022-11-09T12:10:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfLeaveApprovalPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfLeaveApprovalPage()[pri:11, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfLeaveApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:10:58 IST" name="beforeMethod" finished-at="2022-11-09T12:10:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfLeaveTypeListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfLeaveTypeListingPage()[pri:12, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:10:58 IST" name="ValidateClickTestingOfLeaveTypeListingPage" finished-at="2022-11-09T12:11:56 IST" duration-ms="57981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfLeaveTypeListingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:11:56 IST" name="reportWrapUp" finished-at="2022-11-09T12:11:56 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfLeaveTypeListingPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfLeaveTypeListingPage()[pri:12, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfLeaveTypeListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:11:56 IST" name="beforeMethod" finished-at="2022-11-09T12:11:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfManageCheckInPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageCheckInPage()[pri:13, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:11:56 IST" name="ValidateClickTestingOfManageCheckInPage" finished-at="2022-11-09T12:12:44 IST" duration-ms="48343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageCheckInPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:12:44 IST" name="reportWrapUp" finished-at="2022-11-09T12:12:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageCheckInPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfManageCheckInPage()[pri:13, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfManageCheckInPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfOffboardEmployeeListPage()[pri:14, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:12:44 IST" name="ValidateClickTestingOfOffboardEmployeeListPage" finished-at="2022-11-09T12:13:38 IST" duration-ms="53426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfOffboardEmployeeListPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:12:44 IST" name="beforeMethod" finished-at="2022-11-09T12:12:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfOffboardEmployeeListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:13:38 IST" name="reportWrapUp" finished-at="2022-11-09T12:13:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfOffboardEmployeeListPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfOffboardEmployeeListPage()[pri:14, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfOffboardEmployeeListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:13:38 IST" name="beforeMethod" finished-at="2022-11-09T12:13:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfPolicyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfPolicyPage()[pri:15, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:13:38 IST" name="ValidateClickTestingOfPolicyPage" finished-at="2022-11-09T12:14:37 IST" duration-ms="58935" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfPolicyPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:14:37 IST" name="reportWrapUp" finished-at="2022-11-09T12:14:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfPolicyPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfPolicyPage()[pri:15, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfPolicyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:14:37 IST" name="beforeMethod" finished-at="2022-11-09T12:14:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfResignationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfResignationPage()[pri:16, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:14:37 IST" name="ValidateClickTestingOfResignationPage" finished-at="2022-11-09T12:15:43 IST" duration-ms="66095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfResignationPage -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:15:43 IST" name="closeBrowser" finished-at="2022-11-09T12:15:44 IST" duration-ms="639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@5656be13]" started-at="2022-11-09T12:15:43 IST" name="reportWrapUp" finished-at="2022-11-09T12:15:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfResignationPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfResignationPage()[pri:16, instance:testcases.HRManagementTest@5656be13] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfResignationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.HRManagementTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
