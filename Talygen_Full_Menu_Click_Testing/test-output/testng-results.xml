<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="23" total="247" passed="196" failed="26" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-06-29T01:46:15 IST" name="Suite" finished-at="2023-06-29T05:36:19 IST" duration-ms="13804457">
    <groups>
    </groups>
    <test started-at="2023-06-29T01:46:15 IST" name="Test" finished-at="2023-06-29T05:36:19 IST" duration-ms="13804457">
      <class name="testcases.CompanySetUpTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:38:06 IST" name="setUp" finished-at="2023-06-29T03:38:14 IST" duration-ms="8124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:38:14 IST" name="beforeMethod" finished-at="2023-06-29T03:38:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfClientPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfClientPage()[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:38:14 IST" name="ValidateClickTestingOfClientPage" finished-at="2023-06-29T03:39:21 IST" duration-ms="67617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfClientPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:39:21 IST" name="reportWrapUp" finished-at="2023-06-29T03:39:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfClientPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfClientPage()[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfClientPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:39:21 IST" name="beforeMethod" finished-at="2023-06-29T03:39:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfCompanyDirectoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCompanyDirectoryPage()[pri:1, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:39:21 IST" name="ValidateClickTestingOfCompanyDirectoryPage" finished-at="2023-06-29T03:39:57 IST" duration-ms="35866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCompanyDirectoryPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:39:57 IST" name="reportWrapUp" finished-at="2023-06-29T03:39:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCompanyDirectoryPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfCompanyDirectoryPage()[pri:1, instance:testcases.CompanySetUpTest@2a4fb17b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfCompanyDirectoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:39:57 IST" name="beforeMethod" finished-at="2023-06-29T03:39:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfCompanySetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCompanySetupPage()[pri:2, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:39:57 IST" name="ValidateClickTestingOfCompanySetupPage" finished-at="2023-06-29T03:40:37 IST" duration-ms="39436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCompanySetupPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:40:37 IST" name="reportWrapUp" finished-at="2023-06-29T03:40:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCompanySetupPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfCompanySetupPage()[pri:2, instance:testcases.CompanySetUpTest@2a4fb17b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfCompanySetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfConfigurationPage()[pri:3, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:40:37 IST" name="ValidateClickTestingOfConfigurationPage" finished-at="2023-06-29T03:41:24 IST" duration-ms="47076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfConfigurationPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:40:37 IST" name="beforeMethod" finished-at="2023-06-29T03:40:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfConfigurationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:41:24 IST" name="reportWrapUp" finished-at="2023-06-29T03:41:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfConfigurationPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfConfigurationPage()[pri:3, instance:testcases.CompanySetUpTest@2a4fb17b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfConfigurationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:41:24 IST" name="beforeMethod" finished-at="2023-06-29T03:41:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfContextMenuPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfContextMenuPage()[pri:4, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:41:24 IST" name="ValidateClickTestingOfContextMenuPage" finished-at="2023-06-29T03:41:59 IST" duration-ms="35701" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfContextMenuPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:41:59 IST" name="reportWrapUp" finished-at="2023-06-29T03:41:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfContextMenuPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfContextMenuPage()[pri:4, instance:testcases.CompanySetUpTest@2a4fb17b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfContextMenuPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:41:59 IST" name="beforeMethod" finished-at="2023-06-29T03:41:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfHoliDayBankPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfHoliDayBankPage()[pri:5, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:41:59 IST" name="ValidateClickTestingOfHoliDayBankPage" finished-at="2023-06-29T03:43:12 IST" duration-ms="72340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfHoliDayBankPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:43:12 IST" name="reportWrapUp" finished-at="2023-06-29T03:43:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfHoliDayBankPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfHoliDayBankPage()[pri:5, instance:testcases.CompanySetUpTest@2a4fb17b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfHoliDayBankPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:43:12 IST" name="beforeMethod" finished-at="2023-06-29T03:43:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfManageSubscriptionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageSubscriptionPage()[pri:6, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:43:12 IST" name="ValidateClickTestingOfManageSubscriptionPage" finished-at="2023-06-29T03:43:49 IST" duration-ms="37039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageSubscriptionPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:43:49 IST" name="reportWrapUp" finished-at="2023-06-29T03:43:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageSubscriptionPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfManageSubscriptionPage()[pri:6, instance:testcases.CompanySetUpTest@2a4fb17b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfManageSubscriptionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:43:49 IST" name="beforeMethod" finished-at="2023-06-29T03:43:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfManageTaxPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageTaxPage()[pri:7, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:43:49 IST" name="ValidateClickTestingOfManageTaxPage" finished-at="2023-06-29T03:46:14 IST" duration-ms="145598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageTaxPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:46:14 IST" name="reportWrapUp" finished-at="2023-06-29T03:46:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageTaxPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfManageTaxPage()[pri:7, instance:testcases.CompanySetUpTest@2a4fb17b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfManageTaxPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:46:14 IST" name="beforeMethod" finished-at="2023-06-29T03:46:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfResourceApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfResourceApprovalPage()[pri:8, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:46:14 IST" name="ValidateClickTestingOfResourceApprovalPage" finished-at="2023-06-29T03:46:54 IST" duration-ms="39201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfResourceApprovalPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:46:54 IST" name="reportWrapUp" finished-at="2023-06-29T03:46:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfResourceApprovalPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfResourceApprovalPage()[pri:8, instance:testcases.CompanySetUpTest@2a4fb17b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfResourceApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:46:54 IST" name="beforeMethod" finished-at="2023-06-29T03:46:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfRolesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfRolesPage()[pri:9, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:46:54 IST" name="ValidateClickTestingOfRolesPage" finished-at="2023-06-29T03:47:35 IST" duration-ms="41321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfRolesPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:47:35 IST" name="reportWrapUp" finished-at="2023-06-29T03:47:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfRolesPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfRolesPage()[pri:9, instance:testcases.CompanySetUpTest@2a4fb17b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfRolesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:47:35 IST" name="beforeMethod" finished-at="2023-06-29T03:47:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfUserPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfUserPage()[pri:10, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:47:35 IST" name="ValidateClickTestingOfUserPage" finished-at="2023-06-29T03:48:35 IST" duration-ms="60417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfUserPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:48:35 IST" name="reportWrapUp" finished-at="2023-06-29T03:48:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfUserPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfUserPage()[pri:10, instance:testcases.CompanySetUpTest@2a4fb17b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfUserPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:48:35 IST" name="beforeMethod" finished-at="2023-06-29T03:48:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfSearchVendorsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfSearchVendorsPage()[pri:11, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:48:35 IST" name="ValidateClickTestingOfSearchVendorsPage" finished-at="2023-06-29T03:49:45 IST" duration-ms="69670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfSearchVendorsPage -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:49:45 IST" name="closeBrowser" finished-at="2023-06-29T03:49:46 IST" duration-ms="661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetUpTest@2a4fb17b]" started-at="2023-06-29T03:49:45 IST" name="reportWrapUp" finished-at="2023-06-29T03:49:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfSearchVendorsPage status=SUCCESS method=CompanySetUpTest.ValidateClickTestingOfSearchVendorsPage()[pri:11, instance:testcases.CompanySetUpTest@2a4fb17b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetUpTest.ValidateClickTestingOfSearchVendorsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.CompanySetUpTest -->
      <class name="testcases.CommunicationTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:03:53 IST" name="setUp" finished-at="2023-06-29T05:04:02 IST" duration-ms="9072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:04:02 IST" name="beforeMethod" finished-at="2023-06-29T05:04:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfIVRPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfIVRPage()[pri:0, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:04:02 IST" name="ValidateClickTestingOfIVRPage" finished-at="2023-06-29T05:04:46 IST" duration-ms="43444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfIVRPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:04:46 IST" name="reportWrapUp" finished-at="2023-06-29T05:04:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfIVRPage status=SUCCESS method=CommunicationTest.ValidateClickTestingOfIVRPage()[pri:0, instance:testcases.CommunicationTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfIVRPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:04:46 IST" name="beforeMethod" finished-at="2023-06-29T05:04:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfMeetingRecordingListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfMeetingRecordingListPage()[pri:1, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:04:46 IST" name="ValidateClickTestingOfMeetingRecordingListPage" finished-at="2023-06-29T05:05:23 IST" duration-ms="37810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfMeetingRecordingListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:05:23 IST" name="reportWrapUp" finished-at="2023-06-29T05:05:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfMeetingRecordingListPage status=SUCCESS method=CommunicationTest.ValidateClickTestingOfMeetingRecordingListPage()[pri:1, instance:testcases.CommunicationTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfMeetingRecordingListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:05:23 IST" name="beforeMethod" finished-at="2023-06-29T05:05:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfMeetingsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfMeetingsPage()[pri:2, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:05:23 IST" name="ValidateClickTestingOfMeetingsPage" finished-at="2023-06-29T05:06:08 IST" duration-ms="45007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfMeetingsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:06:08 IST" name="reportWrapUp" finished-at="2023-06-29T05:06:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfMeetingsPage status=SUCCESS method=CommunicationTest.ValidateClickTestingOfMeetingsPage()[pri:2, instance:testcases.CommunicationTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfMeetingsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfUnifiedSetupPage()[pri:3, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:06:08 IST" name="ValidateClickTestingOfUnifiedSetupPage" finished-at="2023-06-29T05:06:52 IST" duration-ms="43953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfUnifiedSetupPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:06:08 IST" name="beforeMethod" finished-at="2023-06-29T05:06:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfUnifiedSetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:06:52 IST" name="reportWrapUp" finished-at="2023-06-29T05:06:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfUnifiedSetupPage status=SUCCESS method=CommunicationTest.ValidateClickTestingOfUnifiedSetupPage()[pri:3, instance:testcases.CommunicationTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfUnifiedSetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:06:52 IST" name="beforeMethod" finished-at="2023-06-29T05:06:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfVideoRecordingListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfVideoRecordingListPage()[pri:4, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:06:52 IST" name="ValidateClickTestingOfVideoRecordingListPage" finished-at="2023-06-29T05:07:34 IST" duration-ms="41286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfVideoRecordingListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:07:34 IST" name="reportWrapUp" finished-at="2023-06-29T05:07:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfVideoRecordingListPage status=SUCCESS method=CommunicationTest.ValidateClickTestingOfVideoRecordingListPage()[pri:4, instance:testcases.CommunicationTest@7c7b252e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CommunicationTest.ValidateClickTestingOfVideoRecordingListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.CommunicationTest@7c7b252e]" started-at="2023-06-29T05:07:34 IST" name="closeBrowser" finished-at="2023-06-29T05:07:34 IST" duration-ms="412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.CommunicationTest -->
      <class name="testcases.DocumentStorageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.DocumentStorageTest@4562e04d]" started-at="2023-06-29T03:20:59 IST" name="setUp" finished-at="2023-06-29T03:21:12 IST" duration-ms="13339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.DocumentStorageTest@4562e04d]" started-at="2023-06-29T03:21:12 IST" name="beforeMethod" finished-at="2023-06-29T03:21:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.DocumentStorageTest.ValidateClickTestingOfManageClientStoragePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageClientStoragePage()[pri:0, instance:testcases.DocumentStorageTest@4562e04d]" started-at="2023-06-29T03:21:12 IST" name="ValidateClickTestingOfManageClientStoragePage" finished-at="2023-06-29T03:22:13 IST" duration-ms="61274" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Check Box -  element not present]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Check Box -  element not present
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.click(WebBasePage.java:126)
at pageobjects.DocumentStoragePage.clickOnCheckBox(DocumentStoragePage.java:49)
at action.DocumentStorageAction.GoToManageClientStoragePage(DocumentStorageAction.java:30)
at testcases.DocumentStorageTest.ValidateClickTestingOfManageClientStoragePage(DocumentStorageTest.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageClientStoragePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.DocumentStorageTest@4562e04d]" started-at="2023-06-29T03:22:13 IST" name="reportWrapUp" finished-at="2023-06-29T03:22:13 IST" duration-ms="207" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageClientStoragePage status=FAILURE method=DocumentStorageTest.ValidateClickTestingOfManageClientStoragePage()[pri:0, instance:testcases.DocumentStorageTest@4562e04d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.DocumentStorageTest.ValidateClickTestingOfManageClientStoragePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.DocumentStorageTest@4562e04d]" started-at="2023-06-29T03:22:13 IST" name="beforeMethod" finished-at="2023-06-29T03:22:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.DocumentStorageTest.ValidateClickTestingOfManageUserStoragePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageUserStoragePage()[pri:1, instance:testcases.DocumentStorageTest@4562e04d]" started-at="2023-06-29T03:22:13 IST" name="ValidateClickTestingOfManageUserStoragePage" finished-at="2023-06-29T03:22:46 IST" duration-ms="32362" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:81)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.DocumentStorageTest.ValidateClickTestingOfManageUserStoragePage(DocumentStorageTest.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageUserStoragePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.DocumentStorageTest@4562e04d]" started-at="2023-06-29T03:22:46 IST" name="reportWrapUp" finished-at="2023-06-29T03:22:46 IST" duration-ms="221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageUserStoragePage status=FAILURE method=DocumentStorageTest.ValidateClickTestingOfManageUserStoragePage()[pri:1, instance:testcases.DocumentStorageTest@4562e04d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.DocumentStorageTest.ValidateClickTestingOfManageUserStoragePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.DocumentStorageTest@4562e04d]" started-at="2023-06-29T03:22:46 IST" name="beforeMethod" finished-at="2023-06-29T03:22:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.DocumentStorageTest.ValidateClickTestingOfUserStorageReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfUserStorageReportPage()[pri:2, instance:testcases.DocumentStorageTest@4562e04d]" started-at="2023-06-29T03:22:46 IST" name="ValidateClickTestingOfUserStorageReportPage" finished-at="2023-06-29T03:24:10 IST" duration-ms="83919" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[List View -  element not present]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: List View -  element not present
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.click(WebBasePage.java:126)
at pageobjects.DocumentStoragePage.clickOnListView(DocumentStoragePage.java:106)
at action.DocumentStorageAction.GoToUserStorageReportPage(DocumentStorageAction.java:48)
at testcases.DocumentStorageTest.ValidateClickTestingOfUserStorageReportPage(DocumentStorageTest.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfUserStorageReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.DocumentStorageTest@4562e04d]" started-at="2023-06-29T03:24:10 IST" name="reportWrapUp" finished-at="2023-06-29T03:24:10 IST" duration-ms="215" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfUserStorageReportPage status=FAILURE method=DocumentStorageTest.ValidateClickTestingOfUserStorageReportPage()[pri:2, instance:testcases.DocumentStorageTest@4562e04d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.DocumentStorageTest.ValidateClickTestingOfUserStorageReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.DocumentStorageTest@4562e04d]" started-at="2023-06-29T03:24:10 IST" name="closeBrowser" finished-at="2023-06-29T03:24:11 IST" duration-ms="321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.DocumentStorageTest -->
      <class name="testcases.TimeTrackingTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:47:05 IST" name="setUp" finished-at="2023-06-29T04:47:16 IST" duration-ms="10937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:47:16 IST" name="beforeMethod" finished-at="2023-06-29T04:47:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfAuditRulePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAuditRulePage()[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:47:16 IST" name="ValidateClickTestingOfAuditRulePage" finished-at="2023-06-29T04:48:02 IST" duration-ms="46440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAuditRulePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:48:02 IST" name="reportWrapUp" finished-at="2023-06-29T04:48:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAuditRulePage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfAuditRulePage()[pri:0, instance:testcases.TimeTrackingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfAuditRulePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfBulkTimeEntryPage()[pri:1, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:48:02 IST" name="ValidateClickTestingOfBulkTimeEntryPage" finished-at="2023-06-29T04:48:44 IST" duration-ms="41441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfBulkTimeEntryPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:48:02 IST" name="beforeMethod" finished-at="2023-06-29T04:48:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfBulkTimeEntryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:48:44 IST" name="reportWrapUp" finished-at="2023-06-29T04:48:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfBulkTimeEntryPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfBulkTimeEntryPage()[pri:1, instance:testcases.TimeTrackingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfBulkTimeEntryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:48:44 IST" name="beforeMethod" finished-at="2023-06-29T04:48:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfFlagTrackEntryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfFlagTrackEntryPage()[pri:2, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:48:44 IST" name="ValidateClickTestingOfFlagTrackEntryPage" finished-at="2023-06-29T04:49:24 IST" duration-ms="40487" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfFlagTrackEntryPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:49:24 IST" name="reportWrapUp" finished-at="2023-06-29T04:49:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfFlagTrackEntryPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfFlagTrackEntryPage()[pri:2, instance:testcases.TimeTrackingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfFlagTrackEntryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:49:24 IST" name="beforeMethod" finished-at="2023-06-29T04:49:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfProjectReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProjectReportPage()[pri:3, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:49:24 IST" name="ValidateClickTestingOfProjectReportPage" finished-at="2023-06-29T04:50:14 IST" duration-ms="49702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProjectReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:50:14 IST" name="reportWrapUp" finished-at="2023-06-29T04:50:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProjectReportPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfProjectReportPage()[pri:3, instance:testcases.TimeTrackingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfProjectReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:50:14 IST" name="beforeMethod" finished-at="2023-06-29T04:50:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTimeReportPage()[pri:4, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:50:14 IST" name="ValidateClickTestingOfTimeReportPage" finished-at="2023-06-29T04:51:24 IST" duration-ms="69810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTimeReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:51:24 IST" name="reportWrapUp" finished-at="2023-06-29T04:51:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTimeReportPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfTimeReportPage()[pri:4, instance:testcases.TimeTrackingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:51:24 IST" name="beforeMethod" finished-at="2023-06-29T04:51:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTimeApprovalPage()[pri:5, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:51:24 IST" name="ValidateClickTestingOfTimeApprovalPage" finished-at="2023-06-29T04:52:16 IST" duration-ms="52549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTimeApprovalPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:52:16 IST" name="reportWrapUp" finished-at="2023-06-29T04:52:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTimeApprovalPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfTimeApprovalPage()[pri:5, instance:testcases.TimeTrackingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:52:16 IST" name="beforeMethod" finished-at="2023-06-29T04:52:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeSheetPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTimeSheetPage()[pri:6, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:52:16 IST" name="ValidateClickTestingOfTimeSheetPage" finished-at="2023-06-29T04:52:55 IST" duration-ms="38797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTimeSheetPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:52:55 IST" name="reportWrapUp" finished-at="2023-06-29T04:52:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTimeSheetPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfTimeSheetPage()[pri:6, instance:testcases.TimeTrackingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeSheetPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:52:55 IST" name="beforeMethod" finished-at="2023-06-29T04:52:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeTrackPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTimeTrackPage()[pri:7, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:52:55 IST" name="ValidateClickTestingOfTimeTrackPage" finished-at="2023-06-29T04:54:17 IST" duration-ms="82264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTimeTrackPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:54:17 IST" name="reportWrapUp" finished-at="2023-06-29T04:54:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTimeTrackPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfTimeTrackPage()[pri:7, instance:testcases.TimeTrackingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfTimeTrackPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:54:17 IST" name="beforeMethod" finished-at="2023-06-29T04:54:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfWorkDiaryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfWorkDiaryPage()[pri:8, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:54:17 IST" name="ValidateClickTestingOfWorkDiaryPage" finished-at="2023-06-29T04:55:07 IST" duration-ms="49271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfWorkDiaryPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:55:07 IST" name="reportWrapUp" finished-at="2023-06-29T04:55:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfWorkDiaryPage status=SUCCESS method=TimeTrackingTest.ValidateClickTestingOfWorkDiaryPage()[pri:8, instance:testcases.TimeTrackingTest@128d2484] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TimeTrackingTest.ValidateClickTestingOfWorkDiaryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.TimeTrackingTest@128d2484]" started-at="2023-06-29T04:55:07 IST" name="closeBrowser" finished-at="2023-06-29T04:55:07 IST" duration-ms="574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.TimeTrackingTest -->
      <class name="testcases.HiringTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:55:07 IST" name="setUp" finished-at="2023-06-29T04:55:16 IST" duration-ms="9124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfCandidateListPage()[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:55:16 IST" name="ValidateClickTestingOfCandidateListPage" finished-at="2023-06-29T04:56:32 IST" duration-ms="76045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCandidateListPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:55:16 IST" name="beforeMethod" finished-at="2023-06-29T04:55:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfCandidateListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:56:32 IST" name="reportWrapUp" finished-at="2023-06-29T04:56:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCandidateListPage status=SUCCESS method=HiringTest.ValidateClickTestingOfCandidateListPage()[pri:0, instance:testcases.HiringTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfCandidateListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:56:32 IST" name="beforeMethod" finished-at="2023-06-29T04:56:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfGroupListListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfGroupListListPage()[pri:2, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:56:32 IST" name="ValidateClickTestingOfGroupListListPage" finished-at="2023-06-29T04:57:08 IST" duration-ms="35794" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:81)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.HiringTest.ValidateClickTestingOfGroupListListPage(HiringTest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGroupListListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:57:08 IST" name="reportWrapUp" finished-at="2023-06-29T04:57:09 IST" duration-ms="1189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGroupListListPage status=FAILURE method=HiringTest.ValidateClickTestingOfGroupListListPage()[pri:2, instance:testcases.HiringTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfGroupListListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfjobListListPage()[pri:3, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:57:09 IST" name="ValidateClickTestingOfjobListListPage" finished-at="2023-06-29T04:58:08 IST" duration-ms="59006" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Close Notify Message -  element not present]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Close Notify Message -  element not present
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.click(WebBasePage.java:126)
at pageobjects.HiringPage.clickOnCloseNotifyMessageButton(HiringPage.java:70)
at action.HiringAction.GoToJobListPage(HiringAction.java:74)
at testcases.HiringTest.ValidateClickTestingOfjobListListPage(HiringTest.java:66)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfjobListListPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:57:09 IST" name="beforeMethod" finished-at="2023-06-29T04:57:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfjobListListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:58:08 IST" name="reportWrapUp" finished-at="2023-06-29T04:58:09 IST" duration-ms="220" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfjobListListPage status=FAILURE method=HiringTest.ValidateClickTestingOfjobListListPage()[pri:3, instance:testcases.HiringTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfjobListListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:58:09 IST" name="beforeMethod" finished-at="2023-06-29T04:58:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfjobPostReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfjobPostReportPage()[pri:4, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:58:09 IST" name="ValidateClickTestingOfjobPostReportPage" finished-at="2023-06-29T04:58:46 IST" duration-ms="37065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfjobPostReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:58:46 IST" name="reportWrapUp" finished-at="2023-06-29T04:58:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfjobPostReportPage status=SUCCESS method=HiringTest.ValidateClickTestingOfjobPostReportPage()[pri:4, instance:testcases.HiringTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfjobPostReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfJobRequisitionPage()[pri:5, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:58:46 IST" name="ValidateClickTestingOfJobRequisitionPage" finished-at="2023-06-29T04:59:42 IST" duration-ms="56446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfJobRequisitionPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:58:46 IST" name="beforeMethod" finished-at="2023-06-29T04:58:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfJobRequisitionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:59:42 IST" name="reportWrapUp" finished-at="2023-06-29T04:59:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfJobRequisitionPage status=SUCCESS method=HiringTest.ValidateClickTestingOfJobRequisitionPage()[pri:5, instance:testcases.HiringTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfJobRequisitionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:59:42 IST" name="beforeMethod" finished-at="2023-06-29T04:59:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfOffboardEmployeeListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfOffboardEmployeeListPage()[pri:6, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T04:59:42 IST" name="ValidateClickTestingOfOffboardEmployeeListPage" finished-at="2023-06-29T05:00:46 IST" duration-ms="63810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfOffboardEmployeeListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T05:00:46 IST" name="reportWrapUp" finished-at="2023-06-29T05:00:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfOffboardEmployeeListPage status=SUCCESS method=HiringTest.ValidateClickTestingOfOffboardEmployeeListPage()[pri:6, instance:testcases.HiringTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfOffboardEmployeeListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfPolicyPage()[pri:7, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T05:00:46 IST" name="ValidateClickTestingOfPolicyPage" finished-at="2023-06-29T05:01:49 IST" duration-ms="62693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfPolicyPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T05:00:46 IST" name="beforeMethod" finished-at="2023-06-29T05:00:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfPolicyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T05:01:49 IST" name="reportWrapUp" finished-at="2023-06-29T05:01:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfPolicyPage status=SUCCESS method=HiringTest.ValidateClickTestingOfPolicyPage()[pri:7, instance:testcases.HiringTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfPolicyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfResignationPage()[pri:8, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T05:01:49 IST" name="ValidateClickTestingOfResignationPage" finished-at="2023-06-29T05:02:44 IST" duration-ms="55031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfResignationPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T05:01:49 IST" name="beforeMethod" finished-at="2023-06-29T05:01:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfResignationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T05:02:44 IST" name="reportWrapUp" finished-at="2023-06-29T05:02:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfResignationPage status=SUCCESS method=HiringTest.ValidateClickTestingOfResignationPage()[pri:8, instance:testcases.HiringTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfResignationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfTalentPoolListPage()[pri:10, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T05:02:44 IST" name="ValidateClickTestingOfTalentPoolListPage" finished-at="2023-06-29T05:03:52 IST" duration-ms="68698" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTalentPoolListPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T05:02:44 IST" name="beforeMethod" finished-at="2023-06-29T05:02:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfTalentPoolListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T05:03:52 IST" name="reportWrapUp" finished-at="2023-06-29T05:03:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTalentPoolListPage status=SUCCESS method=HiringTest.ValidateClickTestingOfTalentPoolListPage()[pri:10, instance:testcases.HiringTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HiringTest.ValidateClickTestingOfTalentPoolListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.HiringTest@7cc0cdad]" started-at="2023-06-29T05:03:52 IST" name="closeBrowser" finished-at="2023-06-29T05:03:53 IST" duration-ms="614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.HiringTest -->
      <class name="testcases.TrainingTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TrainingTest@4d5d943d]" started-at="2023-06-29T05:07:34 IST" name="setUp" finished-at="2023-06-29T05:12:35 IST" duration-ms="301192" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 298.032
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:53247}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7fdb595c8f4e7657554f52eb2eb3606e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 298.032
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:53247}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7fdb595c8f4e7657554f52eb2eb3606e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277)
at utils.WebTestBase.setUp(WebTestBase.java:52)
at jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TrainingTest@4d5d943d]" started-at="2023-06-29T05:12:35 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1687995755709" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTrainingPage()[pri:0, instance:testcases.TrainingTest@4d5d943d]" started-at="2023-06-29T05:12:35 IST" name="ValidateClickTestingOfTrainingPage" finished-at="2023-06-29T05:12:35 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 298.032
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:53247}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7fdb595c8f4e7657554f52eb2eb3606e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 298.032
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:53247}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7fdb595c8f4e7657554f52eb2eb3606e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277)
at utils.WebTestBase.setUp(WebTestBase.java:52)
at jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTrainingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TrainingTest@4d5d943d]" started-at="2023-06-29T05:12:35 IST" name="reportWrapUp" finished-at="2023-06-29T05:13:35 IST" duration-ms="60067" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TrainingTest.ValidateClickTestingOfTrainingPage()[pri:0, instance:testcases.TrainingTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TrainingTest.ValidateClickTestingOfTrainingPage()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:53247}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7fdb595c8f4e7657554f52eb2eb3606e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:53247}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7fdb595c8f4e7657554f52eb2eb3606e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TrainingTest@4d5d943d]" started-at="2023-06-29T05:13:35 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1687995815784" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTrainingReportPage()[pri:1, instance:testcases.TrainingTest@4d5d943d]" started-at="2023-06-29T05:13:35 IST" name="ValidateClickTestingOfTrainingReportPage" finished-at="2023-06-29T05:13:35 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:53247}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7fdb595c8f4e7657554f52eb2eb3606e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:53247}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7fdb595c8f4e7657554f52eb2eb3606e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTrainingReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TrainingTest@4d5d943d]" started-at="2023-06-29T05:13:35 IST" name="reportWrapUp" finished-at="2023-06-29T05:14:35 IST" duration-ms="60055" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TrainingTest.ValidateClickTestingOfTrainingReportPage()[pri:1, instance:testcases.TrainingTest@4d5d943d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TrainingTest.ValidateClickTestingOfTrainingReportPage()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:53247}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7fdb595c8f4e7657554f52eb2eb3606e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:53247}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7fdb595c8f4e7657554f52eb2eb3606e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:70)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.TrainingTest@4d5d943d]" started-at="2023-06-29T05:14:35 IST" name="closeBrowser" finished-at="2023-06-29T05:14:36 IST" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.TrainingTest -->
      <class name="testcases.MSPModuleTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.MSPModuleTest@4135c3b]" started-at="2023-06-29T03:27:25 IST" name="setUp" finished-at="2023-06-29T03:27:32 IST" duration-ms="7428" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@4135c3b]" started-at="2023-06-29T03:27:32 IST" name="beforeMethod" finished-at="2023-06-29T03:27:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfAddPackagesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAddPackagesPage()[pri:0, instance:testcases.MSPModuleTest@4135c3b]" started-at="2023-06-29T03:27:32 IST" name="ValidateClickTestingOfAddPackagesPage" finished-at="2023-06-29T03:28:09 IST" duration-ms="37117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAddPackagesPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@4135c3b]" started-at="2023-06-29T03:28:09 IST" name="reportWrapUp" finished-at="2023-06-29T03:28:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAddPackagesPage status=SUCCESS method=MSPModuleTest.ValidateClickTestingOfAddPackagesPage()[pri:0, instance:testcases.MSPModuleTest@4135c3b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfAddPackagesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@4135c3b]" started-at="2023-06-29T03:28:09 IST" name="beforeMethod" finished-at="2023-06-29T03:28:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfAddSubscriptionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAddSubscriptionPage()[pri:1, instance:testcases.MSPModuleTest@4135c3b]" started-at="2023-06-29T03:28:09 IST" name="ValidateClickTestingOfAddSubscriptionPage" finished-at="2023-06-29T03:29:09 IST" duration-ms="59806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAddSubscriptionPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@4135c3b]" started-at="2023-06-29T03:29:09 IST" name="reportWrapUp" finished-at="2023-06-29T03:29:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAddSubscriptionPage status=SUCCESS method=MSPModuleTest.ValidateClickTestingOfAddSubscriptionPage()[pri:1, instance:testcases.MSPModuleTest@4135c3b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfAddSubscriptionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@4135c3b]" started-at="2023-06-29T03:29:09 IST" name="beforeMethod" finished-at="2023-06-29T03:29:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfManagePackagesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManagePackagesPage()[pri:2, instance:testcases.MSPModuleTest@4135c3b]" started-at="2023-06-29T03:29:09 IST" name="ValidateClickTestingOfManagePackagesPage" finished-at="2023-06-29T03:30:03 IST" duration-ms="53608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManagePackagesPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@4135c3b]" started-at="2023-06-29T03:30:03 IST" name="reportWrapUp" finished-at="2023-06-29T03:30:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManagePackagesPage status=SUCCESS method=MSPModuleTest.ValidateClickTestingOfManagePackagesPage()[pri:2, instance:testcases.MSPModuleTest@4135c3b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfManagePackagesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@4135c3b]" started-at="2023-06-29T03:30:03 IST" name="beforeMethod" finished-at="2023-06-29T03:30:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfManageSubscriptionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageSubscriptionPage()[pri:3, instance:testcases.MSPModuleTest@4135c3b]" started-at="2023-06-29T03:30:03 IST" name="ValidateClickTestingOfManageSubscriptionPage" finished-at="2023-06-29T03:31:07 IST" duration-ms="64054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageSubscriptionPage -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.MSPModuleTest@4135c3b]" started-at="2023-06-29T03:31:07 IST" name="closeBrowser" finished-at="2023-06-29T03:31:07 IST" duration-ms="324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.MSPModuleTest@4135c3b]" started-at="2023-06-29T03:31:07 IST" name="reportWrapUp" finished-at="2023-06-29T03:31:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageSubscriptionPage status=SUCCESS method=MSPModuleTest.ValidateClickTestingOfManageSubscriptionPage()[pri:3, instance:testcases.MSPModuleTest@4135c3b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.MSPModuleTest.ValidateClickTestingOfManageSubscriptionPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.MSPModuleTest -->
      <class name="testcases.ProjectManagementTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:14:36 IST" name="setUp" finished-at="2023-06-29T05:14:43 IST" duration-ms="7842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:14:43 IST" name="beforeMethod" finished-at="2023-06-29T05:14:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfGlobalTaskPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfGlobalTaskPage()[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:14:43 IST" name="ValidateClickTestingOfGlobalTaskPage" finished-at="2023-06-29T05:15:43 IST" duration-ms="59510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGlobalTaskPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:15:43 IST" name="reportWrapUp" finished-at="2023-06-29T05:15:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGlobalTaskPage status=SUCCESS method=ProjectManagementTest.ValidateClickTestingOfGlobalTaskPage()[pri:0, instance:testcases.ProjectManagementTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfGlobalTaskPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:15:43 IST" name="beforeMethod" finished-at="2023-06-29T05:15:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfProjectPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProjectPage()[pri:1, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:15:43 IST" name="ValidateClickTestingOfProjectPage" finished-at="2023-06-29T05:17:39 IST" duration-ms="115802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProjectPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:17:39 IST" name="reportWrapUp" finished-at="2023-06-29T05:17:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProjectPage status=SUCCESS method=ProjectManagementTest.ValidateClickTestingOfProjectPage()[pri:1, instance:testcases.ProjectManagementTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfProjectPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfProjectReportPage()[pri:2, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:17:39 IST" name="ValidateClickTestingOfProjectReportPage" finished-at="2023-06-29T05:18:32 IST" duration-ms="53417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProjectReportPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:17:39 IST" name="beforeMethod" finished-at="2023-06-29T05:17:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfProjectReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:18:32 IST" name="reportWrapUp" finished-at="2023-06-29T05:18:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProjectReportPage status=SUCCESS method=ProjectManagementTest.ValidateClickTestingOfProjectReportPage()[pri:2, instance:testcases.ProjectManagementTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfProjectReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfProjectRequestPage()[pri:3, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:18:32 IST" name="ValidateClickTestingOfProjectRequestPage" finished-at="2023-06-29T05:19:36 IST" duration-ms="64075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProjectRequestPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:18:32 IST" name="beforeMethod" finished-at="2023-06-29T05:18:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfProjectRequestPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:19:36 IST" name="reportWrapUp" finished-at="2023-06-29T05:19:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProjectRequestPage status=SUCCESS method=ProjectManagementTest.ValidateClickTestingOfProjectRequestPage()[pri:3, instance:testcases.ProjectManagementTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfProjectRequestPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfQuotesPage()[pri:4, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:19:36 IST" name="ValidateClickTestingOfQuotesPage" finished-at="2023-06-29T05:20:33 IST" duration-ms="56597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfQuotesPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:19:36 IST" name="beforeMethod" finished-at="2023-06-29T05:19:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfQuotesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:20:33 IST" name="reportWrapUp" finished-at="2023-06-29T05:20:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfQuotesPage status=SUCCESS method=ProjectManagementTest.ValidateClickTestingOfQuotesPage()[pri:4, instance:testcases.ProjectManagementTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfQuotesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:20:33 IST" name="beforeMethod" finished-at="2023-06-29T05:20:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfRequestedTimeListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfRequestedTimeListPage()[pri:5, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:20:33 IST" name="ValidateClickTestingOfRequestedTimeListPage" finished-at="2023-06-29T05:21:11 IST" duration-ms="37775" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfRequestedTimeListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:21:11 IST" name="reportWrapUp" finished-at="2023-06-29T05:21:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfRequestedTimeListPage status=SUCCESS method=ProjectManagementTest.ValidateClickTestingOfRequestedTimeListPage()[pri:5, instance:testcases.ProjectManagementTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfRequestedTimeListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:21:11 IST" name="beforeMethod" finished-at="2023-06-29T05:21:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfResourceImpactPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfResourceImpactPage()[pri:6, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:21:11 IST" name="ValidateClickTestingOfResourceImpactPage" finished-at="2023-06-29T05:22:02 IST" duration-ms="51299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfResourceImpactPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:22:02 IST" name="reportWrapUp" finished-at="2023-06-29T05:22:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfResourceImpactPage status=SUCCESS method=ProjectManagementTest.ValidateClickTestingOfResourceImpactPage()[pri:6, instance:testcases.ProjectManagementTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfResourceImpactPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:22:02 IST" name="beforeMethod" finished-at="2023-06-29T05:22:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfResourceSchedulingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfResourceSchedulingPage()[pri:7, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:22:02 IST" name="ValidateClickTestingOfResourceSchedulingPage" finished-at="2023-06-29T05:22:54 IST" duration-ms="52571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfResourceSchedulingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:22:54 IST" name="reportWrapUp" finished-at="2023-06-29T05:22:54 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfResourceSchedulingPage status=SUCCESS method=ProjectManagementTest.ValidateClickTestingOfResourceSchedulingPage()[pri:7, instance:testcases.ProjectManagementTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfResourceSchedulingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:22:54 IST" name="beforeMethod" finished-at="2023-06-29T05:22:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfTaskPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTaskPage()[pri:8, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:22:54 IST" name="ValidateClickTestingOfTaskPage" finished-at="2023-06-29T05:23:42 IST" duration-ms="47442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTaskPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:23:42 IST" name="reportWrapUp" finished-at="2023-06-29T05:23:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTaskPage status=SUCCESS method=ProjectManagementTest.ValidateClickTestingOfTaskPage()[pri:8, instance:testcases.ProjectManagementTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfTaskPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfToDoListPage()[pri:9, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:23:42 IST" name="ValidateClickTestingOfToDoListPage" finished-at="2023-06-29T05:25:16 IST" duration-ms="93799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfToDoListPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:23:42 IST" name="beforeMethod" finished-at="2023-06-29T05:23:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfToDoListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:25:16 IST" name="reportWrapUp" finished-at="2023-06-29T05:25:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfToDoListPage status=SUCCESS method=ProjectManagementTest.ValidateClickTestingOfToDoListPage()[pri:9, instance:testcases.ProjectManagementTest@368f2016] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ProjectManagementTest.ValidateClickTestingOfToDoListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.ProjectManagementTest@368f2016]" started-at="2023-06-29T05:25:16 IST" name="closeBrowser" finished-at="2023-06-29T05:25:16 IST" duration-ms="545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.ProjectManagementTest -->
      <class name="testcases.IntegrationTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:25:16 IST" name="setUp" finished-at="2023-06-29T05:25:26 IST" duration-ms="10125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfBasecampPage()[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:25:26 IST" name="ValidateClickTestingOfBasecampPage" finished-at="2023-06-29T05:25:54 IST" duration-ms="28106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfBasecampPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:25:26 IST" name="beforeMethod" finished-at="2023-06-29T05:25:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfBasecampPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:25:54 IST" name="reportWrapUp" finished-at="2023-06-29T05:25:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfBasecampPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfBasecampPage()[pri:0, instance:testcases.IntegrationTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfBasecampPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:25:54 IST" name="beforeMethod" finished-at="2023-06-29T05:25:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfConnectorPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfConnectorPage()[pri:1, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:25:54 IST" name="ValidateClickTestingOfConnectorPage" finished-at="2023-06-29T05:28:15 IST" duration-ms="140561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfConnectorPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:28:15 IST" name="reportWrapUp" finished-at="2023-06-29T05:28:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfConnectorPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfConnectorPage()[pri:1, instance:testcases.IntegrationTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfConnectorPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:28:15 IST" name="beforeMethod" finished-at="2023-06-29T05:28:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfEmailPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfEmailPage()[pri:2, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:28:15 IST" name="ValidateClickTestingOfEmailPage" finished-at="2023-06-29T05:28:51 IST" duration-ms="35898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfEmailPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:28:51 IST" name="reportWrapUp" finished-at="2023-06-29T05:28:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfEmailPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfEmailPage()[pri:2, instance:testcases.IntegrationTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfEmailPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:28:51 IST" name="beforeMethod" finished-at="2023-06-29T05:28:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfFreshBookPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfFreshBookPage()[pri:3, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:28:51 IST" name="ValidateClickTestingOfFreshBookPage" finished-at="2023-06-29T05:29:33 IST" duration-ms="41679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfFreshBookPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:29:33 IST" name="reportWrapUp" finished-at="2023-06-29T05:29:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfFreshBookPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfFreshBookPage()[pri:3, instance:testcases.IntegrationTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfFreshBookPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfGPSTrackingPage()[pri:4, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:29:33 IST" name="ValidateClickTestingOfGPSTrackingPage" finished-at="2023-06-29T05:30:20 IST" duration-ms="47814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGPSTrackingPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:29:33 IST" name="beforeMethod" finished-at="2023-06-29T05:29:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfGPSTrackingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:30:20 IST" name="reportWrapUp" finished-at="2023-06-29T05:30:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGPSTrackingPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfGPSTrackingPage()[pri:4, instance:testcases.IntegrationTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfGPSTrackingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:30:20 IST" name="beforeMethod" finished-at="2023-06-29T05:30:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfIVrPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfIVrPage()[pri:5, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:30:20 IST" name="ValidateClickTestingOfIVrPage" finished-at="2023-06-29T05:31:34 IST" duration-ms="73722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfIVrPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:31:34 IST" name="reportWrapUp" finished-at="2023-06-29T05:31:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfIVrPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfIVrPage()[pri:5, instance:testcases.IntegrationTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfIVrPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:31:34 IST" name="beforeMethod" finished-at="2023-06-29T05:31:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfMicrosoftProjectPlanPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfMicrosoftProjectPlanPage()[pri:6, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:31:34 IST" name="ValidateClickTestingOfMicrosoftProjectPlanPage" finished-at="2023-06-29T05:32:27 IST" duration-ms="52738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfMicrosoftProjectPlanPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:32:27 IST" name="reportWrapUp" finished-at="2023-06-29T05:32:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfMicrosoftProjectPlanPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfMicrosoftProjectPlanPage()[pri:6, instance:testcases.IntegrationTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfMicrosoftProjectPlanPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:32:27 IST" name="beforeMethod" finished-at="2023-06-29T05:32:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfQuickBooksPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfQuickBooksPage()[pri:7, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:32:27 IST" name="ValidateClickTestingOfQuickBooksPage" finished-at="2023-06-29T05:33:12 IST" duration-ms="44874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfQuickBooksPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:33:12 IST" name="reportWrapUp" finished-at="2023-06-29T05:33:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfQuickBooksPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfQuickBooksPage()[pri:7, instance:testcases.IntegrationTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfQuickBooksPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfSalesForcePage()[pri:8, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:33:12 IST" name="ValidateClickTestingOfSalesForcePage" finished-at="2023-06-29T05:33:49 IST" duration-ms="36770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfSalesForcePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:33:12 IST" name="beforeMethod" finished-at="2023-06-29T05:33:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfSalesForcePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:33:49 IST" name="reportWrapUp" finished-at="2023-06-29T05:33:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfSalesForcePage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfSalesForcePage()[pri:8, instance:testcases.IntegrationTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfSalesForcePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:33:49 IST" name="beforeMethod" finished-at="2023-06-29T05:33:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfTrelloPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTrelloPage()[pri:9, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:33:49 IST" name="ValidateClickTestingOfTrelloPage" finished-at="2023-06-29T05:34:36 IST" duration-ms="47082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTrelloPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:34:36 IST" name="reportWrapUp" finished-at="2023-06-29T05:34:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTrelloPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfTrelloPage()[pri:9, instance:testcases.IntegrationTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfTrelloPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:34:36 IST" name="beforeMethod" finished-at="2023-06-29T05:34:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfTwilioPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTwilioPage()[pri:10, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:34:36 IST" name="ValidateClickTestingOfTwilioPage" finished-at="2023-06-29T05:35:34 IST" duration-ms="58500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTwilioPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:35:34 IST" name="reportWrapUp" finished-at="2023-06-29T05:35:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTwilioPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfTwilioPage()[pri:10, instance:testcases.IntegrationTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfTwilioPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfUnifiedSetupPage()[pri:11, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:35:34 IST" name="ValidateClickTestingOfUnifiedSetupPage" finished-at="2023-06-29T05:36:18 IST" duration-ms="44241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfUnifiedSetupPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:35:34 IST" name="beforeMethod" finished-at="2023-06-29T05:35:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfUnifiedSetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:36:18 IST" name="reportWrapUp" finished-at="2023-06-29T05:36:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfUnifiedSetupPage status=SUCCESS method=IntegrationTest.ValidateClickTestingOfUnifiedSetupPage()[pri:11, instance:testcases.IntegrationTest@4c583ecf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IntegrationTest.ValidateClickTestingOfUnifiedSetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.IntegrationTest@4c583ecf]" started-at="2023-06-29T05:36:18 IST" name="closeBrowser" finished-at="2023-06-29T05:36:19 IST" duration-ms="638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.IntegrationTest -->
      <class name="testcases.VendorTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.VendorTest@34a3d150]" started-at="2023-06-29T03:36:38 IST" name="setUp" finished-at="2023-06-29T03:36:46 IST" duration-ms="8301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VendorTest@34a3d150]" started-at="2023-06-29T03:36:46 IST" name="beforeMethod" finished-at="2023-06-29T03:36:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VendorTest.ValidateClickTestingOfTrainingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTrainingPage()[pri:0, instance:testcases.VendorTest@34a3d150]" started-at="2023-06-29T03:36:46 IST" name="ValidateClickTestingOfTrainingPage" finished-at="2023-06-29T03:37:11 IST" duration-ms="24927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTrainingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VendorTest@34a3d150]" started-at="2023-06-29T03:37:11 IST" name="reportWrapUp" finished-at="2023-06-29T03:37:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTrainingPage status=SUCCESS method=VendorTest.ValidateClickTestingOfTrainingPage()[pri:0, instance:testcases.VendorTest@34a3d150] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VendorTest.ValidateClickTestingOfTrainingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.VendorTest@34a3d150]" started-at="2023-06-29T03:37:11 IST" name="beforeMethod" finished-at="2023-06-29T03:37:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.VendorTest.ValidateClickTestingOfVendorListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfVendorListingPage()[pri:1, instance:testcases.VendorTest@34a3d150]" started-at="2023-06-29T03:37:11 IST" name="ValidateClickTestingOfVendorListingPage" finished-at="2023-06-29T03:38:05 IST" duration-ms="54355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfVendorListingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.VendorTest@34a3d150]" started-at="2023-06-29T03:38:05 IST" name="reportWrapUp" finished-at="2023-06-29T03:38:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfVendorListingPage status=SUCCESS method=VendorTest.ValidateClickTestingOfVendorListingPage()[pri:1, instance:testcases.VendorTest@34a3d150] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.VendorTest.ValidateClickTestingOfVendorListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.VendorTest@34a3d150]" started-at="2023-06-29T03:38:05 IST" name="closeBrowser" finished-at="2023-06-29T03:38:06 IST" duration-ms="285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.VendorTest -->
      <class name="testcases.INTEGRATIONSTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.INTEGRATIONSTest@2a65fe7c]" started-at="2023-06-29T03:24:11 IST" name="setUp" finished-at="2023-06-29T03:24:19 IST" duration-ms="8752" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.INTEGRATIONSTest@2a65fe7c]" started-at="2023-06-29T03:24:19 IST" name="beforeMethod" finished-at="2023-06-29T03:24:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.INTEGRATIONSTest.ValidateClickTestingOfGPSTrackingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfGPSTrackingPage()[pri:1, instance:testcases.INTEGRATIONSTest@2a65fe7c]" started-at="2023-06-29T03:24:19 IST" name="ValidateClickTestingOfGPSTrackingPage" finished-at="2023-06-29T03:24:54 IST" duration-ms="34223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGPSTrackingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.INTEGRATIONSTest@2a65fe7c]" started-at="2023-06-29T03:24:54 IST" name="reportWrapUp" finished-at="2023-06-29T03:24:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGPSTrackingPage status=SUCCESS method=INTEGRATIONSTest.ValidateClickTestingOfGPSTrackingPage()[pri:1, instance:testcases.INTEGRATIONSTest@2a65fe7c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.INTEGRATIONSTest.ValidateClickTestingOfGPSTrackingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.INTEGRATIONSTest@2a65fe7c]" started-at="2023-06-29T03:24:54 IST" name="beforeMethod" finished-at="2023-06-29T03:24:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.INTEGRATIONSTest.ValidateClickTestingOfTwilioPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTwilioPage()[pri:2, instance:testcases.INTEGRATIONSTest@2a65fe7c]" started-at="2023-06-29T03:24:54 IST" name="ValidateClickTestingOfTwilioPage" finished-at="2023-06-29T03:25:51 IST" duration-ms="57410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTwilioPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.INTEGRATIONSTest@2a65fe7c]" started-at="2023-06-29T03:25:51 IST" name="reportWrapUp" finished-at="2023-06-29T03:25:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTwilioPage status=SUCCESS method=INTEGRATIONSTest.ValidateClickTestingOfTwilioPage()[pri:2, instance:testcases.INTEGRATIONSTest@2a65fe7c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.INTEGRATIONSTest.ValidateClickTestingOfTwilioPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.INTEGRATIONSTest@2a65fe7c]" started-at="2023-06-29T03:25:51 IST" name="beforeMethod" finished-at="2023-06-29T03:25:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.INTEGRATIONSTest.ValidateClickTestingOfConnectorPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfConnectorPage()[pri:3, instance:testcases.INTEGRATIONSTest@2a65fe7c]" started-at="2023-06-29T03:25:51 IST" name="ValidateClickTestingOfConnectorPage" finished-at="2023-06-29T03:27:24 IST" duration-ms="93544" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfConnectorPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.INTEGRATIONSTest@2a65fe7c]" started-at="2023-06-29T03:27:24 IST" name="reportWrapUp" finished-at="2023-06-29T03:27:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfConnectorPage status=SUCCESS method=INTEGRATIONSTest.ValidateClickTestingOfConnectorPage()[pri:3, instance:testcases.INTEGRATIONSTest@2a65fe7c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.INTEGRATIONSTest.ValidateClickTestingOfConnectorPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.INTEGRATIONSTest@2a65fe7c]" started-at="2023-06-29T03:27:24 IST" name="closeBrowser" finished-at="2023-06-29T03:27:25 IST" duration-ms="401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.INTEGRATIONSTest -->
      <class name="testcases.DisplayScreenTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.DisplayScreenTest@6302bbb1]" started-at="2023-06-29T03:31:07 IST" name="setUp" finished-at="2023-06-29T03:31:17 IST" duration-ms="9391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.DisplayScreenTest@6302bbb1]" started-at="2023-06-29T03:31:17 IST" name="beforeMethod" finished-at="2023-06-29T03:31:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.DisplayScreenTest.ValidateClickTestingOfCounterPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCounterPage()[pri:0, instance:testcases.DisplayScreenTest@6302bbb1]" started-at="2023-06-29T03:31:17 IST" name="ValidateClickTestingOfCounterPage" finished-at="2023-06-29T03:31:52 IST" duration-ms="35715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCounterPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.DisplayScreenTest@6302bbb1]" started-at="2023-06-29T03:31:52 IST" name="reportWrapUp" finished-at="2023-06-29T03:31:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCounterPage status=SUCCESS method=DisplayScreenTest.ValidateClickTestingOfCounterPage()[pri:0, instance:testcases.DisplayScreenTest@6302bbb1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.DisplayScreenTest.ValidateClickTestingOfCounterPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.DisplayScreenTest@6302bbb1]" started-at="2023-06-29T03:31:52 IST" name="beforeMethod" finished-at="2023-06-29T03:31:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.DisplayScreenTest.ValidateClickTestingOfTokenPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTokenPage()[pri:1, instance:testcases.DisplayScreenTest@6302bbb1]" started-at="2023-06-29T03:31:52 IST" name="ValidateClickTestingOfTokenPage" finished-at="2023-06-29T03:33:03 IST" duration-ms="70481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTokenPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.DisplayScreenTest@6302bbb1]" started-at="2023-06-29T03:33:03 IST" name="reportWrapUp" finished-at="2023-06-29T03:33:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTokenPage status=SUCCESS method=DisplayScreenTest.ValidateClickTestingOfTokenPage()[pri:1, instance:testcases.DisplayScreenTest@6302bbb1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.DisplayScreenTest.ValidateClickTestingOfTokenPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.DisplayScreenTest@6302bbb1]" started-at="2023-06-29T03:33:03 IST" name="closeBrowser" finished-at="2023-06-29T03:33:03 IST" duration-ms="308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.DisplayScreenTest -->
      <class name="testcases.BillingTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T01:57:48 IST" name="setUp" finished-at="2023-06-29T01:57:57 IST" duration-ms="8808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T01:57:57 IST" name="beforeMethod" finished-at="2023-06-29T01:57:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfAutomateFlagProcessingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAutomateFlagProcessingPage()[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T01:57:57 IST" name="ValidateClickTestingOfAutomateFlagProcessingPage" finished-at="2023-06-29T01:58:38 IST" duration-ms="41408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAutomateFlagProcessingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T01:58:38 IST" name="reportWrapUp" finished-at="2023-06-29T01:58:38 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAutomateFlagProcessingPage status=SUCCESS method=BillingTest.ValidateClickTestingOfAutomateFlagProcessingPage()[pri:0, instance:testcases.BillingTest@689604d9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfAutomateFlagProcessingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfBillingRulePage()[pri:1, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T01:58:38 IST" name="ValidateClickTestingOfBillingRulePage" finished-at="2023-06-29T02:00:34 IST" duration-ms="116124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfBillingRulePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T01:58:38 IST" name="beforeMethod" finished-at="2023-06-29T01:58:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfBillingRulePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:00:34 IST" name="reportWrapUp" finished-at="2023-06-29T02:00:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfBillingRulePage status=SUCCESS method=BillingTest.ValidateClickTestingOfBillingRulePage()[pri:1, instance:testcases.BillingTest@689604d9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfBillingRulePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfBillingServicePage()[pri:2, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:00:34 IST" name="ValidateClickTestingOfBillingServicePage" finished-at="2023-06-29T02:01:31 IST" duration-ms="56803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfBillingServicePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:00:34 IST" name="beforeMethod" finished-at="2023-06-29T02:00:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfBillingServicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:01:31 IST" name="reportWrapUp" finished-at="2023-06-29T02:01:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfBillingServicePage status=SUCCESS method=BillingTest.ValidateClickTestingOfBillingServicePage()[pri:2, instance:testcases.BillingTest@689604d9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfBillingServicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:01:31 IST" name="beforeMethod" finished-at="2023-06-29T02:01:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfBillingSetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfBillingSetupPage()[pri:3, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:01:31 IST" name="ValidateClickTestingOfBillingSetupPage" finished-at="2023-06-29T02:02:29 IST" duration-ms="57732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfBillingSetupPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:02:29 IST" name="reportWrapUp" finished-at="2023-06-29T02:02:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfBillingSetupPage status=SUCCESS method=BillingTest.ValidateClickTestingOfBillingSetupPage()[pri:3, instance:testcases.BillingTest@689604d9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfBillingSetupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:02:29 IST" name="beforeMethod" finished-at="2023-06-29T02:02:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfFlagRecordsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfFlagRecordsPage()[pri:4, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:02:29 IST" name="ValidateClickTestingOfFlagRecordsPage" finished-at="2023-06-29T02:03:35 IST" duration-ms="66538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfFlagRecordsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:03:35 IST" name="reportWrapUp" finished-at="2023-06-29T02:03:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfFlagRecordsPage status=SUCCESS method=BillingTest.ValidateClickTestingOfFlagRecordsPage()[pri:4, instance:testcases.BillingTest@689604d9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfFlagRecordsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:03:35 IST" name="beforeMethod" finished-at="2023-06-29T02:03:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfClientReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfClientReportPage()[pri:5, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:03:35 IST" name="ValidateClickTestingOfClientReportPage" finished-at="2023-06-29T02:04:27 IST" duration-ms="51898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfClientReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:04:27 IST" name="reportWrapUp" finished-at="2023-06-29T02:04:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfClientReportPage status=SUCCESS method=BillingTest.ValidateClickTestingOfClientReportPage()[pri:5, instance:testcases.BillingTest@689604d9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfClientReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:04:27 IST" name="beforeMethod" finished-at="2023-06-29T02:04:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfAddInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAddInvoicePage()[pri:6, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:04:27 IST" name="ValidateClickTestingOfAddInvoicePage" finished-at="2023-06-29T02:05:11 IST" duration-ms="44349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAddInvoicePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:05:11 IST" name="reportWrapUp" finished-at="2023-06-29T02:05:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAddInvoicePage status=SUCCESS method=BillingTest.ValidateClickTestingOfAddInvoicePage()[pri:6, instance:testcases.BillingTest@689604d9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfAddInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:05:12 IST" name="beforeMethod" finished-at="2023-06-29T02:05:12 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfImportInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfImportInvoicePage()[pri:7, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:05:12 IST" name="ValidateClickTestingOfImportInvoicePage" finished-at="2023-06-29T02:06:01 IST" duration-ms="49309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfImportInvoicePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:06:01 IST" name="reportWrapUp" finished-at="2023-06-29T02:06:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfImportInvoicePage status=SUCCESS method=BillingTest.ValidateClickTestingOfImportInvoicePage()[pri:7, instance:testcases.BillingTest@689604d9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfImportInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:06:01 IST" name="beforeMethod" finished-at="2023-06-29T02:06:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfInvoicePage()[pri:8, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:06:01 IST" name="ValidateClickTestingOfInvoicePage" finished-at="2023-06-29T02:07:12 IST" duration-ms="70939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfInvoicePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:07:12 IST" name="reportWrapUp" finished-at="2023-06-29T02:07:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfInvoicePage status=SUCCESS method=BillingTest.ValidateClickTestingOfInvoicePage()[pri:8, instance:testcases.BillingTest@689604d9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:07:12 IST" name="beforeMethod" finished-at="2023-06-29T02:07:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfInvoiceReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfInvoiceReportPage()[pri:9, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:07:12 IST" name="ValidateClickTestingOfInvoiceReportPage" finished-at="2023-06-29T02:08:01 IST" duration-ms="49152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfInvoiceReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:08:01 IST" name="reportWrapUp" finished-at="2023-06-29T02:08:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfInvoiceReportPage status=SUCCESS method=BillingTest.ValidateClickTestingOfInvoiceReportPage()[pri:9, instance:testcases.BillingTest@689604d9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfInvoiceReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:08:01 IST" name="beforeMethod" finished-at="2023-06-29T02:08:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfProcessAndReprocessChargesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProcessAndReprocessChargesPage()[pri:10, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:08:01 IST" name="ValidateClickTestingOfProcessAndReprocessChargesPage" finished-at="2023-06-29T02:08:41 IST" duration-ms="40195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProcessAndReprocessChargesPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:08:41 IST" name="reportWrapUp" finished-at="2023-06-29T02:08:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProcessAndReprocessChargesPage status=SUCCESS method=BillingTest.ValidateClickTestingOfProcessAndReprocessChargesPage()[pri:10, instance:testcases.BillingTest@689604d9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfProcessAndReprocessChargesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfViewHistoryPage()[pri:11, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:08:41 IST" name="ValidateClickTestingOfViewHistoryPage" finished-at="2023-06-29T02:09:41 IST" duration-ms="59677" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfViewHistoryPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:08:41 IST" name="beforeMethod" finished-at="2023-06-29T02:08:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfViewHistoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:09:41 IST" name="reportWrapUp" finished-at="2023-06-29T02:09:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfViewHistoryPage status=SUCCESS method=BillingTest.ValidateClickTestingOfViewHistoryPage()[pri:11, instance:testcases.BillingTest@689604d9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfViewHistoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:09:41 IST" name="beforeMethod" finished-at="2023-06-29T02:09:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfReceivedInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfReceivedInvoicePage()[pri:12, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:09:41 IST" name="ValidateClickTestingOfReceivedInvoicePage" finished-at="2023-06-29T02:10:18 IST" duration-ms="37056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfReceivedInvoicePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:10:18 IST" name="reportWrapUp" finished-at="2023-06-29T02:10:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfReceivedInvoicePage status=SUCCESS method=BillingTest.ValidateClickTestingOfReceivedInvoicePage()[pri:12, instance:testcases.BillingTest@689604d9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.BillingTest.ValidateClickTestingOfReceivedInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.BillingTest@689604d9]" started-at="2023-06-29T02:10:18 IST" name="closeBrowser" finished-at="2023-06-29T02:10:19 IST" duration-ms="816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.BillingTest -->
      <class name="testcases.ApprovalTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.ApprovalTest@31304f14]" started-at="2023-06-29T03:33:03 IST" name="setUp" finished-at="2023-06-29T03:33:11 IST" duration-ms="8069" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfApprovalChainPage()[pri:0, instance:testcases.ApprovalTest@31304f14]" started-at="2023-06-29T03:33:11 IST" name="ValidateClickTestingOfApprovalChainPage" finished-at="2023-06-29T03:34:02 IST" duration-ms="51137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfApprovalChainPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@31304f14]" started-at="2023-06-29T03:33:11 IST" name="beforeMethod" finished-at="2023-06-29T03:33:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalChainPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@31304f14]" started-at="2023-06-29T03:34:02 IST" name="reportWrapUp" finished-at="2023-06-29T03:34:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfApprovalChainPage status=SUCCESS method=ApprovalTest.ValidateClickTestingOfApprovalChainPage()[pri:0, instance:testcases.ApprovalTest@31304f14] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalChainPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@31304f14]" started-at="2023-06-29T03:34:02 IST" name="beforeMethod" finished-at="2023-06-29T03:34:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalGroupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfApprovalGroupPage()[pri:1, instance:testcases.ApprovalTest@31304f14]" started-at="2023-06-29T03:34:02 IST" name="ValidateClickTestingOfApprovalGroupPage" finished-at="2023-06-29T03:34:51 IST" duration-ms="48408" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:81)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.ApprovalTest.ValidateClickTestingOfApprovalGroupPage(ApprovalTest.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfApprovalGroupPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@31304f14]" started-at="2023-06-29T03:34:51 IST" name="reportWrapUp" finished-at="2023-06-29T03:34:52 IST" duration-ms="1139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfApprovalGroupPage status=FAILURE method=ApprovalTest.ValidateClickTestingOfApprovalGroupPage()[pri:1, instance:testcases.ApprovalTest@31304f14] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalGroupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@31304f14]" started-at="2023-06-29T03:34:52 IST" name="beforeMethod" finished-at="2023-06-29T03:34:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfApprovalReportPage()[pri:2, instance:testcases.ApprovalTest@31304f14]" started-at="2023-06-29T03:34:52 IST" name="ValidateClickTestingOfApprovalReportPage" finished-at="2023-06-29T03:35:25 IST" duration-ms="33255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfApprovalReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@31304f14]" started-at="2023-06-29T03:35:25 IST" name="reportWrapUp" finished-at="2023-06-29T03:35:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfApprovalReportPage status=SUCCESS method=ApprovalTest.ValidateClickTestingOfApprovalReportPage()[pri:2, instance:testcases.ApprovalTest@31304f14] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfApprovalRulePage()[pri:3, instance:testcases.ApprovalTest@31304f14]" started-at="2023-06-29T03:35:25 IST" name="ValidateClickTestingOfApprovalRulePage" finished-at="2023-06-29T03:36:37 IST" duration-ms="72152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfApprovalRulePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@31304f14]" started-at="2023-06-29T03:35:25 IST" name="beforeMethod" finished-at="2023-06-29T03:35:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalRulePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ApprovalTest@31304f14]" started-at="2023-06-29T03:36:37 IST" name="reportWrapUp" finished-at="2023-06-29T03:36:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfApprovalRulePage status=SUCCESS method=ApprovalTest.ValidateClickTestingOfApprovalRulePage()[pri:3, instance:testcases.ApprovalTest@31304f14] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ApprovalTest.ValidateClickTestingOfApprovalRulePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.ApprovalTest@31304f14]" started-at="2023-06-29T03:36:37 IST" name="closeBrowser" finished-at="2023-06-29T03:36:38 IST" duration-ms="433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.ApprovalTest -->
      <class name="testcases.PerformanceReviewTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:49:46 IST" name="setUp" finished-at="2023-06-29T03:49:56 IST" duration-ms="10034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfPerformanceReviewPage()[pri:0, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:49:56 IST" name="ValidateClickTestingOfPerformanceReviewPage" finished-at="2023-06-29T03:50:19 IST" duration-ms="23667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfPerformanceReviewPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:49:56 IST" name="beforeMethod" finished-at="2023-06-29T03:49:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfPerformanceReviewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:50:19 IST" name="reportWrapUp" finished-at="2023-06-29T03:50:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfPerformanceReviewPage status=SUCCESS method=PerformanceReviewTest.ValidateClickTestingOfPerformanceReviewPage()[pri:0, instance:testcases.PerformanceReviewTest@5c6648b0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfPerformanceReviewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:50:19 IST" name="beforeMethod" finished-at="2023-06-29T03:50:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfPerformanceReviewReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfPerformanceReviewReportPage()[pri:1, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:50:19 IST" name="ValidateClickTestingOfPerformanceReviewReportPage" finished-at="2023-06-29T03:51:09 IST" duration-ms="49835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfPerformanceReviewReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:51:09 IST" name="reportWrapUp" finished-at="2023-06-29T03:51:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfPerformanceReviewReportPage status=SUCCESS method=PerformanceReviewTest.ValidateClickTestingOfPerformanceReviewReportPage()[pri:1, instance:testcases.PerformanceReviewTest@5c6648b0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfPerformanceReviewReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfProvideFeedbackPage()[pri:2, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:51:09 IST" name="ValidateClickTestingOfProvideFeedbackPage" finished-at="2023-06-29T03:51:46 IST" duration-ms="36599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProvideFeedbackPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:51:09 IST" name="beforeMethod" finished-at="2023-06-29T03:51:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfProvideFeedbackPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:51:46 IST" name="reportWrapUp" finished-at="2023-06-29T03:51:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProvideFeedbackPage status=SUCCESS method=PerformanceReviewTest.ValidateClickTestingOfProvideFeedbackPage()[pri:2, instance:testcases.PerformanceReviewTest@5c6648b0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfProvideFeedbackPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:51:46 IST" name="beforeMethod" finished-at="2023-06-29T03:51:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfProvideReviewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProvideReviewPage()[pri:3, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:51:46 IST" name="ValidateClickTestingOfProvideReviewPage" finished-at="2023-06-29T03:52:22 IST" duration-ms="36340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProvideReviewPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:52:22 IST" name="reportWrapUp" finished-at="2023-06-29T03:52:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProvideReviewPage status=SUCCESS method=PerformanceReviewTest.ValidateClickTestingOfProvideReviewPage()[pri:3, instance:testcases.PerformanceReviewTest@5c6648b0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfProvideReviewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:52:22 IST" name="beforeMethod" finished-at="2023-06-29T03:52:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfReviewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfReviewPage()[pri:4, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:52:22 IST" name="ValidateClickTestingOfReviewPage" finished-at="2023-06-29T03:53:15 IST" duration-ms="52531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfReviewPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:53:15 IST" name="reportWrapUp" finished-at="2023-06-29T03:53:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfReviewPage status=SUCCESS method=PerformanceReviewTest.ValidateClickTestingOfReviewPage()[pri:4, instance:testcases.PerformanceReviewTest@5c6648b0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.PerformanceReviewTest.ValidateClickTestingOfReviewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.PerformanceReviewTest@5c6648b0]" started-at="2023-06-29T03:53:15 IST" name="closeBrowser" finished-at="2023-06-29T03:53:15 IST" duration-ms="383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.PerformanceReviewTest -->
      <class name="testcases.CrmTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:01:59 IST" name="setUp" finished-at="2023-06-29T03:02:09 IST" duration-ms="9193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:02:09 IST" name="beforeMethod" finished-at="2023-06-29T03:02:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfAccountsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAccountsPage()[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:02:09 IST" name="ValidateClickTestingOfAccountsPage" finished-at="2023-06-29T03:03:15 IST" duration-ms="66520" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.clickByJavascript(WebBasePage.java:274)
at pageobjects.CrmPage.clickOnPageTourGuide(CrmPage.java:52)
at action.CrmAction.GoToAccountsPage(CrmAction.java:30)
at testcases.CrmTest.ValidateClickTestingOfAccountsPage(CrmTest.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAccountsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:03:15 IST" name="reportWrapUp" finished-at="2023-06-29T03:03:15 IST" duration-ms="250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAccountsPage status=FAILURE method=CrmTest.ValidateClickTestingOfAccountsPage()[pri:0, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfAccountsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:03:15 IST" name="beforeMethod" finished-at="2023-06-29T03:03:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfBrandPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfBrandPage()[pri:1, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:03:15 IST" name="ValidateClickTestingOfBrandPage" finished-at="2023-06-29T03:03:49 IST" duration-ms="33294" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:81)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.CrmTest.ValidateClickTestingOfBrandPage(CrmTest.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfBrandPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:03:49 IST" name="reportWrapUp" finished-at="2023-06-29T03:03:49 IST" duration-ms="224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfBrandPage status=FAILURE method=CrmTest.ValidateClickTestingOfBrandPage()[pri:1, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfBrandPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:03:49 IST" name="beforeMethod" finished-at="2023-06-29T03:03:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfCampaignPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCampaignPage()[pri:2, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:03:49 IST" name="ValidateClickTestingOfCampaignPage" finished-at="2023-06-29T03:04:12 IST" duration-ms="22828" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.clickByJavascript(WebBasePage.java:274)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:78)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.CrmTest.ValidateClickTestingOfCampaignPage(CrmTest.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCampaignPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:04:12 IST" name="reportWrapUp" finished-at="2023-06-29T03:04:12 IST" duration-ms="202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCampaignPage status=FAILURE method=CrmTest.ValidateClickTestingOfCampaignPage()[pri:2, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfCampaignPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:04:12 IST" name="beforeMethod" finished-at="2023-06-29T03:04:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfCommunicationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCommunicationPage()[pri:3, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:04:12 IST" name="ValidateClickTestingOfCommunicationPage" finished-at="2023-06-29T03:05:22 IST" duration-ms="69849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCommunicationPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:05:22 IST" name="reportWrapUp" finished-at="2023-06-29T03:05:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCommunicationPage status=SUCCESS method=CrmTest.ValidateClickTestingOfCommunicationPage()[pri:3, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfCommunicationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:05:22 IST" name="beforeMethod" finished-at="2023-06-29T03:05:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfContactsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfContactsPage()[pri:4, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:05:22 IST" name="ValidateClickTestingOfContactsPage" finished-at="2023-06-29T03:06:37 IST" duration-ms="75442" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.clickByJavascript(WebBasePage.java:274)
at pageobjects.CrmPage.clickOnPageTourGuideForBrand(CrmPage.java:122)
at action.CrmAction.GoToContactPage(CrmAction.java:77)
at testcases.CrmTest.ValidateClickTestingOfContactsPage(CrmTest.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfContactsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:06:37 IST" name="reportWrapUp" finished-at="2023-06-29T03:06:37 IST" duration-ms="227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfContactsPage status=FAILURE method=CrmTest.ValidateClickTestingOfContactsPage()[pri:4, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfContactsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfContractsPage()[pri:5, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:06:37 IST" name="ValidateClickTestingOfContractsPage" finished-at="2023-06-29T03:07:14 IST" duration-ms="36536" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:81)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.CrmTest.ValidateClickTestingOfContractsPage(CrmTest.java:91)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfContractsPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:06:37 IST" name="beforeMethod" finished-at="2023-06-29T03:06:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfContractsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:07:14 IST" name="reportWrapUp" finished-at="2023-06-29T03:07:14 IST" duration-ms="236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfContractsPage status=FAILURE method=CrmTest.ValidateClickTestingOfContractsPage()[pri:5, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfContractsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:07:14 IST" name="beforeMethod" finished-at="2023-06-29T03:07:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfCRMReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCRMReportPage()[pri:6, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:07:14 IST" name="ValidateClickTestingOfCRMReportPage" finished-at="2023-06-29T03:08:01 IST" duration-ms="47053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCRMReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:08:01 IST" name="reportWrapUp" finished-at="2023-06-29T03:08:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCRMReportPage status=SUCCESS method=CrmTest.ValidateClickTestingOfCRMReportPage()[pri:6, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfCRMReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfDEalsPage()[pri:7, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:08:01 IST" name="ValidateClickTestingOfDEalsPage" finished-at="2023-06-29T03:09:16 IST" duration-ms="74929" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.clickByJavascript(WebBasePage.java:274)
at pageobjects.CrmPage.clickOnPageTourGuideForBrand(CrmPage.java:122)
at action.CrmAction.GoToDealsPage(CrmAction.java:106)
at testcases.CrmTest.ValidateClickTestingOfDEalsPage(CrmTest.java:119)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfDEalsPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:08:01 IST" name="beforeMethod" finished-at="2023-06-29T03:08:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfDEalsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:09:16 IST" name="reportWrapUp" finished-at="2023-06-29T03:09:16 IST" duration-ms="235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfDEalsPage status=FAILURE method=CrmTest.ValidateClickTestingOfDEalsPage()[pri:7, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfDEalsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:09:16 IST" name="beforeMethod" finished-at="2023-06-29T03:09:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfgoodsInwardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfgoodsInwardPage()[pri:8, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:09:16 IST" name="ValidateClickTestingOfgoodsInwardPage" finished-at="2023-06-29T03:09:50 IST" duration-ms="33389" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:81)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.CrmTest.ValidateClickTestingOfgoodsInwardPage(CrmTest.java:130)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfgoodsInwardPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:09:50 IST" name="reportWrapUp" finished-at="2023-06-29T03:09:50 IST" duration-ms="202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfgoodsInwardPage status=FAILURE method=CrmTest.ValidateClickTestingOfgoodsInwardPage()[pri:8, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfgoodsInwardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfInvoicePage()[pri:9, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:09:50 IST" name="ValidateClickTestingOfInvoicePage" finished-at="2023-06-29T03:11:13 IST" duration-ms="83346" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Filter -  element not present]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Filter -  element not present
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.click(WebBasePage.java:126)
at pageobjects.CrmPage.clickOnFilter(CrmPage.java:208)
at action.CrmAction.GoToInvoicePage(CrmAction.java:128)
at testcases.CrmTest.ValidateClickTestingOfInvoicePage(CrmTest.java:145)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfInvoicePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:09:50 IST" name="beforeMethod" finished-at="2023-06-29T03:09:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:11:13 IST" name="reportWrapUp" finished-at="2023-06-29T03:11:14 IST" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfInvoicePage status=FAILURE method=CrmTest.ValidateClickTestingOfInvoicePage()[pri:9, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfInvoicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfProductTypePage()[pri:10, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:11:14 IST" name="ValidateClickTestingOfProductTypePage" finished-at="2023-06-29T03:11:47 IST" duration-ms="32879" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:81)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.CrmTest.ValidateClickTestingOfProductTypePage(CrmTest.java:156)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductTypePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:11:14 IST" name="beforeMethod" finished-at="2023-06-29T03:11:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfProductTypePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:11:47 IST" name="reportWrapUp" finished-at="2023-06-29T03:11:47 IST" duration-ms="267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductTypePage status=FAILURE method=CrmTest.ValidateClickTestingOfProductTypePage()[pri:10, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfProductTypePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfLeadPage()[pri:11, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:11:47 IST" name="ValidateClickTestingOfLeadPage" finished-at="2023-06-29T03:13:09 IST" duration-ms="82338" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.clickByJavascript(WebBasePage.java:274)
at pageobjects.CrmPage.clickOnPageTourGuideForBrand(CrmPage.java:122)
at action.CrmAction.GoToLeadPage(CrmAction.java:152)
at testcases.CrmTest.ValidateClickTestingOfLeadPage(CrmTest.java:171)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfLeadPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:11:47 IST" name="beforeMethod" finished-at="2023-06-29T03:11:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfLeadPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:13:09 IST" name="reportWrapUp" finished-at="2023-06-29T03:13:09 IST" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfLeadPage status=FAILURE method=CrmTest.ValidateClickTestingOfLeadPage()[pri:11, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfLeadPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfManageProductPage()[pri:12, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:13:09 IST" name="ValidateClickTestingOfManageProductPage" finished-at="2023-06-29T03:13:42 IST" duration-ms="32610" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:81)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.CrmTest.ValidateClickTestingOfManageProductPage(CrmTest.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageProductPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:13:09 IST" name="beforeMethod" finished-at="2023-06-29T03:13:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfManageProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:13:42 IST" name="reportWrapUp" finished-at="2023-06-29T03:13:42 IST" duration-ms="240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageProductPage status=FAILURE method=CrmTest.ValidateClickTestingOfManageProductPage()[pri:12, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfManageProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfPriceBookPage()[pri:13, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:13:42 IST" name="ValidateClickTestingOfPriceBookPage" finished-at="2023-06-29T03:15:03 IST" duration-ms="80984" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.clickByJavascript(WebBasePage.java:274)
at pageobjects.CrmPage.clickOnPageTourGuideForBrand(CrmPage.java:122)
at action.CrmAction.GoToPriceBookPage(CrmAction.java:191)
at testcases.CrmTest.ValidateClickTestingOfPriceBookPage(CrmTest.java:197)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfPriceBookPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:13:42 IST" name="beforeMethod" finished-at="2023-06-29T03:13:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfPriceBookPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:15:03 IST" name="reportWrapUp" finished-at="2023-06-29T03:15:03 IST" duration-ms="216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfPriceBookPage status=FAILURE method=CrmTest.ValidateClickTestingOfPriceBookPage()[pri:13, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfPriceBookPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:15:03 IST" name="beforeMethod" finished-at="2023-06-29T03:15:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProductPage()[pri:14, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:15:03 IST" name="ValidateClickTestingOfProductPage" finished-at="2023-06-29T03:15:36 IST" duration-ms="32492" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:81)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.CrmTest.ValidateClickTestingOfProductPage(CrmTest.java:208)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:15:36 IST" name="reportWrapUp" finished-at="2023-06-29T03:15:36 IST" duration-ms="247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductPage status=FAILURE method=CrmTest.ValidateClickTestingOfProductPage()[pri:14, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:15:36 IST" name="beforeMethod" finished-at="2023-06-29T03:15:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfPurchaseOrderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfPurchaseOrderPage()[pri:15, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:15:36 IST" name="ValidateClickTestingOfPurchaseOrderPage" finished-at="2023-06-29T03:16:59 IST" duration-ms="82971" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.clickByJavascript(WebBasePage.java:274)
at pageobjects.CrmPage.clickOnPageTourGuideForBrand(CrmPage.java:122)
at action.CrmAction.GoToPurchaseOrderPage(CrmAction.java:217)
at testcases.CrmTest.ValidateClickTestingOfPurchaseOrderPage(CrmTest.java:223)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfPurchaseOrderPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:16:59 IST" name="reportWrapUp" finished-at="2023-06-29T03:16:59 IST" duration-ms="217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfPurchaseOrderPage status=FAILURE method=CrmTest.ValidateClickTestingOfPurchaseOrderPage()[pri:15, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfPurchaseOrderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfQuotePage()[pri:16, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:16:59 IST" name="ValidateClickTestingOfQuotePage" finished-at="2023-06-29T03:17:33 IST" duration-ms="33348" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:81)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.CrmTest.ValidateClickTestingOfQuotePage(CrmTest.java:234)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfQuotePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:16:59 IST" name="beforeMethod" finished-at="2023-06-29T03:16:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfQuotePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:17:33 IST" name="reportWrapUp" finished-at="2023-06-29T03:17:33 IST" duration-ms="240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfQuotePage status=FAILURE method=CrmTest.ValidateClickTestingOfQuotePage()[pri:16, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfQuotePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:17:33 IST" name="beforeMethod" finished-at="2023-06-29T03:17:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfSalesOrderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfSalesOrderPage()[pri:17, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:17:33 IST" name="ValidateClickTestingOfSalesOrderPage" finished-at="2023-06-29T03:18:55 IST" duration-ms="81755" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: org.openqa.selenium.JavascriptException: javascript error: Cannot read properties of null (reading 'click')
  (Session info: chrome=114.0.5735.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.159', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.198, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:51026}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f00f577d3d86929b5703b8de27f8e382
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.clickByJavascript(WebBasePage.java:274)
at pageobjects.CrmPage.clickOnPageTourGuideForBrand(CrmPage.java:122)
at action.CrmAction.GoToSalesOrderPage(CrmAction.java:245)
at testcases.CrmTest.ValidateClickTestingOfSalesOrderPage(CrmTest.java:249)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfSalesOrderPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:18:55 IST" name="reportWrapUp" finished-at="2023-06-29T03:18:55 IST" duration-ms="232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfSalesOrderPage status=FAILURE method=CrmTest.ValidateClickTestingOfSalesOrderPage()[pri:17, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfSalesOrderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:18:55 IST" name="beforeMethod" finished-at="2023-06-29T03:18:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfStagesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfStagesPage()[pri:18, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:18:55 IST" name="ValidateClickTestingOfStagesPage" finished-at="2023-06-29T03:19:27 IST" duration-ms="31732" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:81)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.CrmTest.ValidateClickTestingOfStagesPage(CrmTest.java:260)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfStagesPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:19:27 IST" name="reportWrapUp" finished-at="2023-06-29T03:19:27 IST" duration-ms="204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfStagesPage status=FAILURE method=CrmTest.ValidateClickTestingOfStagesPage()[pri:18, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfStagesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfVendorPage()[pri:19, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:19:27 IST" name="ValidateClickTestingOfVendorPage" finished-at="2023-06-29T03:20:58 IST" duration-ms="91073" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Filter -  element not present]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Filter -  element not present
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.click(WebBasePage.java:126)
at pageobjects.CrmPage.clickOnFilter(CrmPage.java:208)
at action.CrmAction.GoToVendorPage(CrmAction.java:274)
at testcases.CrmTest.ValidateClickTestingOfVendorPage(CrmTest.java:275)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfVendorPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:19:27 IST" name="beforeMethod" finished-at="2023-06-29T03:19:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfVendorPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:20:58 IST" name="reportWrapUp" finished-at="2023-06-29T03:20:58 IST" duration-ms="217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfVendorPage status=FAILURE method=CrmTest.ValidateClickTestingOfVendorPage()[pri:19, instance:testcases.CrmTest@313ac989] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CrmTest.ValidateClickTestingOfVendorPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.CrmTest@313ac989]" started-at="2023-06-29T03:20:58 IST" name="closeBrowser" finished-at="2023-06-29T03:20:59 IST" duration-ms="540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.CrmTest -->
      <class name="testcases.EventManagementTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T02:56:38 IST" name="setUp" finished-at="2023-06-29T02:56:47 IST" duration-ms="8819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T02:56:47 IST" name="beforeMethod" finished-at="2023-06-29T02:56:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfCalendarPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCalendarPage()[pri:0, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T02:56:47 IST" name="ValidateClickTestingOfCalendarPage" finished-at="2023-06-29T02:57:17 IST" duration-ms="29546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCalendarPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T02:57:17 IST" name="reportWrapUp" finished-at="2023-06-29T02:57:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCalendarPage status=SUCCESS method=EventManagementTest.ValidateClickTestingOfCalendarPage()[pri:0, instance:testcases.EventManagementTest@3023df74] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfCalendarPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T02:57:17 IST" name="beforeMethod" finished-at="2023-06-29T02:57:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfGoogleCalendarPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfGoogleCalendarPage()[pri:1, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T02:57:17 IST" name="ValidateClickTestingOfGoogleCalendarPage" finished-at="2023-06-29T02:58:11 IST" duration-ms="54290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGoogleCalendarPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T02:58:11 IST" name="reportWrapUp" finished-at="2023-06-29T02:58:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGoogleCalendarPage status=SUCCESS method=EventManagementTest.ValidateClickTestingOfGoogleCalendarPage()[pri:1, instance:testcases.EventManagementTest@3023df74] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfGoogleCalendarPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T02:58:11 IST" name="beforeMethod" finished-at="2023-06-29T02:58:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfEventManagementPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfEventManagementPage()[pri:2, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T02:58:11 IST" name="ValidateClickTestingOfEventManagementPage" finished-at="2023-06-29T02:59:29 IST" duration-ms="78364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfEventManagementPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T02:59:29 IST" name="reportWrapUp" finished-at="2023-06-29T02:59:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfEventManagementPage status=SUCCESS method=EventManagementTest.ValidateClickTestingOfEventManagementPage()[pri:2, instance:testcases.EventManagementTest@3023df74] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfEventManagementPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T02:59:29 IST" name="beforeMethod" finished-at="2023-06-29T02:59:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfManageVenuePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageVenuePage()[pri:3, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T02:59:29 IST" name="ValidateClickTestingOfManageVenuePage" finished-at="2023-06-29T03:00:14 IST" duration-ms="44010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageVenuePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T03:00:14 IST" name="reportWrapUp" finished-at="2023-06-29T03:00:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageVenuePage status=SUCCESS method=EventManagementTest.ValidateClickTestingOfManageVenuePage()[pri:3, instance:testcases.EventManagementTest@3023df74] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfManageVenuePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T03:00:14 IST" name="beforeMethod" finished-at="2023-06-29T03:00:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfUserAvailabilityPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfUserAvailabilityPage()[pri:4, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T03:00:14 IST" name="ValidateClickTestingOfUserAvailabilityPage" finished-at="2023-06-29T03:01:07 IST" duration-ms="53323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfUserAvailabilityPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T03:01:07 IST" name="reportWrapUp" finished-at="2023-06-29T03:01:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfUserAvailabilityPage status=SUCCESS method=EventManagementTest.ValidateClickTestingOfUserAvailabilityPage()[pri:4, instance:testcases.EventManagementTest@3023df74] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfUserAvailabilityPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T03:01:07 IST" name="beforeMethod" finished-at="2023-06-29T03:01:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfDashBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfDashBoardPage()[pri:5, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T03:01:07 IST" name="ValidateClickTestingOfDashBoardPage" finished-at="2023-06-29T03:01:59 IST" duration-ms="52050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfDashBoardPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T03:01:59 IST" name="reportWrapUp" finished-at="2023-06-29T03:01:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfDashBoardPage status=SUCCESS method=EventManagementTest.ValidateClickTestingOfDashBoardPage()[pri:5, instance:testcases.EventManagementTest@3023df74] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.EventManagementTest.ValidateClickTestingOfDashBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.EventManagementTest@3023df74]" started-at="2023-06-29T03:01:59 IST" name="closeBrowser" finished-at="2023-06-29T03:01:59 IST" duration-ms="553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.EventManagementTest -->
      <class name="testcases.GeneralTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:37:18 IST" name="setUp" finished-at="2023-06-29T02:37:27 IST" duration-ms="8696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfAddReportPage()[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:37:27 IST" name="ValidateClickTestingOfAddReportPage" finished-at="2023-06-29T02:38:06 IST" duration-ms="38436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAddReportPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:37:27 IST" name="beforeMethod" finished-at="2023-06-29T02:37:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfAddReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:38:06 IST" name="reportWrapUp" finished-at="2023-06-29T02:38:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAddReportPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfAddReportPage()[pri:0, instance:testcases.GeneralTest@4c371370] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfAddReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:38:06 IST" name="beforeMethod" finished-at="2023-06-29T02:38:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfAutoResponderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAutoResponderPage()[pri:1, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:38:06 IST" name="ValidateClickTestingOfAutoResponderPage" finished-at="2023-06-29T02:39:01 IST" duration-ms="55120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAutoResponderPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:39:01 IST" name="reportWrapUp" finished-at="2023-06-29T02:39:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAutoResponderPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfAutoResponderPage()[pri:1, instance:testcases.GeneralTest@4c371370] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfAutoResponderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfCustomFieldsPage()[pri:2, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:39:01 IST" name="ValidateClickTestingOfCustomFieldsPage" finished-at="2023-06-29T02:39:59 IST" duration-ms="58537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCustomFieldsPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:39:01 IST" name="beforeMethod" finished-at="2023-06-29T02:39:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfCustomFieldsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:39:59 IST" name="reportWrapUp" finished-at="2023-06-29T02:39:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCustomFieldsPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfCustomFieldsPage()[pri:2, instance:testcases.GeneralTest@4c371370] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfCustomFieldsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:39:59 IST" name="beforeMethod" finished-at="2023-06-29T02:39:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfCustomReportsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCustomReportsPage()[pri:3, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:39:59 IST" name="ValidateClickTestingOfCustomReportsPage" finished-at="2023-06-29T02:40:58 IST" duration-ms="58993" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCustomReportsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:40:58 IST" name="reportWrapUp" finished-at="2023-06-29T02:40:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCustomReportsPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfCustomReportsPage()[pri:3, instance:testcases.GeneralTest@4c371370] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfCustomReportsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:40:58 IST" name="beforeMethod" finished-at="2023-06-29T02:40:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfExternalLinkPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfExternalLinkPage()[pri:4, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:40:58 IST" name="ValidateClickTestingOfExternalLinkPage" finished-at="2023-06-29T02:41:34 IST" duration-ms="36024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfExternalLinkPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:41:34 IST" name="reportWrapUp" finished-at="2023-06-29T02:41:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfExternalLinkPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfExternalLinkPage()[pri:4, instance:testcases.GeneralTest@4c371370] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfExternalLinkPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:41:34 IST" name="beforeMethod" finished-at="2023-06-29T02:41:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfPassportInformationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfPassportInformationPage()[pri:5, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:41:34 IST" name="ValidateClickTestingOfPassportInformationPage" finished-at="2023-06-29T02:42:27 IST" duration-ms="52656" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfPassportInformationPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:42:27 IST" name="reportWrapUp" finished-at="2023-06-29T02:42:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfPassportInformationPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfPassportInformationPage()[pri:5, instance:testcases.GeneralTest@4c371370] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfPassportInformationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfManageLayoutPage()[pri:6, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:42:27 IST" name="ValidateClickTestingOfManageLayoutPage" finished-at="2023-06-29T02:43:10 IST" duration-ms="43081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageLayoutPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:42:27 IST" name="beforeMethod" finished-at="2023-06-29T02:42:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfManageLayoutPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:43:10 IST" name="reportWrapUp" finished-at="2023-06-29T02:43:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageLayoutPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfManageLayoutPage()[pri:6, instance:testcases.GeneralTest@4c371370] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfManageLayoutPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:43:10 IST" name="beforeMethod" finished-at="2023-06-29T02:43:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfOrganizationChartPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfOrganizationChartPage()[pri:7, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:43:10 IST" name="ValidateClickTestingOfOrganizationChartPage" finished-at="2023-06-29T02:43:50 IST" duration-ms="40353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfOrganizationChartPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:43:50 IST" name="reportWrapUp" finished-at="2023-06-29T02:43:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfOrganizationChartPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfOrganizationChartPage()[pri:7, instance:testcases.GeneralTest@4c371370] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfOrganizationChartPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfProvisionalRightsPage()[pri:8, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:43:50 IST" name="ValidateClickTestingOfProvisionalRightsPage" finished-at="2023-06-29T02:45:52 IST" duration-ms="121911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProvisionalRightsPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:43:50 IST" name="beforeMethod" finished-at="2023-06-29T02:43:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfProvisionalRightsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:45:52 IST" name="reportWrapUp" finished-at="2023-06-29T02:45:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProvisionalRightsPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfProvisionalRightsPage()[pri:8, instance:testcases.GeneralTest@4c371370] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfProvisionalRightsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:45:52 IST" name="beforeMethod" finished-at="2023-06-29T02:45:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfRuleEnginePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfRuleEnginePage()[pri:9, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:45:52 IST" name="ValidateClickTestingOfRuleEnginePage" finished-at="2023-06-29T02:46:52 IST" duration-ms="59589" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfRuleEnginePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:46:52 IST" name="reportWrapUp" finished-at="2023-06-29T02:46:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfRuleEnginePage status=SUCCESS method=GeneralTest.ValidateClickTestingOfRuleEnginePage()[pri:9, instance:testcases.GeneralTest@4c371370] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfRuleEnginePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:46:52 IST" name="beforeMethod" finished-at="2023-06-29T02:46:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfStoragePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfStoragePage()[pri:10, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:46:52 IST" name="ValidateClickTestingOfStoragePage" finished-at="2023-06-29T02:47:31 IST" duration-ms="38679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfStoragePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:47:31 IST" name="reportWrapUp" finished-at="2023-06-29T02:47:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfStoragePage status=SUCCESS method=GeneralTest.ValidateClickTestingOfStoragePage()[pri:10, instance:testcases.GeneralTest@4c371370] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfStoragePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:47:31 IST" name="beforeMethod" finished-at="2023-06-29T02:47:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfTagsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTagsPage()[pri:11, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:47:31 IST" name="ValidateClickTestingOfTagsPage" finished-at="2023-06-29T02:48:13 IST" duration-ms="42851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTagsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:48:13 IST" name="reportWrapUp" finished-at="2023-06-29T02:48:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTagsPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfTagsPage()[pri:11, instance:testcases.GeneralTest@4c371370] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfTagsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:48:13 IST" name="beforeMethod" finished-at="2023-06-29T02:48:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfWorkingDayPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfWorkingDayPage()[pri:12, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:48:13 IST" name="ValidateClickTestingOfWorkingDayPage" finished-at="2023-06-29T02:49:07 IST" duration-ms="53226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfWorkingDayPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:49:07 IST" name="reportWrapUp" finished-at="2023-06-29T02:49:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfWorkingDayPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfWorkingDayPage()[pri:12, instance:testcases.GeneralTest@4c371370] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfWorkingDayPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:49:07 IST" name="beforeMethod" finished-at="2023-06-29T02:49:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfWorkingWeekPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfWorkingWeekPage()[pri:13, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:49:07 IST" name="ValidateClickTestingOfWorkingWeekPage" finished-at="2023-06-29T02:49:53 IST" duration-ms="46103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfWorkingWeekPage -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:49:53 IST" name="closeBrowser" finished-at="2023-06-29T02:49:53 IST" duration-ms="432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.GeneralTest@4c371370]" started-at="2023-06-29T02:49:53 IST" name="reportWrapUp" finished-at="2023-06-29T02:49:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfWorkingWeekPage status=SUCCESS method=GeneralTest.ValidateClickTestingOfWorkingWeekPage()[pri:13, instance:testcases.GeneralTest@4c371370] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.GeneralTest.ValidateClickTestingOfWorkingWeekPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.GeneralTest -->
      <class name="testcases.AppotmentCalendarTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:10:19 IST" name="setUp" finished-at="2023-06-29T02:10:28 IST" duration-ms="8918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:10:28 IST" name="beforeMethod" finished-at="2023-06-29T02:10:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfManageExternalLinkPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageExternalLinkPage()[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:10:28 IST" name="ValidateClickTestingOfManageExternalLinkPage" finished-at="2023-06-29T02:11:12 IST" duration-ms="43942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageExternalLinkPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:11:12 IST" name="reportWrapUp" finished-at="2023-06-29T02:11:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageExternalLinkPage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfManageExternalLinkPage()[pri:0, instance:testcases.AppotmentCalendarTest@18078bef] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfManageExternalLinkPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfAppoitmentReportPage()[pri:1, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:11:12 IST" name="ValidateClickTestingOfAppoitmentReportPage" finished-at="2023-06-29T02:12:01 IST" duration-ms="49510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAppoitmentReportPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:11:12 IST" name="beforeMethod" finished-at="2023-06-29T02:11:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfAppoitmentReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:12:01 IST" name="reportWrapUp" finished-at="2023-06-29T02:12:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAppoitmentReportPage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfAppoitmentReportPage()[pri:1, instance:testcases.AppotmentCalendarTest@18078bef] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfAppoitmentReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfConsumerListPage()[pri:2, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:12:01 IST" name="ValidateClickTestingOfConsumerListPage" finished-at="2023-06-29T02:12:49 IST" duration-ms="48024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfConsumerListPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:12:01 IST" name="beforeMethod" finished-at="2023-06-29T02:12:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfConsumerListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCounterPage()[pri:3, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:12:49 IST" name="ValidateClickTestingOfCounterPage" finished-at="2023-06-29T02:13:46 IST" duration-ms="56898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCounterPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:12:49 IST" name="reportWrapUp" finished-at="2023-06-29T02:12:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfConsumerListPage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfConsumerListPage()[pri:2, instance:testcases.AppotmentCalendarTest@18078bef] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfConsumerListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:12:49 IST" name="beforeMethod" finished-at="2023-06-29T02:12:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfCounterPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:13:46 IST" name="reportWrapUp" finished-at="2023-06-29T02:13:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCounterPage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfCounterPage()[pri:3, instance:testcases.AppotmentCalendarTest@18078bef] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfCounterPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:13:46 IST" name="beforeMethod" finished-at="2023-06-29T02:13:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfCoursePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCoursePage()[pri:4, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:13:46 IST" name="ValidateClickTestingOfCoursePage" finished-at="2023-06-29T02:14:27 IST" duration-ms="40878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCoursePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:14:27 IST" name="reportWrapUp" finished-at="2023-06-29T02:14:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCoursePage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfCoursePage()[pri:4, instance:testcases.AppotmentCalendarTest@18078bef] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfCoursePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:14:27 IST" name="beforeMethod" finished-at="2023-06-29T02:14:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfScheduleAppointmentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfScheduleAppointmentPage()[pri:5, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:14:27 IST" name="ValidateClickTestingOfScheduleAppointmentPage" finished-at="2023-06-29T02:15:03 IST" duration-ms="36344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfScheduleAppointmentPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:15:03 IST" name="reportWrapUp" finished-at="2023-06-29T02:15:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfScheduleAppointmentPage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfScheduleAppointmentPage()[pri:5, instance:testcases.AppotmentCalendarTest@18078bef] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfScheduleAppointmentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfAppoitmentServicePage()[pri:6, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:15:03 IST" name="ValidateClickTestingOfAppoitmentServicePage" finished-at="2023-06-29T02:16:10 IST" duration-ms="66979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAppoitmentServicePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:15:03 IST" name="beforeMethod" finished-at="2023-06-29T02:15:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfAppoitmentServicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:16:10 IST" name="reportWrapUp" finished-at="2023-06-29T02:16:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAppoitmentServicePage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfAppoitmentServicePage()[pri:6, instance:testcases.AppotmentCalendarTest@18078bef] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfAppoitmentServicePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:16:10 IST" name="beforeMethod" finished-at="2023-06-29T02:16:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfTokenPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTokenPage()[pri:7, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:16:10 IST" name="ValidateClickTestingOfTokenPage" finished-at="2023-06-29T02:17:28 IST" duration-ms="78087" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTokenPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:17:28 IST" name="reportWrapUp" finished-at="2023-06-29T02:17:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTokenPage status=SUCCESS method=AppotmentCalendarTest.ValidateClickTestingOfTokenPage()[pri:7, instance:testcases.AppotmentCalendarTest@18078bef] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AppotmentCalendarTest.ValidateClickTestingOfTokenPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.AppotmentCalendarTest@18078bef]" started-at="2023-06-29T02:17:28 IST" name="closeBrowser" finished-at="2023-06-29T02:17:29 IST" duration-ms="542" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.AppotmentCalendarTest -->
      <class name="testcases.ExpenseTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:49:53 IST" name="setUp" finished-at="2023-06-29T02:50:01 IST" duration-ms="7999" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfAddExpensePage()[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:50:01 IST" name="ValidateClickTestingOfAddExpensePage" finished-at="2023-06-29T02:50:39 IST" duration-ms="37405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAddExpensePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:50:01 IST" name="beforeMethod" finished-at="2023-06-29T02:50:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfAddExpensePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:50:39 IST" name="reportWrapUp" finished-at="2023-06-29T02:50:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAddExpensePage status=SUCCESS method=ExpenseTest.ValidateClickTestingOfAddExpensePage()[pri:0, instance:testcases.ExpenseTest@145f66e3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfAddExpensePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:50:39 IST" name="beforeMethod" finished-at="2023-06-29T02:50:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfBulkUploadExpensePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfBulkUploadExpensePage()[pri:1, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:50:39 IST" name="ValidateClickTestingOfBulkUploadExpensePage" finished-at="2023-06-29T02:51:18 IST" duration-ms="39710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfBulkUploadExpensePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:51:18 IST" name="reportWrapUp" finished-at="2023-06-29T02:51:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfBulkUploadExpensePage status=SUCCESS method=ExpenseTest.ValidateClickTestingOfBulkUploadExpensePage()[pri:1, instance:testcases.ExpenseTest@145f66e3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfBulkUploadExpensePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfExpenseApprovalPage()[pri:2, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:51:18 IST" name="ValidateClickTestingOfExpenseApprovalPage" finished-at="2023-06-29T02:52:22 IST" duration-ms="63414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfExpenseApprovalPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:51:18 IST" name="beforeMethod" finished-at="2023-06-29T02:51:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpenseApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:52:22 IST" name="reportWrapUp" finished-at="2023-06-29T02:52:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfExpenseApprovalPage status=SUCCESS method=ExpenseTest.ValidateClickTestingOfExpenseApprovalPage()[pri:2, instance:testcases.ExpenseTest@145f66e3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpenseApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:52:22 IST" name="beforeMethod" finished-at="2023-06-29T02:52:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpenseReportsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfExpenseReportsPage()[pri:3, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:52:22 IST" name="ValidateClickTestingOfExpenseReportsPage" finished-at="2023-06-29T02:53:06 IST" duration-ms="44745" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfExpenseReportsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:53:06 IST" name="reportWrapUp" finished-at="2023-06-29T02:53:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfExpenseReportsPage status=SUCCESS method=ExpenseTest.ValidateClickTestingOfExpenseReportsPage()[pri:3, instance:testcases.ExpenseTest@145f66e3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpenseReportsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:53:06 IST" name="beforeMethod" finished-at="2023-06-29T02:53:07 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpensesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfExpensesPage()[pri:4, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:53:07 IST" name="ValidateClickTestingOfExpensesPage" finished-at="2023-06-29T02:54:21 IST" duration-ms="74156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfExpensesPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:54:21 IST" name="reportWrapUp" finished-at="2023-06-29T02:54:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfExpensesPage status=SUCCESS method=ExpenseTest.ValidateClickTestingOfExpensesPage()[pri:4, instance:testcases.ExpenseTest@145f66e3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpensesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:54:21 IST" name="beforeMethod" finished-at="2023-06-29T02:54:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfProjectPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProjectPage()[pri:5, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:54:21 IST" name="ValidateClickTestingOfProjectPage" finished-at="2023-06-29T02:55:42 IST" duration-ms="81726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProjectPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:55:42 IST" name="reportWrapUp" finished-at="2023-06-29T02:55:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProjectPage status=SUCCESS method=ExpenseTest.ValidateClickTestingOfProjectPage()[pri:5, instance:testcases.ExpenseTest@145f66e3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfProjectPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:55:42 IST" name="beforeMethod" finished-at="2023-06-29T02:55:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpenseDashBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfExpenseDashBoardPage()[pri:6, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:55:42 IST" name="ValidateClickTestingOfExpenseDashBoardPage" finished-at="2023-06-29T02:56:38 IST" duration-ms="55554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfExpenseDashBoardPage -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:56:38 IST" name="closeBrowser" finished-at="2023-06-29T02:56:38 IST" duration-ms="518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.ExpenseTest@145f66e3]" started-at="2023-06-29T02:56:38 IST" name="reportWrapUp" finished-at="2023-06-29T02:56:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfExpenseDashBoardPage status=SUCCESS method=ExpenseTest.ValidateClickTestingOfExpenseDashBoardPage()[pri:6, instance:testcases.ExpenseTest@145f66e3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.ExpenseTest.ValidateClickTestingOfExpenseDashBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.ExpenseTest -->
      <class name="testcases.HumanResourcesTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:46:15 IST" name="setUp" finished-at="2023-06-29T01:46:24 IST" duration-ms="9508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:46:24 IST" name="beforeMethod" finished-at="2023-06-29T01:46:24 IST" duration-ms="113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfAttendancePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAttendancePage()[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:46:24 IST" name="ValidateClickTestingOfAttendancePage" finished-at="2023-06-29T01:46:47 IST" duration-ms="22293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAttendancePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:46:47 IST" name="reportWrapUp" finished-at="2023-06-29T01:46:47 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAttendancePage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfAttendancePage()[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfAttendancePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:46:47 IST" name="beforeMethod" finished-at="2023-06-29T01:46:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfAttendanceApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAttendanceApprovalPage()[pri:1, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:46:47 IST" name="ValidateClickTestingOfAttendanceApprovalPage" finished-at="2023-06-29T01:47:26 IST" duration-ms="39849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAttendanceApprovalPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:47:26 IST" name="reportWrapUp" finished-at="2023-06-29T01:47:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAttendanceApprovalPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfAttendanceApprovalPage()[pri:1, instance:testcases.HumanResourcesTest@6cf0e0ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfAttendanceApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:47:26 IST" name="beforeMethod" finished-at="2023-06-29T01:47:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfCandidateListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCandidateListPage()[pri:2, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:47:26 IST" name="ValidateClickTestingOfCandidateListPage" finished-at="2023-06-29T01:48:58 IST" duration-ms="91828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCandidateListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:48:58 IST" name="reportWrapUp" finished-at="2023-06-29T01:48:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCandidateListPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfCandidateListPage()[pri:2, instance:testcases.HumanResourcesTest@6cf0e0ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfCandidateListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:48:58 IST" name="beforeMethod" finished-at="2023-06-29T01:48:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfCheckInFlagListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCheckInFlagListPage()[pri:3, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:48:58 IST" name="ValidateClickTestingOfCheckInFlagListPage" finished-at="2023-06-29T01:49:37 IST" duration-ms="38535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCheckInFlagListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:49:37 IST" name="reportWrapUp" finished-at="2023-06-29T01:49:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCheckInFlagListPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfCheckInFlagListPage()[pri:3, instance:testcases.HumanResourcesTest@6cf0e0ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfCheckInFlagListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:49:37 IST" name="beforeMethod" finished-at="2023-06-29T01:49:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfGroupListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfGroupListPage()[pri:5, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:49:37 IST" name="ValidateClickTestingOfGroupListPage" finished-at="2023-06-29T01:50:39 IST" duration-ms="61854" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:81)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:35)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:80)
at action.LoginAction.logoutLogin(LoginAction.java:25)
at testcases.HumanResourcesTest.ValidateClickTestingOfGroupListPage(HumanResourcesTest.java:90)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGroupListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:50:39 IST" name="reportWrapUp" finished-at="2023-06-29T01:50:40 IST" duration-ms="1067" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGroupListPage status=FAILURE method=HumanResourcesTest.ValidateClickTestingOfGroupListPage()[pri:5, instance:testcases.HumanResourcesTest@6cf0e0ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfGroupListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfHRReportPage()[pri:6, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:50:40 IST" name="ValidateClickTestingOfHRReportPage" finished-at="2023-06-29T01:51:00 IST" duration-ms="20486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfHRReportPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:50:40 IST" name="beforeMethod" finished-at="2023-06-29T01:50:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfHRReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:51:00 IST" name="reportWrapUp" finished-at="2023-06-29T01:51:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfHRReportPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfHRReportPage()[pri:6, instance:testcases.HumanResourcesTest@6cf0e0ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfHRReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:51:00 IST" name="beforeMethod" finished-at="2023-06-29T01:51:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfInductionDocumentListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfInductionDocumentListPage()[pri:7, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:51:00 IST" name="ValidateClickTestingOfInductionDocumentListPage" finished-at="2023-06-29T01:52:01 IST" duration-ms="60456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfInductionDocumentListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:52:01 IST" name="reportWrapUp" finished-at="2023-06-29T01:52:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfInductionDocumentListPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfInductionDocumentListPage()[pri:7, instance:testcases.HumanResourcesTest@6cf0e0ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfInductionDocumentListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfLeavePage()[pri:8, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:52:01 IST" name="ValidateClickTestingOfLeavePage" finished-at="2023-06-29T01:53:28 IST" duration-ms="86975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfLeavePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:52:01 IST" name="beforeMethod" finished-at="2023-06-29T01:52:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfLeavePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:53:28 IST" name="reportWrapUp" finished-at="2023-06-29T01:53:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfLeavePage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfLeavePage()[pri:8, instance:testcases.HumanResourcesTest@6cf0e0ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfLeavePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:53:28 IST" name="beforeMethod" finished-at="2023-06-29T01:53:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfLeaveApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfLeaveApprovalPage()[pri:9, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:53:28 IST" name="ValidateClickTestingOfLeaveApprovalPage" finished-at="2023-06-29T01:54:38 IST" duration-ms="70261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfLeaveApprovalPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:54:38 IST" name="reportWrapUp" finished-at="2023-06-29T01:54:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfLeaveApprovalPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfLeaveApprovalPage()[pri:9, instance:testcases.HumanResourcesTest@6cf0e0ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfLeaveApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfLeaveTypeListingPage()[pri:10, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:54:38 IST" name="ValidateClickTestingOfLeaveTypeListingPage" finished-at="2023-06-29T01:55:42 IST" duration-ms="64171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfLeaveTypeListingPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:54:38 IST" name="beforeMethod" finished-at="2023-06-29T01:54:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfLeaveTypeListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:55:42 IST" name="reportWrapUp" finished-at="2023-06-29T01:55:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfLeaveTypeListingPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfLeaveTypeListingPage()[pri:10, instance:testcases.HumanResourcesTest@6cf0e0ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfLeaveTypeListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:55:42 IST" name="beforeMethod" finished-at="2023-06-29T01:55:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfManageCheckInPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageCheckInPage()[pri:11, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:55:42 IST" name="ValidateClickTestingOfManageCheckInPage" finished-at="2023-06-29T01:56:34 IST" duration-ms="52216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageCheckInPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:56:34 IST" name="reportWrapUp" finished-at="2023-06-29T01:56:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageCheckInPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfManageCheckInPage()[pri:11, instance:testcases.HumanResourcesTest@6cf0e0ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfManageCheckInPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfTalentPoolListPage()[pri:12, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:56:34 IST" name="ValidateClickTestingOfTalentPoolListPage" finished-at="2023-06-29T01:57:47 IST" duration-ms="72803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTalentPoolListPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:56:34 IST" name="beforeMethod" finished-at="2023-06-29T01:56:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfTalentPoolListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:57:47 IST" name="reportWrapUp" finished-at="2023-06-29T01:57:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTalentPoolListPage status=SUCCESS method=HumanResourcesTest.ValidateClickTestingOfTalentPoolListPage()[pri:12, instance:testcases.HumanResourcesTest@6cf0e0ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HumanResourcesTest.ValidateClickTestingOfTalentPoolListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T01:57:47 IST" name="closeBrowser" finished-at="2023-06-29T01:57:48 IST" duration-ms="668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="close()[pri:0, instance:testcases.HumanResourcesTest@6cf0e0ba]" started-at="2023-06-29T05:36:19 IST" name="close" finished-at="2023-06-29T05:36:20 IST" duration-ms="1182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- testcases.HumanResourcesTest -->
      <class name="testcases.AssetManagementTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:17:29 IST" name="setUp" finished-at="2023-06-29T02:17:37 IST" duration-ms="8071" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:17:37 IST" name="beforeMethod" finished-at="2023-06-29T02:17:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfGroupListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfGroupListPage()[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:17:37 IST" name="ValidateClickTestingOfGroupListPage" finished-at="2023-06-29T02:18:40 IST" duration-ms="62700" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Save Button -  element not present]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Save Button -  element not present
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.click(WebBasePage.java:126)
at pageobjects.AssetManagementPage.clickOnSaveButton(AssetManagementPage.java:56)
at action.AssetManagementAstion.GoToGroupListPage(AssetManagementAstion.java:31)
at testcases.AssetManagementTest.ValidateClickTestingOfGroupListPage(AssetManagementTest.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGroupListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:18:40 IST" name="reportWrapUp" finished-at="2023-06-29T02:18:40 IST" duration-ms="262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGroupListPage status=FAILURE method=AssetManagementTest.ValidateClickTestingOfGroupListPage()[pri:0, instance:testcases.AssetManagementTest@799f10e1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfGroupListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfReturnListPage()[pri:1, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:18:40 IST" name="ValidateClickTestingOfReturnListPage" finished-at="2023-06-29T02:19:16 IST" duration-ms="36192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfReturnListPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:18:40 IST" name="beforeMethod" finished-at="2023-06-29T02:18:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfReturnListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:19:16 IST" name="reportWrapUp" finished-at="2023-06-29T02:19:16 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfReturnListPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfReturnListPage()[pri:1, instance:testcases.AssetManagementTest@799f10e1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfReturnListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:19:16 IST" name="beforeMethod" finished-at="2023-06-29T02:19:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfMissingProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfMissingProductPage()[pri:2, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:19:16 IST" name="ValidateClickTestingOfMissingProductPage" finished-at="2023-06-29T02:19:53 IST" duration-ms="36569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfMissingProductPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:19:53 IST" name="reportWrapUp" finished-at="2023-06-29T02:19:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfMissingProductPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfMissingProductPage()[pri:2, instance:testcases.AssetManagementTest@799f10e1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfMissingProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:19:53 IST" name="beforeMethod" finished-at="2023-06-29T02:19:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductsScanSummaryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProductsScanSummaryPage()[pri:3, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:19:53 IST" name="ValidateClickTestingOfProductsScanSummaryPage" finished-at="2023-06-29T02:20:29 IST" duration-ms="36125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductsScanSummaryPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:20:29 IST" name="reportWrapUp" finished-at="2023-06-29T02:20:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductsScanSummaryPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfProductsScanSummaryPage()[pri:3, instance:testcases.AssetManagementTest@799f10e1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductsScanSummaryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:20:29 IST" name="beforeMethod" finished-at="2023-06-29T02:20:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfRFIDAssetListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfRFIDAssetListingPage()[pri:4, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:20:29 IST" name="ValidateClickTestingOfRFIDAssetListingPage" finished-at="2023-06-29T02:21:06 IST" duration-ms="36888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfRFIDAssetListingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:21:06 IST" name="reportWrapUp" finished-at="2023-06-29T02:21:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfRFIDAssetListingPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfRFIDAssetListingPage()[pri:4, instance:testcases.AssetManagementTest@799f10e1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfRFIDAssetListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:21:06 IST" name="beforeMethod" finished-at="2023-06-29T02:21:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfScannedItemsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfScannedItemsPage()[pri:5, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:21:06 IST" name="ValidateClickTestingOfScannedItemsPage" finished-at="2023-06-29T02:21:55 IST" duration-ms="49558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfScannedItemsPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:21:55 IST" name="reportWrapUp" finished-at="2023-06-29T02:21:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfScannedItemsPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfScannedItemsPage()[pri:5, instance:testcases.AssetManagementTest@799f10e1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfScannedItemsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:21:55 IST" name="beforeMethod" finished-at="2023-06-29T02:21:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfScannedItemsStatusPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfScannedItemsStatusPage()[pri:6, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:21:55 IST" name="ValidateClickTestingOfScannedItemsStatusPage" finished-at="2023-06-29T02:22:30 IST" duration-ms="35099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfScannedItemsStatusPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:22:30 IST" name="reportWrapUp" finished-at="2023-06-29T02:22:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfScannedItemsStatusPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfScannedItemsStatusPage()[pri:6, instance:testcases.AssetManagementTest@799f10e1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfScannedItemsStatusPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:22:30 IST" name="beforeMethod" finished-at="2023-06-29T02:22:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfManageProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageProductPage()[pri:7, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:22:30 IST" name="ValidateClickTestingOfManageProductPage" finished-at="2023-06-29T02:25:20 IST" duration-ms="169603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageProductPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:25:20 IST" name="reportWrapUp" finished-at="2023-06-29T02:25:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageProductPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfManageProductPage()[pri:7, instance:testcases.AssetManagementTest@799f10e1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfManageProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:25:20 IST" name="beforeMethod" finished-at="2023-06-29T02:25:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductWriteOffPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProductWriteOffPage()[pri:8, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:25:20 IST" name="ValidateClickTestingOfProductWriteOffPage" finished-at="2023-06-29T02:26:11 IST" duration-ms="51296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductWriteOffPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:26:11 IST" name="reportWrapUp" finished-at="2023-06-29T02:26:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductWriteOffPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfProductWriteOffPage()[pri:8, instance:testcases.AssetManagementTest@799f10e1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductWriteOffPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfMyProductPage()[pri:9, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:26:11 IST" name="ValidateClickTestingOfMyProductPage" finished-at="2023-06-29T02:30:48 IST" duration-ms="276594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfMyProductPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:26:11 IST" name="beforeMethod" finished-at="2023-06-29T02:26:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfMyProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:30:48 IST" name="reportWrapUp" finished-at="2023-06-29T02:30:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfMyProductPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfMyProductPage()[pri:9, instance:testcases.AssetManagementTest@799f10e1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfMyProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:30:48 IST" name="beforeMethod" finished-at="2023-06-29T02:30:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProductReportPage()[pri:10, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:30:48 IST" name="ValidateClickTestingOfProductReportPage" finished-at="2023-06-29T02:31:32 IST" duration-ms="44619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:31:32 IST" name="reportWrapUp" finished-at="2023-06-29T02:31:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductReportPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfProductReportPage()[pri:10, instance:testcases.AssetManagementTest@799f10e1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:31:32 IST" name="beforeMethod" finished-at="2023-06-29T02:31:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductAssignmentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProductAssignmentPage()[pri:11, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:31:32 IST" name="ValidateClickTestingOfProductAssignmentPage" finished-at="2023-06-29T02:33:28 IST" duration-ms="115353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductAssignmentPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:33:28 IST" name="reportWrapUp" finished-at="2023-06-29T02:33:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductAssignmentPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfProductAssignmentPage()[pri:11, instance:testcases.AssetManagementTest@799f10e1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductAssignmentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:33:28 IST" name="beforeMethod" finished-at="2023-06-29T02:33:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductContainerPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProductContainerPage()[pri:12, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:33:28 IST" name="ValidateClickTestingOfProductContainerPage" finished-at="2023-06-29T02:35:23 IST" duration-ms="115379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductContainerPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:35:23 IST" name="reportWrapUp" finished-at="2023-06-29T02:35:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductContainerPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfProductContainerPage()[pri:12, instance:testcases.AssetManagementTest@799f10e1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductContainerPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfProductTyperPage()[pri:13, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:35:23 IST" name="ValidateClickTestingOfProductTyperPage" finished-at="2023-06-29T02:36:28 IST" duration-ms="64459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductTyperPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:35:23 IST" name="beforeMethod" finished-at="2023-06-29T02:35:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductTyperPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:36:28 IST" name="reportWrapUp" finished-at="2023-06-29T02:36:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductTyperPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfProductTyperPage()[pri:13, instance:testcases.AssetManagementTest@799f10e1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfProductTyperPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfDashboardPage()[pri:14, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:36:28 IST" name="ValidateClickTestingOfDashboardPage" finished-at="2023-06-29T02:37:18 IST" duration-ms="50118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfDashboardPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:36:28 IST" name="beforeMethod" finished-at="2023-06-29T02:36:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfDashboardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:37:18 IST" name="reportWrapUp" finished-at="2023-06-29T02:37:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfDashboardPage status=SUCCESS method=AssetManagementTest.ValidateClickTestingOfDashboardPage()[pri:14, instance:testcases.AssetManagementTest@799f10e1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AssetManagementTest.ValidateClickTestingOfDashboardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.AssetManagementTest@799f10e1]" started-at="2023-06-29T02:37:18 IST" name="closeBrowser" finished-at="2023-06-29T02:37:18 IST" duration-ms="714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.AssetManagementTest -->
      <class name="testcases.HRManagementTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:53:15 IST" name="setUp" finished-at="2023-06-29T03:53:23 IST" duration-ms="8316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:53:23 IST" name="beforeMethod" finished-at="2023-06-29T03:53:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendancePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAttendancePage()[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:53:23 IST" name="ValidateClickTestingOfAttendancePage" finished-at="2023-06-29T03:53:45 IST" duration-ms="21319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAttendancePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:53:45 IST" name="reportWrapUp" finished-at="2023-06-29T03:53:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAttendancePage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfAttendancePage()[pri:0, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendancePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:53:45 IST" name="beforeMethod" finished-at="2023-06-29T03:53:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendanceCardReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAttendanceCardReportPage()[pri:1, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:53:45 IST" name="ValidateClickTestingOfAttendanceCardReportPage" finished-at="2023-06-29T03:54:20 IST" duration-ms="35682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAttendanceCardReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:54:20 IST" name="reportWrapUp" finished-at="2023-06-29T03:54:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAttendanceCardReportPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfAttendanceCardReportPage()[pri:1, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendanceCardReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:54:20 IST" name="beforeMethod" finished-at="2023-06-29T03:54:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendanceInOutReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAttendanceInOutReportPage()[pri:2, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:54:20 IST" name="ValidateClickTestingOfAttendanceInOutReportPage" finished-at="2023-06-29T03:54:57 IST" duration-ms="36076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAttendanceInOutReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:54:57 IST" name="reportWrapUp" finished-at="2023-06-29T03:54:57 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAttendanceInOutReportPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfAttendanceInOutReportPage()[pri:2, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendanceInOutReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:54:57 IST" name="beforeMethod" finished-at="2023-06-29T03:54:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendanceApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAttendanceApprovalPage()[pri:3, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:54:57 IST" name="ValidateClickTestingOfAttendanceApprovalPage" finished-at="2023-06-29T03:55:33 IST" duration-ms="36361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAttendanceApprovalPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:55:33 IST" name="reportWrapUp" finished-at="2023-06-29T03:55:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAttendanceApprovalPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfAttendanceApprovalPage()[pri:3, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfAttendanceApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfCheckInFlagListPage()[pri:4, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:55:33 IST" name="ValidateClickTestingOfCheckInFlagListPage" finished-at="2023-06-29T03:56:08 IST" duration-ms="35463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCheckInFlagListPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:55:33 IST" name="beforeMethod" finished-at="2023-06-29T03:55:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfCheckInFlagListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:56:08 IST" name="reportWrapUp" finished-at="2023-06-29T03:56:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCheckInFlagListPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfCheckInFlagListPage()[pri:4, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfCheckInFlagListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:56:08 IST" name="beforeMethod" finished-at="2023-06-29T03:56:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfDisputeApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfDisputeApprovalPage()[pri:5, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:56:08 IST" name="ValidateClickTestingOfDisputeApprovalPage" finished-at="2023-06-29T03:56:46 IST" duration-ms="37213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfDisputeApprovalPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:56:46 IST" name="reportWrapUp" finished-at="2023-06-29T03:56:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfDisputeApprovalPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfDisputeApprovalPage()[pri:5, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfDisputeApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:56:46 IST" name="beforeMethod" finished-at="2023-06-29T03:56:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfCheckInOutDisputePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCheckInOutDisputePage()[pri:6, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:56:46 IST" name="ValidateClickTestingOfCheckInOutDisputePage" finished-at="2023-06-29T03:57:22 IST" duration-ms="36871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCheckInOutDisputePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:57:22 IST" name="reportWrapUp" finished-at="2023-06-29T03:57:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCheckInOutDisputePage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfCheckInOutDisputePage()[pri:6, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfCheckInOutDisputePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:57:22 IST" name="beforeMethod" finished-at="2023-06-29T03:57:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfGroupListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfGroupListPage()[pri:7, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:57:22 IST" name="ValidateClickTestingOfGroupListPage" finished-at="2023-06-29T03:58:16 IST" duration-ms="53341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfGroupListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:58:16 IST" name="reportWrapUp" finished-at="2023-06-29T03:58:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfGroupListPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfGroupListPage()[pri:7, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfGroupListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:58:16 IST" name="beforeMethod" finished-at="2023-06-29T03:58:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfHrReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfHrReportPage()[pri:8, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:58:16 IST" name="ValidateClickTestingOfHrReportPage" finished-at="2023-06-29T03:59:02 IST" duration-ms="46069" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfHrReportPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:59:02 IST" name="reportWrapUp" finished-at="2023-06-29T03:59:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfHrReportPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfHrReportPage()[pri:8, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfHrReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:59:02 IST" name="beforeMethod" finished-at="2023-06-29T03:59:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfInductionDocumentListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfInductionDocumentListPage()[pri:9, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T03:59:02 IST" name="ValidateClickTestingOfInductionDocumentListPage" finished-at="2023-06-29T04:00:02 IST" duration-ms="60259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfInductionDocumentListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:00:02 IST" name="reportWrapUp" finished-at="2023-06-29T04:00:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfInductionDocumentListPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfInductionDocumentListPage()[pri:9, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfInductionDocumentListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfLeavePage()[pri:10, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:00:02 IST" name="ValidateClickTestingOfLeavePage" finished-at="2023-06-29T04:01:27 IST" duration-ms="84471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfLeavePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:00:02 IST" name="beforeMethod" finished-at="2023-06-29T04:00:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfLeavePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:01:27 IST" name="reportWrapUp" finished-at="2023-06-29T04:01:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfLeavePage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfLeavePage()[pri:10, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfLeavePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:01:27 IST" name="beforeMethod" finished-at="2023-06-29T04:01:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfLeaveApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfLeaveApprovalPage()[pri:11, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:01:27 IST" name="ValidateClickTestingOfLeaveApprovalPage" finished-at="2023-06-29T04:02:38 IST" duration-ms="71161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfLeaveApprovalPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:02:38 IST" name="reportWrapUp" finished-at="2023-06-29T04:02:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfLeaveApprovalPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfLeaveApprovalPage()[pri:11, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfLeaveApprovalPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfLeaveTypeListingPage()[pri:12, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:02:38 IST" name="ValidateClickTestingOfLeaveTypeListingPage" finished-at="2023-06-29T04:03:41 IST" duration-ms="62903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfLeaveTypeListingPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:02:38 IST" name="beforeMethod" finished-at="2023-06-29T04:02:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfLeaveTypeListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:03:41 IST" name="reportWrapUp" finished-at="2023-06-29T04:03:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfLeaveTypeListingPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfLeaveTypeListingPage()[pri:12, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfLeaveTypeListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:03:41 IST" name="beforeMethod" finished-at="2023-06-29T04:03:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfManageCheckInPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageCheckInPage()[pri:13, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:03:41 IST" name="ValidateClickTestingOfManageCheckInPage" finished-at="2023-06-29T04:04:30 IST" duration-ms="49432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageCheckInPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:04:30 IST" name="reportWrapUp" finished-at="2023-06-29T04:04:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageCheckInPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfManageCheckInPage()[pri:13, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfManageCheckInPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:04:30 IST" name="beforeMethod" finished-at="2023-06-29T04:04:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfOffboardEmployeeListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfOffboardEmployeeListPage()[pri:14, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:04:30 IST" name="ValidateClickTestingOfOffboardEmployeeListPage" finished-at="2023-06-29T04:05:33 IST" duration-ms="63298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfOffboardEmployeeListPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:05:33 IST" name="reportWrapUp" finished-at="2023-06-29T04:05:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfOffboardEmployeeListPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfOffboardEmployeeListPage()[pri:14, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfOffboardEmployeeListPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:05:33 IST" name="beforeMethod" finished-at="2023-06-29T04:05:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfPolicyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfPolicyPage()[pri:15, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:05:33 IST" name="ValidateClickTestingOfPolicyPage" finished-at="2023-06-29T04:06:39 IST" duration-ms="65879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfPolicyPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:06:39 IST" name="reportWrapUp" finished-at="2023-06-29T04:06:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfPolicyPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfPolicyPage()[pri:15, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfPolicyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:06:39 IST" name="beforeMethod" finished-at="2023-06-29T04:06:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfResignationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfResignationPage()[pri:16, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:06:39 IST" name="ValidateClickTestingOfResignationPage" finished-at="2023-06-29T04:07:40 IST" duration-ms="60782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfResignationPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:07:40 IST" name="reportWrapUp" finished-at="2023-06-29T04:07:40 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfResignationPage status=SUCCESS method=HRManagementTest.ValidateClickTestingOfResignationPage()[pri:16, instance:testcases.HRManagementTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.HRManagementTest.ValidateClickTestingOfResignationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.HRManagementTest@6f1de4c7]" started-at="2023-06-29T04:07:40 IST" name="closeBrowser" finished-at="2023-06-29T04:07:41 IST" duration-ms="1246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.HRManagementTest -->
      <class name="testcases.TicketingTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:07:41 IST" name="setUp" finished-at="2023-06-29T04:07:53 IST" duration-ms="11822" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ValidateClickTestingOfTicketingPage()[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:07:53 IST" name="ValidateClickTestingOfTicketingPage" finished-at="2023-06-29T04:10:56 IST" duration-ms="182669" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTicketingPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:07:53 IST" name="beforeMethod" finished-at="2023-06-29T04:07:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:10:56 IST" name="reportWrapUp" finished-at="2023-06-29T04:10:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTicketingPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfTicketingPage()[pri:0, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:10:56 IST" name="beforeMethod" finished-at="2023-06-29T04:10:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfAddTicketPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAddTicketPage()[pri:1, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:10:56 IST" name="ValidateClickTestingOfAddTicketPage" finished-at="2023-06-29T04:11:54 IST" duration-ms="58519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAddTicketPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:11:54 IST" name="reportWrapUp" finished-at="2023-06-29T04:11:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAddTicketPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfAddTicketPage()[pri:1, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfAddTicketPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:11:54 IST" name="beforeMethod" finished-at="2023-06-29T04:11:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfUnassignedTicketPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfUnassignedTicketPage()[pri:2, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:11:54 IST" name="ValidateClickTestingOfUnassignedTicketPage" finished-at="2023-06-29T04:15:07 IST" duration-ms="193180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfUnassignedTicketPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:15:07 IST" name="reportWrapUp" finished-at="2023-06-29T04:15:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfUnassignedTicketPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfUnassignedTicketPage()[pri:2, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfUnassignedTicketPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfTicketFeedbackPage()[pri:3, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:15:07 IST" name="ValidateClickTestingOfTicketFeedbackPage" finished-at="2023-06-29T04:16:22 IST" duration-ms="74643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTicketFeedbackPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:15:07 IST" name="beforeMethod" finished-at="2023-06-29T04:15:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketFeedbackPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:16:22 IST" name="reportWrapUp" finished-at="2023-06-29T04:16:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTicketFeedbackPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfTicketFeedbackPage()[pri:3, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketFeedbackPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfCannedReplyPage()[pri:4, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:16:22 IST" name="ValidateClickTestingOfCannedReplyPage" finished-at="2023-06-29T04:17:32 IST" duration-ms="70250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCannedReplyPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:16:22 IST" name="beforeMethod" finished-at="2023-06-29T04:16:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfCannedReplyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:17:32 IST" name="reportWrapUp" finished-at="2023-06-29T04:17:32 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCannedReplyPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfCannedReplyPage()[pri:4, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfCannedReplyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfTicketReportPage()[pri:5, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:17:32 IST" name="ValidateClickTestingOfTicketReportPage" finished-at="2023-06-29T04:18:21 IST" duration-ms="48406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTicketReportPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:17:32 IST" name="beforeMethod" finished-at="2023-06-29T04:17:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:18:21 IST" name="reportWrapUp" finished-at="2023-06-29T04:18:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTicketReportPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfTicketReportPage()[pri:5, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:18:21 IST" name="beforeMethod" finished-at="2023-06-29T04:18:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfManageServiceBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageServiceBoardPage()[pri:6, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:18:21 IST" name="ValidateClickTestingOfManageServiceBoardPage" finished-at="2023-06-29T04:19:49 IST" duration-ms="87714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageServiceBoardPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:19:49 IST" name="reportWrapUp" finished-at="2023-06-29T04:19:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageServiceBoardPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfManageServiceBoardPage()[pri:6, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfManageServiceBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:19:49 IST" name="beforeMethod" finished-at="2023-06-29T04:19:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfAddticketGroupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfAddticketGroupPage()[pri:7, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:19:49 IST" name="ValidateClickTestingOfAddticketGroupPage" finished-at="2023-06-29T04:20:40 IST" duration-ms="51941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfAddticketGroupPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:20:40 IST" name="reportWrapUp" finished-at="2023-06-29T04:20:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfAddticketGroupPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfAddticketGroupPage()[pri:7, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfAddticketGroupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:20:40 IST" name="beforeMethod" finished-at="2023-06-29T04:20:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketGroupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTicketGroupPage()[pri:8, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:20:40 IST" name="ValidateClickTestingOfTicketGroupPage" finished-at="2023-06-29T04:22:09 IST" duration-ms="88964" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTicketGroupPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:22:09 IST" name="reportWrapUp" finished-at="2023-06-29T04:22:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTicketGroupPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfTicketGroupPage()[pri:8, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketGroupPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:22:09 IST" name="beforeMethod" finished-at="2023-06-29T04:22:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfSLAPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfSLAPage()[pri:9, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:22:09 IST" name="ValidateClickTestingOfSLAPage" finished-at="2023-06-29T04:23:35 IST" duration-ms="85493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfSLAPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:23:35 IST" name="reportWrapUp" finished-at="2023-06-29T04:23:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfSLAPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfSLAPage()[pri:9, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfSLAPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:23:35 IST" name="beforeMethod" finished-at="2023-06-29T04:23:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfKnowledgeBasePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfKnowledgeBasePage()[pri:10, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:23:35 IST" name="ValidateClickTestingOfKnowledgeBasePage" finished-at="2023-06-29T04:25:07 IST" duration-ms="92160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfKnowledgeBasePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:25:07 IST" name="reportWrapUp" finished-at="2023-06-29T04:25:07 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfKnowledgeBasePage status=SUCCESS method=TicketingTest.ValidateClickTestingOfKnowledgeBasePage()[pri:10, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfKnowledgeBasePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:25:07 IST" name="beforeMethod" finished-at="2023-06-29T04:25:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfManageCategoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageCategoryPage()[pri:11, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:25:07 IST" name="ValidateClickTestingOfManageCategoryPage" finished-at="2023-06-29T04:26:03 IST" duration-ms="55540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageCategoryPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:26:03 IST" name="reportWrapUp" finished-at="2023-06-29T04:26:03 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageCategoryPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfManageCategoryPage()[pri:11, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfManageCategoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:26:03 IST" name="beforeMethod" finished-at="2023-06-29T04:26:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfMyArticlesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfMyArticlesPage()[pri:12, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:26:03 IST" name="ValidateClickTestingOfMyArticlesPage" finished-at="2023-06-29T04:27:36 IST" duration-ms="93782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfMyArticlesPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:27:36 IST" name="reportWrapUp" finished-at="2023-06-29T04:27:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfMyArticlesPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfMyArticlesPage()[pri:12, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfMyArticlesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:27:36 IST" name="beforeMethod" finished-at="2023-06-29T04:27:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfProductPage()[pri:13, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:27:36 IST" name="ValidateClickTestingOfProductPage" finished-at="2023-06-29T04:29:00 IST" duration-ms="83966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfProductPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:29:00 IST" name="reportWrapUp" finished-at="2023-06-29T04:29:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfProductPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfProductPage()[pri:13, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfProductPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:29:00 IST" name="beforeMethod" finished-at="2023-06-29T04:29:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfCallCenterSyncStatusPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfCallCenterSyncStatusPage()[pri:14, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:29:00 IST" name="ValidateClickTestingOfCallCenterSyncStatusPage" finished-at="2023-06-29T04:29:40 IST" duration-ms="39226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfCallCenterSyncStatusPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:29:40 IST" name="reportWrapUp" finished-at="2023-06-29T04:29:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfCallCenterSyncStatusPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfCallCenterSyncStatusPage()[pri:14, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfCallCenterSyncStatusPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfFormBuilderPage()[pri:15, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:29:40 IST" name="ValidateClickTestingOfFormBuilderPage" finished-at="2023-06-29T04:30:32 IST" duration-ms="52517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfFormBuilderPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:29:40 IST" name="beforeMethod" finished-at="2023-06-29T04:29:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfFormBuilderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:30:32 IST" name="reportWrapUp" finished-at="2023-06-29T04:30:32 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfFormBuilderPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfFormBuilderPage()[pri:15, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfFormBuilderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfFSMReportPage()[pri:16, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:30:32 IST" name="ValidateClickTestingOfFSMReportPage" finished-at="2023-06-29T04:31:12 IST" duration-ms="40033" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfFSMReportPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:30:32 IST" name="beforeMethod" finished-at="2023-06-29T04:30:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfFSMReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:31:12 IST" name="reportWrapUp" finished-at="2023-06-29T04:31:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfFSMReportPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfFSMReportPage()[pri:16, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfFSMReportPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:31:12 IST" name="beforeMethod" finished-at="2023-06-29T04:31:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfManageMapConfigurationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfManageMapConfigurationPage()[pri:17, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:31:12 IST" name="ValidateClickTestingOfManageMapConfigurationPage" finished-at="2023-06-29T04:32:08 IST" duration-ms="56002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfManageMapConfigurationPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:32:08 IST" name="reportWrapUp" finished-at="2023-06-29T04:32:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfManageMapConfigurationPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfManageMapConfigurationPage()[pri:17, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfManageMapConfigurationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:32:08 IST" name="beforeMethod" finished-at="2023-06-29T04:32:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfMapExtentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfMapExtentPage()[pri:18, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:32:08 IST" name="ValidateClickTestingOfMapExtentPage" finished-at="2023-06-29T04:32:51 IST" duration-ms="42927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfMapExtentPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:32:51 IST" name="reportWrapUp" finished-at="2023-06-29T04:32:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfMapExtentPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfMapExtentPage()[pri:18, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfMapExtentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:32:51 IST" name="beforeMethod" finished-at="2023-06-29T04:32:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfServiceAppointmentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfServiceAppointmentPage()[pri:19, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:32:51 IST" name="ValidateClickTestingOfServiceAppointmentPage" finished-at="2023-06-29T04:35:06 IST" duration-ms="135269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfServiceAppointmentPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:35:06 IST" name="reportWrapUp" finished-at="2023-06-29T04:35:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfServiceAppointmentPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfServiceAppointmentPage()[pri:19, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfServiceAppointmentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfServiceCrewPage()[pri:20, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:35:06 IST" name="ValidateClickTestingOfServiceCrewPage" finished-at="2023-06-29T04:36:48 IST" duration-ms="101566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfServiceCrewPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:35:06 IST" name="beforeMethod" finished-at="2023-06-29T04:35:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfServiceCrewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:36:48 IST" name="reportWrapUp" finished-at="2023-06-29T04:36:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfServiceCrewPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfServiceCrewPage()[pri:20, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfServiceCrewPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:36:48 IST" name="beforeMethod" finished-at="2023-06-29T04:36:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTechTrackingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTechTrackingPage()[pri:21, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:36:48 IST" name="ValidateClickTestingOfTechTrackingPage" finished-at="2023-06-29T04:37:25 IST" duration-ms="37441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTechTrackingPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:37:25 IST" name="reportWrapUp" finished-at="2023-06-29T04:37:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTechTrackingPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfTechTrackingPage()[pri:21, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTechTrackingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfTransformPendingPage()[pri:22, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:37:25 IST" name="ValidateClickTestingOfTransformPendingPage" finished-at="2023-06-29T04:38:03 IST" duration-ms="38018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTransformPendingPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:37:25 IST" name="beforeMethod" finished-at="2023-06-29T04:37:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTransformPendingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:38:03 IST" name="reportWrapUp" finished-at="2023-06-29T04:38:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTransformPendingPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfTransformPendingPage()[pri:22, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTransformPendingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfWorkTypeListingPage()[pri:23, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:38:03 IST" name="ValidateClickTestingOfWorkTypeListingPage" finished-at="2023-06-29T04:39:43 IST" duration-ms="99845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfWorkTypeListingPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:38:03 IST" name="beforeMethod" finished-at="2023-06-29T04:38:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfWorkTypeListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:39:43 IST" name="reportWrapUp" finished-at="2023-06-29T04:39:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfWorkTypeListingPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfWorkTypeListingPage()[pri:23, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfWorkTypeListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfZoneManagementPage()[pri:24, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:39:43 IST" name="ValidateClickTestingOfZoneManagementPage" finished-at="2023-06-29T04:40:33 IST" duration-ms="50231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfZoneManagementPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:39:43 IST" name="beforeMethod" finished-at="2023-06-29T04:39:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfZoneManagementPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:40:33 IST" name="reportWrapUp" finished-at="2023-06-29T04:40:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfZoneManagementPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfZoneManagementPage()[pri:24, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfZoneManagementPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfDashBoardPage()[pri:25, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:40:34 IST" name="ValidateClickTestingOfDashBoardPage" finished-at="2023-06-29T04:41:19 IST" duration-ms="45596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfDashBoardPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:40:34 IST" name="beforeMethod" finished-at="2023-06-29T04:40:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfDashBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:41:19 IST" name="reportWrapUp" finished-at="2023-06-29T04:41:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfDashBoardPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfDashBoardPage()[pri:25, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfDashBoardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:41:19 IST" name="beforeMethod" finished-at="2023-06-29T04:41:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketTypeListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfTicketTypeListingPage()[pri:26, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:41:19 IST" name="ValidateClickTestingOfTicketTypeListingPage" finished-at="2023-06-29T04:42:36 IST" duration-ms="76770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfTicketTypeListingPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:42:36 IST" name="beforeMethod" finished-at="2023-06-29T04:42:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfWorkOrderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:42:36 IST" name="reportWrapUp" finished-at="2023-06-29T04:42:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfTicketTypeListingPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfTicketTypeListingPage()[pri:26, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfTicketTypeListingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfWorkOrderPage()[pri:27, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:42:36 IST" name="ValidateClickTestingOfWorkOrderPage" finished-at="2023-06-29T04:44:47 IST" duration-ms="131023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfWorkOrderPage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:44:47 IST" name="reportWrapUp" finished-at="2023-06-29T04:44:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfWorkOrderPage status=SUCCESS method=TicketingTest.ValidateClickTestingOfWorkOrderPage()[pri:27, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfWorkOrderPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:44:47 IST" name="beforeMethod" finished-at="2023-06-29T04:44:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfIncidentTypePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidateClickTestingOfIncidentTypePage()[pri:28, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:44:47 IST" name="ValidateClickTestingOfIncidentTypePage" finished-at="2023-06-29T04:45:55 IST" duration-ms="67924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfIncidentTypePage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:45:55 IST" name="reportWrapUp" finished-at="2023-06-29T04:45:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfIncidentTypePage status=SUCCESS method=TicketingTest.ValidateClickTestingOfIncidentTypePage()[pri:28, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfIncidentTypePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ValidateClickTestingOfResourceTypePage()[pri:29, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:45:55 IST" name="ValidateClickTestingOfResourceTypePage" finished-at="2023-06-29T04:47:04 IST" duration-ms="68879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateClickTestingOfResourceTypePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:45:55 IST" name="beforeMethod" finished-at="2023-06-29T04:45:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfResourceTypePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:47:04 IST" name="reportWrapUp" finished-at="2023-06-29T04:47:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateClickTestingOfResourceTypePage status=SUCCESS method=TicketingTest.ValidateClickTestingOfResourceTypePage()[pri:29, instance:testcases.TicketingTest@459e9125] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingTest.ValidateClickTestingOfResourceTypePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.TicketingTest@459e9125]" started-at="2023-06-29T04:47:04 IST" name="closeBrowser" finished-at="2023-06-29T04:47:05 IST" duration-ms="1252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.TicketingTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
